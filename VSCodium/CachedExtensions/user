{"input":{"ourVersion":"1.59.0","ourProductDate":"2021-08-06T00:01:27.668Z","commit":"379476f0e13988d90fab105c5c19e7abc8b1dea8","locale":"en","devMode":false,"absoluteFolderPath":"/home/mipy/.vscode-oss/extensions","isBuiltin":false,"isUnderDevelopment":false,"translations":{},"mtime":1629077137503},"result":[{"name":"better-toml","displayName":"Better TOML","description":"Better TOML Language support","author":"Gigih Aji Ibrahim <bungcip@gmail.com>","icon":"icon.png","version":"0.3.2","publisher":"bungcip","license":"MIT","homepage":"https://github.com/bungcip/better-toml/blob/master/README.md","repository":{"type":"git","url":"https://github.com/bungcip/better-toml.git"},"bugs":{"url":"https://github.com/bungcip/better-toml/issues","email":"bungcip@gmail.com"},"engines":{"vscode":"^1.18.0"},"categories":["Languages"],"keywords":["toml"],"activationEvents":["onLanguage:toml"],"main":"./out/src/extension","contributes":{"languages":[{"id":"toml","aliases":["TOML","toml"],"extensions":[".toml"],"mimetypes":["text/x-toml"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"toml","scopeName":"source.toml","path":"./syntaxes/TOML.tmLanguage"},{"scopeName":"markdown.toml.frontmatter.codeblock","path":"./syntaxes/TOML.frontMatter.tmLanguage","injectTo":["text.html.markdown"]}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"vscode-languageclient":"^2.6.0","vscode-languageserver":"^2.6.0","toml":"^2.3.3"},"devDependencies":{"typescript":"2.5.2","vscode":"^1.0.3","mocha":"^3.1.2","@types/node":"^6.0.46","@types/mocha":"^2.2.32"},"uuid":"464f4ac7-af65-4aa9-9907-4ba7fa419085","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"bungcip.better-toml","identifier":{"value":"bungcip.better-toml","_lower":"bungcip.better-toml"},"extensionLocation":{"$mid":1,"fsPath":"/home/mipy/.vscode-oss/extensions/bungcip.better-toml-0.3.2","path":"/home/mipy/.vscode-oss/extensions/bungcip.better-toml-0.3.2","scheme":"file"}},{"name":"mariana-nord","displayName":"Mariana Nord","description":"Hybrid theme between Sublime's Mariana and Nord.","version":"0.0.1","publisher":"LuisGalicia","engines":{"vscode":"^1.21.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"Mariana Nord","uiTheme":"vs-dark","path":"./themes/Mariana Nord-color-theme.json"}]},"isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"LuisGalicia.mariana-nord","identifier":{"value":"LuisGalicia.mariana-nord","_lower":"luisgalicia.mariana-nord"},"extensionLocation":{"$mid":1,"fsPath":"/home/mipy/.vscode-oss/extensions/luisgalicia.mariana-nord-0.0.1","path":"/home/mipy/.vscode-oss/extensions/luisgalicia.mariana-nord-0.0.1","scheme":"file"}},{"name":"rust-analyzer","displayName":"rust-analyzer","description":"An alternative rust language server to the RLS","preview":true,"private":true,"icon":"icon.png","version":"0.2.694","releaseTag":"2021-08-02","publisher":"matklad","repository":{"url":"https://github.com/rust-analyzer/rust-analyzer.git","type":"git"},"homepage":"https://rust-analyzer.github.io/","license":"MIT OR Apache-2.0","keywords":["rust"],"categories":["Programming Languages"],"engines":{"vscode":"^1.57.0"},"scripts":{"vscode:prepublish":"tsc && rollup -c","package":"vsce package -o rust-analyzer.vsix","build":"tsc","watch":"tsc --watch","lint":"tsfmt --verify && eslint -c .eslintrc.js --ext ts ./src ./tests","fix":" tsfmt -r       && eslint -c .eslintrc.js --ext ts ./src ./tests --fix","pretest":"npm run build","test":"node ./out/tests/runTests.js"},"dependencies":{"https-proxy-agent":"^5.0.0","node-fetch":"^2.6.1","vscode-languageclient":"^7.1.0-next.5"},"devDependencies":{"@rollup/plugin-commonjs":"^17.0.0","@rollup/plugin-node-resolve":"^13.0.0","@types/glob":"^7.1.4","@types/mocha":"^8.2.3","@types/node":"~14.17.5","@types/node-fetch":"^2.5.11","@types/vscode":"^1.57.0","@typescript-eslint/eslint-plugin":"^4.28.2","@typescript-eslint/parser":"^4.28.2","eslint":"^7.30.0","glob":"^7.1.6","mocha":"^9.0.2","rollup":"^2.51.1","tslib":"^2.3.0","typescript":"^4.3.5","typescript-formatter":"^7.2.2","vsce":"^1.95.1","vscode-test":"^1.5.1"},"activationEvents":["onLanguage:rust","onCommand:rust-analyzer.analyzerStatus","onCommand:rust-analyzer.memoryUsage","onCommand:rust-analyzer.reloadWorkspace","workspaceContains:**/Cargo.toml"],"main":"./out/src/main","contributes":{"taskDefinitions":[{"type":"cargo","required":["command"],"properties":{"label":{"type":"string"},"command":{"type":"string"},"args":{"type":"array","items":{"type":"string"}},"env":{"type":"object","patternProperties":{".+":{"type":"string"}}}}}],"commands":[{"command":"rust-analyzer.syntaxTree","title":"Show Syntax Tree","category":"Rust Analyzer"},{"command":"rust-analyzer.viewHir","title":"View Hir","category":"Rust Analyzer"},{"command":"rust-analyzer.viewItemTree","title":"Debug ItemTree","category":"Rust Analyzer"},{"command":"rust-analyzer.viewCrateGraph","title":"View Crate Graph","category":"Rust Analyzer"},{"command":"rust-analyzer.viewFullCrateGraph","title":"View Crate Graph (Full)","category":"Rust Analyzer"},{"command":"rust-analyzer.expandMacro","title":"Expand macro recursively","category":"Rust Analyzer"},{"command":"rust-analyzer.matchingBrace","title":"Find matching brace","category":"Rust Analyzer"},{"command":"rust-analyzer.parentModule","title":"Locate parent module","category":"Rust Analyzer"},{"command":"rust-analyzer.joinLines","title":"Join lines","category":"Rust Analyzer"},{"command":"rust-analyzer.run","title":"Run","category":"Rust Analyzer"},{"command":"rust-analyzer.copyRunCommandLine","title":"Copy Run Command Line","category":"Rust Analyzer"},{"command":"rust-analyzer.debug","title":"Debug","category":"Rust Analyzer"},{"command":"rust-analyzer.newDebugConfig","title":"Generate launch configuration","category":"Rust Analyzer"},{"command":"rust-analyzer.analyzerStatus","title":"Status","category":"Rust Analyzer"},{"command":"rust-analyzer.memoryUsage","title":"Memory Usage (Clears Database)","category":"Rust Analyzer"},{"command":"rust-analyzer.reloadWorkspace","title":"Reload workspace","category":"Rust Analyzer"},{"command":"rust-analyzer.reload","title":"Restart server","category":"Rust Analyzer"},{"command":"rust-analyzer.updateGithubToken","title":"Update Github API token","category":"Rust Analyzer"},{"command":"rust-analyzer.onEnter","title":"Enhanced enter key","category":"Rust Analyzer"},{"command":"rust-analyzer.ssr","title":"Structural Search Replace","category":"Rust Analyzer"},{"command":"rust-analyzer.serverVersion","title":"Show RA Version","category":"Rust Analyzer"},{"command":"rust-analyzer.toggleInlayHints","title":"Toggle inlay hints","category":"Rust Analyzer"},{"command":"rust-analyzer.openDocs","title":"Open docs under cursor","category":"Rust Analyzer"},{"command":"rust-analyzer.openCargoToml","title":"Open Cargo.toml","category":"Rust Analyzer"},{"command":"rust-analyzer.peekTests","title":"Peek related tests","category":"Rust Analyzer"},{"command":"rust-analyzer.moveItemUp","title":"Move item up","category":"Rust Analyzer"},{"command":"rust-analyzer.moveItemDown","title":"Move item down","category":"Rust Analyzer"}],"keybindings":[{"command":"rust-analyzer.parentModule","key":"ctrl+shift+u","when":"editorTextFocus && editorLangId == rust"},{"command":"rust-analyzer.matchingBrace","key":"ctrl+shift+m","when":"editorTextFocus && editorLangId == rust"},{"command":"rust-analyzer.joinLines","key":"ctrl+shift+j","when":"editorTextFocus && editorLangId == rust"}],"configuration":{"type":"object","title":"Rust Analyzer","properties":{"rust-analyzer.cargoRunner":{"type":["null","string"],"default":null,"description":"Custom cargo runner extension ID."},"rust-analyzer.runnableEnv":{"anyOf":[{"type":"null"},{"type":"array","items":{"type":"object","properties":{"mask":{"type":"string","description":"Runnable name mask"},"env":{"type":"object","description":"Variables in form of { \"key\": \"value\"}"}}}},{"type":"object","description":"Variables in form of { \"key\": \"value\"}"}],"default":null,"markdownDescription":"Environment variables passed to the runnable launched using `Test` or `Debug` lens or `rust-analyzer.run` command."},"rust-analyzer.inlayHints.enable":{"type":"boolean","default":true,"description":"Whether to show inlay hints."},"rust-analyzer.inlayHints.smallerHints":{"type":"boolean","default":true,"description":"Whether inlay hints font size should be smaller than editor's font size."},"rust-analyzer.updates.channel":{"type":"string","enum":["stable","nightly"],"default":"stable","markdownEnumDescriptions":["`stable` updates are shipped weekly, they don't contain cutting-edge features from VSCode proposed APIs but have less bugs in general.","`nightly` updates are shipped daily (extension updates automatically by downloading artifacts directly from GitHub), they contain cutting-edge features and latest bug fixes. These releases help us get your feedback very quickly and speed up rust-analyzer development **drastically**."],"markdownDescription":"Choose `nightly` updates to get the latest features and bug fixes every day. While `stable` releases occur weekly and don't contain cutting-edge features from VSCode proposed APIs."},"rust-analyzer.updates.askBeforeDownload":{"type":"boolean","default":false,"description":"Whether to ask for permission before downloading any files from the Internet."},"rust-analyzer.server.path":{"type":["null","string"],"scope":"machine-overridable","default":null,"markdownDescription":"Path to rust-analyzer executable (points to bundled binary by default). If this is set, then `#rust-analyzer.updates.channel#` setting is not used"},"rust-analyzer.server.extraEnv":{"type":["null","object"],"default":null,"markdownDescription":"Extra environment variables that will be passed to the rust-analyzer executable. Useful for passing e.g. `RA_LOG` for debugging."},"rust-analyzer.trace.server":{"type":"string","scope":"window","enum":["off","messages","verbose"],"enumDescriptions":["No traces","Error only","Full log"],"default":"off","description":"Trace requests to the rust-analyzer (this is usually overly verbose and not recommended for regular users)."},"rust-analyzer.trace.extension":{"description":"Enable logging of VS Code extensions itself.","type":"boolean","default":false},"rust-analyzer.debug.engine":{"type":"string","enum":["auto","vadimcn.vscode-lldb","ms-vscode.cpptools"],"default":"auto","description":"Preferred debug engine.","markdownEnumDescriptions":["First try to use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb), if it's not installed try to use [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools).","Use [CodeLLDB](https://marketplace.visualstudio.com/items?itemName=vadimcn.vscode-lldb)","Use [MS C++ tools](https://marketplace.visualstudio.com/items?itemName=ms-vscode.cpptools)"]},"rust-analyzer.debug.sourceFileMap":{"type":["object","string"],"const":"auto","description":"Optional source file mappings passed to the debug engine.","default":{"/rustc/<id>":"${env:USERPROFILE}/.rustup/toolchains/<toolchain-id>/lib/rustlib/src/rust"}},"rust-analyzer.debug.openDebugPane":{"markdownDescription":"Whether to open up the `Debug Panel` on debugging start.","type":"boolean","default":false},"rust-analyzer.debug.engineSettings":{"type":"object","default":{},"markdownDescription":"Optional settings passed to the debug engine. Example: `{ \"lldb\": { \"terminal\":\"external\"} }`"},"rust-analyzer.assist.importGranularity":{"markdownDescription":"How imports should be grouped into use statements.","default":"crate","type":"string","enum":["preserve","crate","module","item"],"enumDescriptions":["Do not change the granularity of any imports and preserve the original structure written by the developer.","Merge imports from the same crate into a single use statement. Conversely, imports from different crates are split into separate statements.","Merge imports from the same module into a single use statement. Conversely, imports from different modules are split into separate statements.","Flatten imports so that each has its own use statement."]},"rust-analyzer.assist.importEnforceGranularity":{"markdownDescription":"Whether to enforce the import granularity setting for all files. If set to false rust-analyzer will try to keep import styles consistent per file.","default":false,"type":"boolean"},"rust-analyzer.assist.importPrefix":{"markdownDescription":"The path structure for newly inserted paths to use.","default":"plain","type":"string","enum":["plain","self","crate"],"enumDescriptions":["Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item.","Insert import paths relative to the current module, using up to one `super` prefix if the parent module contains the requested item. Prefixes `self` in front of the path if it starts with a module.","Force import paths to be absolute by always starting them with `crate` or the extern crate name they come from."]},"rust-analyzer.assist.importGroup":{"markdownDescription":"Group inserted imports by the [following order](https://rust-analyzer.github.io/manual.html#auto-import). Groups are separated by newlines.","default":true,"type":"boolean"},"rust-analyzer.assist.allowMergingIntoGlobImports":{"markdownDescription":"Whether to allow import insertion to merge new imports into single path glob imports like `use std::fmt::*;`.","default":true,"type":"boolean"},"rust-analyzer.callInfo.full":{"markdownDescription":"Show function name and docs in parameter hints.","default":true,"type":"boolean"},"rust-analyzer.cargo.autoreload":{"markdownDescription":"Automatically refresh project info via `cargo metadata` on\n`Cargo.toml` changes.","default":true,"type":"boolean"},"rust-analyzer.cargo.allFeatures":{"markdownDescription":"Activate all available features (`--all-features`).","default":false,"type":"boolean"},"rust-analyzer.cargo.unsetTest":{"markdownDescription":"Unsets `#[cfg(test)]` for the specified crates.","default":["core"],"type":"array","items":{"type":"string"}},"rust-analyzer.cargo.features":{"markdownDescription":"List of features to activate.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.cargo.runBuildScripts":{"markdownDescription":"Run build scripts (`build.rs`) for more precise code analysis.","default":true,"type":"boolean"},"rust-analyzer.cargo.useRustcWrapperForBuildScripts":{"markdownDescription":"Use `RUSTC_WRAPPER=rust-analyzer` when running build scripts to\navoid compiling unnecessary things.","default":true,"type":"boolean"},"rust-analyzer.cargo.noDefaultFeatures":{"markdownDescription":"Do not activate the `default` feature.","default":false,"type":"boolean"},"rust-analyzer.cargo.target":{"markdownDescription":"Compilation target (target triple).","default":null,"type":["null","string"]},"rust-analyzer.cargo.noSysroot":{"markdownDescription":"Internal config for debugging, disables loading of sysroot crates.","default":false,"type":"boolean"},"rust-analyzer.checkOnSave.enable":{"markdownDescription":"Run specified `cargo check` command for diagnostics on save.","default":true,"type":"boolean"},"rust-analyzer.checkOnSave.allFeatures":{"markdownDescription":"Check with all features (`--all-features`).\nDefaults to `#rust-analyzer.cargo.allFeatures#`.","default":null,"type":["null","boolean"]},"rust-analyzer.checkOnSave.allTargets":{"markdownDescription":"Check all targets and tests (`--all-targets`).","default":true,"type":"boolean"},"rust-analyzer.checkOnSave.command":{"markdownDescription":"Cargo command to use for `cargo check`.","default":"check","type":"string"},"rust-analyzer.checkOnSave.noDefaultFeatures":{"markdownDescription":"Do not activate the `default` feature.","default":null,"type":["null","boolean"]},"rust-analyzer.checkOnSave.target":{"markdownDescription":"Check for a specific target. Defaults to\n`#rust-analyzer.cargo.target#`.","default":null,"type":["null","string"]},"rust-analyzer.checkOnSave.extraArgs":{"markdownDescription":"Extra arguments for `cargo check`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.checkOnSave.features":{"markdownDescription":"List of features to activate. Defaults to\n`#rust-analyzer.cargo.features#`.","default":null,"type":["null","array"],"items":{"type":"string"}},"rust-analyzer.checkOnSave.overrideCommand":{"markdownDescription":"Advanced option, fully override the command rust-analyzer uses for\nchecking. The command should include `--message-format=json` or\nsimilar option.","default":null,"type":["null","array"],"items":{"type":"string"}},"rust-analyzer.completion.addCallArgumentSnippets":{"markdownDescription":"Whether to add argument snippets when completing functions.\nOnly applies when `#rust-analyzer.completion.addCallParenthesis#` is set.","default":true,"type":"boolean"},"rust-analyzer.completion.addCallParenthesis":{"markdownDescription":"Whether to add parenthesis when completing functions.","default":true,"type":"boolean"},"rust-analyzer.completion.postfix.enable":{"markdownDescription":"Whether to show postfix snippets like `dbg`, `if`, `not`, etc.","default":true,"type":"boolean"},"rust-analyzer.completion.autoimport.enable":{"markdownDescription":"Toggles the additional completions that automatically add imports when completed.\nNote that your client must specify the `additionalTextEdits` LSP client capability to truly have this feature enabled.","default":true,"type":"boolean"},"rust-analyzer.completion.autoself.enable":{"markdownDescription":"Toggles the additional completions that automatically show method calls and field accesses\nwith `self` prefixed to them when inside a method.","default":true,"type":"boolean"},"rust-analyzer.diagnostics.enable":{"markdownDescription":"Whether to show native rust-analyzer diagnostics.","default":true,"type":"boolean"},"rust-analyzer.diagnostics.enableExperimental":{"markdownDescription":"Whether to show experimental rust-analyzer diagnostics that might\nhave more false positives than usual.","default":true,"type":"boolean"},"rust-analyzer.diagnostics.disabled":{"markdownDescription":"List of rust-analyzer diagnostics to disable.","default":[],"type":"array","items":{"type":"string"},"uniqueItems":true},"rust-analyzer.diagnostics.remapPrefix":{"markdownDescription":"Map of prefixes to be substituted when parsing diagnostic file paths.\nThis should be the reverse mapping of what is passed to `rustc` as `--remap-path-prefix`.","default":{},"type":"object"},"rust-analyzer.diagnostics.warningsAsHint":{"markdownDescription":"List of warnings that should be displayed with hint severity.\n\nThe warnings will be indicated by faded text or three dots in code\nand will not show up in the `Problems Panel`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.diagnostics.warningsAsInfo":{"markdownDescription":"List of warnings that should be displayed with info severity.\n\nThe warnings will be indicated by a blue squiggly underline in code\nand a blue icon in the `Problems Panel`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.experimental.procAttrMacros":{"markdownDescription":"Expand attribute macros.","default":false,"type":"boolean"},"rust-analyzer.files.watcher":{"markdownDescription":"Controls file watching implementation.","default":"client","type":"string"},"rust-analyzer.files.excludeDirs":{"markdownDescription":"These directories will be ignored by rust-analyzer. They are\nrelative to the workspace root, and globs are not supported. You may\nalso need to add the folders to Code's `files.watcherExclude`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.highlightRelated.references":{"markdownDescription":"Enables highlighting of related references while hovering your mouse above any identifier.","default":true,"type":"boolean"},"rust-analyzer.highlightRelated.exitPoints":{"markdownDescription":"Enables highlighting of all exit points while hovering your mouse above any `return`, `?`, or return type arrow (`->`).","default":true,"type":"boolean"},"rust-analyzer.highlightRelated.breakPoints":{"markdownDescription":"Enables highlighting of related references while hovering your mouse `break`, `loop`, `while`, or `for` keywords.","default":true,"type":"boolean"},"rust-analyzer.highlightRelated.yieldPoints":{"markdownDescription":"Enables highlighting of all break points for a loop or block context while hovering your mouse above any `async` or `await` keywords.","default":true,"type":"boolean"},"rust-analyzer.highlighting.strings":{"markdownDescription":"Use semantic tokens for strings.\n\nIn some editors (e.g. vscode) semantic tokens override other highlighting grammars.\nBy disabling semantic tokens for strings, other grammars can be used to highlight\ntheir contents.","default":true,"type":"boolean"},"rust-analyzer.hover.documentation":{"markdownDescription":"Whether to show documentation on hover.","default":true,"type":"boolean"},"rust-analyzer.hover.linksInHover":{"markdownDescription":"Use markdown syntax for links in hover.","default":true,"type":"boolean"},"rust-analyzer.hoverActions.debug":{"markdownDescription":"Whether to show `Debug` action. Only applies when\n`#rust-analyzer.hoverActions.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.hoverActions.enable":{"markdownDescription":"Whether to show HoverActions in Rust files.","default":true,"type":"boolean"},"rust-analyzer.hoverActions.gotoTypeDef":{"markdownDescription":"Whether to show `Go to Type Definition` action. Only applies when\n`#rust-analyzer.hoverActions.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.hoverActions.implementations":{"markdownDescription":"Whether to show `Implementations` action. Only applies when\n`#rust-analyzer.hoverActions.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.hoverActions.references":{"markdownDescription":"Whether to show `References` action. Only applies when\n`#rust-analyzer.hoverActions.enable#` is set.","default":false,"type":"boolean"},"rust-analyzer.hoverActions.run":{"markdownDescription":"Whether to show `Run` action. Only applies when\n`#rust-analyzer.hoverActions.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.inlayHints.chainingHints":{"markdownDescription":"Whether to show inlay type hints for method chains.","default":true,"type":"boolean"},"rust-analyzer.inlayHints.maxLength":{"markdownDescription":"Maximum length for inlay hints. Set to null to have an unlimited length.","default":25,"type":["null","integer"],"minimum":0},"rust-analyzer.inlayHints.parameterHints":{"markdownDescription":"Whether to show function parameter name inlay hints at the call\nsite.","default":true,"type":"boolean"},"rust-analyzer.inlayHints.typeHints":{"markdownDescription":"Whether to show inlay type hints for variables.","default":true,"type":"boolean"},"rust-analyzer.joinLines.joinElseIf":{"markdownDescription":"Join lines inserts else between consecutive ifs.","default":true,"type":"boolean"},"rust-analyzer.joinLines.removeTrailingComma":{"markdownDescription":"Join lines removes trailing commas.","default":true,"type":"boolean"},"rust-analyzer.joinLines.unwrapTrivialBlock":{"markdownDescription":"Join lines unwraps trivial blocks.","default":true,"type":"boolean"},"rust-analyzer.lens.debug":{"markdownDescription":"Whether to show `Debug` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.lens.enable":{"markdownDescription":"Whether to show CodeLens in Rust files.","default":true,"type":"boolean"},"rust-analyzer.lens.implementations":{"markdownDescription":"Whether to show `Implementations` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.lens.run":{"markdownDescription":"Whether to show `Run` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":true,"type":"boolean"},"rust-analyzer.lens.methodReferences":{"markdownDescription":"Whether to show `Method References` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"},"rust-analyzer.lens.references":{"markdownDescription":"Whether to show `References` lens. Only applies when\n`#rust-analyzer.lens.enable#` is set.","default":false,"type":"boolean"},"rust-analyzer.lens.forceCustomCommands":{"markdownDescription":"Internal config: use custom client-side commands even when the\nclient doesn't set the corresponding capability.","default":true,"type":"boolean"},"rust-analyzer.linkedProjects":{"markdownDescription":"Disable project auto-discovery in favor of explicitly specified set\nof projects.\n\nElements must be paths pointing to `Cargo.toml`,\n`rust-project.json`, or JSON objects in `rust-project.json` format.","default":[],"type":"array","items":{"type":["string","object"]}},"rust-analyzer.lruCapacity":{"markdownDescription":"Number of syntax trees rust-analyzer keeps in memory. Defaults to 128.","default":null,"type":["null","integer"],"minimum":0},"rust-analyzer.notifications.cargoTomlNotFound":{"markdownDescription":"Whether to show `can't find Cargo.toml` error message.","default":true,"type":"boolean"},"rust-analyzer.procMacro.enable":{"markdownDescription":"Enable support for procedural macros, implies `#rust-analyzer.cargo.runBuildScripts#`.","default":true,"type":"boolean"},"rust-analyzer.procMacro.server":{"markdownDescription":"Internal config, path to proc-macro server executable (typically,\nthis is rust-analyzer itself, but we override this in tests).","default":null,"type":["null","string"]},"rust-analyzer.runnables.overrideCargo":{"markdownDescription":"Command to be executed instead of 'cargo' for runnables.","default":null,"type":["null","string"]},"rust-analyzer.runnables.cargoExtraArgs":{"markdownDescription":"Additional arguments to be passed to cargo for runnables such as\ntests or binaries. For example, it may be `--release`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.rustcSource":{"markdownDescription":"Path to the Cargo.toml of the rust compiler workspace, for usage in rustc_private\nprojects, or \"discover\" to try to automatically find it.\n\nAny project which uses rust-analyzer with the rustcPrivate\ncrates must set `[package.metadata.rust-analyzer] rustc_private=true` to use it.\n\nThis option is not reloaded automatically; you must restart rust-analyzer for it to take effect.","default":null,"type":["null","string"]},"rust-analyzer.rustfmt.extraArgs":{"markdownDescription":"Additional arguments to `rustfmt`.","default":[],"type":"array","items":{"type":"string"}},"rust-analyzer.rustfmt.overrideCommand":{"markdownDescription":"Advanced option, fully override the command rust-analyzer uses for\nformatting.","default":null,"type":["null","array"],"items":{"type":"string"}},"rust-analyzer.rustfmt.enableRangeFormatting":{"markdownDescription":"Enables the use of rustfmt's unstable range formatting command for the\n`textDocument/rangeFormatting` request. The rustfmt option is unstable and only\navailable on a nightly build.","default":false,"type":"boolean"},"rust-analyzer.workspace.symbol.search.scope":{"markdownDescription":"Workspace symbol search scope.","default":"workspace","type":"string","enum":["workspace","workspace_and_dependencies"],"enumDescriptions":["Search in current workspace only","Search in current workspace and dependencies"]},"rust-analyzer.workspace.symbol.search.kind":{"markdownDescription":"Workspace symbol search kind.","default":"only_types","type":"string","enum":["only_types","all_symbols"],"enumDescriptions":["Search for types only","Search for all symbols kinds"]}}},"problemPatterns":[{"name":"rustc","patterns":[{"regexp":"^(warning|warn|error)(?:\\[(.*?)\\])?: (.*)$","severity":1,"code":2,"message":3},{"regexp":"^[\\s->=]*(.*?):(\\d*):(\\d*)\\s*$","file":1,"line":2,"column":3}]},{"name":"rustc-json","patterns":[{"regexp":"^.*\"message\":{\"message\":\"([^\"]*).*?\"file_name\":\"([^\"]+).*?\"line_start\":(\\d+).*?\"line_end\":(\\d+).*?\"column_start\":(\\d+).*?\"column_end\":(\\d+).*}$","message":1,"file":2,"line":3,"endLine":4,"column":5,"endColumn":6}]}],"languages":[{"id":"ra_syntax_tree","extensions":[".rast"]},{"id":"rust","extensions":[".rs"],"aliases":["Rust","rs"],"configuration":"language-configuration.json"}],"grammars":[{"language":"ra_syntax_tree","scopeName":"source.ra_syntax_tree","path":"ra_syntax_tree.tmGrammar.json"}],"problemMatchers":[{"name":"rustc","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rustc"},{"name":"rustc-json","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"pattern":"$rustc-json"},{"name":"rustc-watch","owner":"rustc","source":"rustc","fileLocation":["autoDetect","${workspaceRoot}"],"background":{"beginsPattern":"^\\[Running\\b","endsPattern":"^\\[Finished running\\b"},"pattern":"$rustc"}],"colors":[{"id":"rust_analyzer.inlayHints.foreground","description":"Foreground color of inlay hints (is overriden by more specific rust_analyzer.inlayHints.foreground.* configurations)","defaults":{"dark":"#A0A0A0F0","light":"#747474","highContrast":"#BEBEBE"}},{"id":"rust_analyzer.inlayHints.background","description":"Background color of inlay hints (is overriden by more specific rust_analyzer.inlayHints.background.* configurations)","defaults":{"dark":"#11223300","light":"#11223300","highContrast":"#11223300"}},{"id":"rust_analyzer.inlayHints.foreground.typeHints","description":"Foreground color of inlay type hints for variables (overrides rust_analyzer.inlayHints.foreground)","defaults":{"dark":"rust_analyzer.inlayHints.foreground","light":"rust_analyzer.inlayHints.foreground","highContrast":"rust_analyzer.inlayHints.foreground"}},{"id":"rust_analyzer.inlayHints.foreground.chainingHints","description":"Foreground color of inlay type hints for method chains (overrides rust_analyzer.inlayHints.foreground)","defaults":{"dark":"rust_analyzer.inlayHints.foreground","light":"rust_analyzer.inlayHints.foreground","highContrast":"rust_analyzer.inlayHints.foreground"}},{"id":"rust_analyzer.inlayHints.foreground.parameterHints","description":"Foreground color of function parameter name inlay hints at the call site (overrides rust_analyzer.inlayHints.foreground)","defaults":{"dark":"rust_analyzer.inlayHints.foreground","light":"rust_analyzer.inlayHints.foreground","highContrast":"rust_analyzer.inlayHints.foreground"}},{"id":"rust_analyzer.inlayHints.background.typeHints","description":"Background color of inlay type hints for variables (overrides rust_analyzer.inlayHints.background)","defaults":{"dark":"rust_analyzer.inlayHints.background","light":"rust_analyzer.inlayHints.background","highContrast":"rust_analyzer.inlayHints.background"}},{"id":"rust_analyzer.inlayHints.background.chainingHints","description":"Background color of inlay type hints for method chains (overrides rust_analyzer.inlayHints.background)","defaults":{"dark":"rust_analyzer.inlayHints.background","light":"rust_analyzer.inlayHints.background","highContrast":"rust_analyzer.inlayHints.background"}},{"id":"rust_analyzer.inlayHints.background.parameterHints","description":"Background color of function parameter name inlay hints at the call site (overrides rust_analyzer.inlayHints.background)","defaults":{"dark":"rust_analyzer.inlayHints.background","light":"rust_analyzer.inlayHints.background","highContrast":"rust_analyzer.inlayHints.background"}},{"id":"rust_analyzer.syntaxTreeBorder","description":"Color of the border displayed in the Rust source code for the selected syntax node (see \"Show Syntax Tree\" command)","defaults":{"dark":"#ffffff","light":"#b700ff","highContrast":"#b700ff"}}],"semanticTokenTypes":[{"id":"attribute","description":"Style for attributes"},{"id":"boolean","description":"Style for boolean literals","superType":"keyword"},{"id":"builtinType","description":"Style for builtin types","superType":"type"},{"id":"lifetime","description":"Style for lifetimes"},{"id":"selfKeyword","description":"Style for the self keyword","superType":"keyword"},{"id":"typeAlias","description":"Style for type aliases","superType":"type"},{"id":"union","description":"Style for C-style untagged unions","superType":"type"},{"id":"unresolvedReference","description":"Style for names which can not be resolved due to compilation errors"},{"id":"formatSpecifier","description":"Style for {} placeholders in format strings"},{"id":"punctuation","description":"generic punctuation"},{"id":"parenthesis","description":"( or )","superType":"punctuation"},{"id":"bracket","description":"[ or ]","superType":"punctuation"},{"id":"brace","description":"{ or }","superType":"punctuation"},{"id":"angle","description":"< or >","superType":"punctuation"},{"id":"comma","description":",","superType":"punctuation"},{"id":"colon","description":":","superType":"punctuation"},{"id":"semicolon","description":";","superType":"punctuation"},{"id":"dot","description":".","superType":"punctuation"}],"semanticTokenModifiers":[{"id":"attribute","description":"Style for elements within attributes"},{"id":"constant","description":"Style for compile-time constants"},{"id":"controlFlow","description":"Style for control flow keywords"},{"id":"mutable","description":"Style for mutable bindings"},{"id":"unsafe","description":"Style for unsafe operations"},{"id":"consuming","description":"Style for non-Copy lvalues consumed by method/function call"},{"id":"callable","description":"Style for variables/parameters that can be used in call expressions"}],"semanticTokenScopes":[{"language":"rust","scopes":{"attribute":["meta.attribute.rust"],"function.attribute":["entity.name.function.attribute.rust"],"boolean":["constant.language.boolean.rust"],"builtinType":["support.type.primitive.rust"],"lifetime":["storage.modifier.lifetime.rust"],"typeAlias":["entity.name.type.typeAlias.rust"],"union":["entity.name.type.union.rust"],"struct":["entity.name.type.struct.rust"],"keyword":["keyword.other.rust"],"keyword.controlFlow":["keyword.control.rust"],"variable.constant":["variable.other.constant.rust"],"formatSpecifier":["punctuation.section.embedded.rust"],"*.mutable":["markup.underline"]}}],"menus":{"commandPalette":[{"command":"rust-analyzer.syntaxTree","when":"inRustProject"},{"command":"rust-analyzer.viewHir","when":"inRustProject"},{"command":"rust-analyzer.expandMacro","when":"inRustProject"},{"command":"rust-analyzer.matchingBrace","when":"inRustProject"},{"command":"rust-analyzer.parentModule","when":"inRustProject"},{"command":"rust-analyzer.joinLines","when":"inRustProject"},{"command":"rust-analyzer.run","when":"inRustProject"},{"command":"rust-analyzer.debug","when":"inRustProject"},{"command":"rust-analyzer.newDebugConfig","when":"inRustProject"},{"command":"rust-analyzer.analyzerStatus","when":"inRustProject"},{"command":"rust-analyzer.memoryUsage","when":"inRustProject"},{"command":"rust-analyzer.reloadWorkspace","when":"inRustProject"},{"command":"rust-analyzer.reload","when":"inRustProject"},{"command":"rust-analyzer.updateGithubToken","when":"inRustProject"},{"command":"rust-analyzer.onEnter","when":"inRustProject"},{"command":"rust-analyzer.ssr","when":"inRustProject"},{"command":"rust-analyzer.serverVersion","when":"inRustProject"},{"command":"rust-analyzer.toggleInlayHints","when":"inRustProject"},{"command":"rust-analyzer.openDocs","when":"inRustProject"},{"command":"rust-analyzer.openCargoToml","when":"inRustProject"}],"editor/context":[{"command":"rust-analyzer.peekTests","when":"inRustProject","group":"navigation@1000"}]}},"uuid":"06574cb4-e5dc-4631-8174-a543a4533621","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"matklad.rust-analyzer","identifier":{"value":"matklad.rust-analyzer","_lower":"matklad.rust-analyzer"},"extensionLocation":{"$mid":1,"fsPath":"/home/mipy/.vscode-oss/extensions/matklad.rust-analyzer-0.2.694","path":"/home/mipy/.vscode-oss/extensions/matklad.rust-analyzer-0.2.694","scheme":"file"}},{"name":"python","displayName":"Python","description":"Linting, Debugging (multi-threaded, remote), Intellisense, Jupyter Notebooks, code formatting, refactoring, unit tests, snippets, and more.","version":"2020.10.332292344","featureFlags":{"usingNewInterpreterStorage":true},"languageServerVersion":"0.5.30","publisher":"ms-python","enableProposedApi":true,"author":{"name":"Microsoft Corporation"},"license":"MIT","homepage":"https://github.com/Microsoft/vscode-python","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-python"},"bugs":{"url":"https://github.com/Microsoft/vscode-python/issues"},"qna":"https://stackoverflow.com/questions/tagged/visual-studio-code+python","icon":"icon.png","galleryBanner":{"color":"#1e415e","theme":"dark"},"engines":{"vscode":"^1.49.0"},"keywords":["python","django","unittest","multi-root ready"],"categories":["Programming Languages","Debuggers","Linters","Snippets","Formatters","Other","Extension Packs","Data Science","Machine Learning","Notebooks"],"activationEvents":["onLanguage:python","onLanguage:jupyter","onDebugResolve:python","onCommand:python.execInTerminal","onCommand:python.sortImports","onCommand:python.runtests","onCommand:python.debugtests","onCommand:python.setInterpreter","onCommand:python.setShebangInterpreter","onCommand:python.viewTestUI","onCommand:python.viewLanguageServerOutput","onCommand:python.viewTestOutput","onCommand:python.viewOutput","onCommand:python.datascience.viewJupyterOutput","onCommand:python.datascience.export","onCommand:python.datascience.exportAsPythonScript","onCommand:python.datascience.exportToHTML","onCommand:python.datascience.exportToPDF","onCommand:python.selectAndRunTestMethod","onCommand:python.selectAndDebugTestMethod","onCommand:python.selectAndRunTestFile","onCommand:python.runCurrentTestFile","onCommand:python.runFailedTests","onCommand:python.execSelectionInTerminal","onCommand:python.execSelectionInDjangoShell","onCommand:python.buildWorkspaceSymbols","onCommand:python.startREPL","onCommand:python.goToPythonObject","onCommand:python.setLinter","onCommand:python.enableLinting","onCommand:python.createTerminal","onCommand:python.discoverTests","onCommand:python.configureTests","onCommand:python.switchOffInsidersChannel","onCommand:python.switchToDailyChannel","onCommand:python.switchToWeeklyChannel","onCommand:python.clearWorkspaceInterpreter","onCommand:python.resetInterpreterSecurityStorage","onCommand:python.datascience.createnewnotebook","onCommand:python.startPage.open","onCommand:python.datascience.createnewinteractive","onCommand:python.datascience.importnotebook","onCommand:python.datascience.importnotebookfile","onCommand:python.datascience.opennotebook","onCommand:python.datascience.opennotebookInPreviewEditor","onCommand:python.datascience.selectjupyteruri","onCommand:python.datascience.exportfileasnotebook","onCommand:python.datascience.exportfileandoutputasnotebook","onCommand:python.datascience.selectJupyterInterpreter","onCommand:python.datascience.selectjupytercommandline","onCommand:python.enableSourceMapSupport","onNotebook:jupyter-notebook","workspaceContains:mspythonconfig.json","workspaceContains:pyproject.toml","onCustomEditor:ms-python.python.notebook.ipynb"],"main":"./out/client/extension","contributes":{"snippets":[{"language":"python","path":"./snippets/python.json"}],"keybindings":[{"command":"python.execSelectionInTerminal","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && !python.datascience.ownsSelection && !notebookEditorFocused"},{"command":"python.datascience.execSelectionInteractive","key":"shift+enter","when":"editorTextFocus && editorLangId == python && !findInputFocussed && !replaceInputFocussed && python.datascience.ownsSelection && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.runcurrentcelladvance","key":"shift+enter","when":"editorTextFocus && !editorHasSelection && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.runcurrentcell","key":"ctrl+enter","when":"editorTextFocus && !editorHasSelection && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.runcurrentcellandaddbelow","key":"alt+enter","when":"editorTextFocus && !editorHasSelection && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"mac":"F","win":"F","linux":"F","key":"F","when":"notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook","command":"notebook.find"},{"mac":"K","win":"K","linux":"K","key":"K","when":"notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook","command":"list.focusUp"},{"mac":"J","win":"J","linux":"J","key":"J","when":"notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook","command":"list.focusDown"},{"mac":"A","win":"A","linux":"A","key":"A","when":"notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook","command":"notebook.cell.insertCodeCellAbove"},{"mac":"B","win":"B","linux":"B","key":"B","when":"notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook","command":"notebook.cell.insertCodeCellBelow"},{"mac":"D D","win":"D D","linux":"D D","key":"D D","when":"notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook","command":"notebook.cell.delete"},{"mac":"Z","win":"Z","linux":"Z","key":"Z","when":"notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook","command":"notebook.undo"},{"mac":"C","win":"C","linux":"C","key":"C","when":"notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook","command":"notebook.cell.copy"},{"mac":"X","win":"X","linux":"X","key":"X","when":"notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook","command":"notebook.cell.cut"},{"mac":"V","win":"V","linux":"V","key":"V","when":"notebookEditorFocused && !inputFocus && notebookViewType == jupyter-notebook","command":"notebook.cell.paste"},{"mac":"ctrl+shift+-","win":"ctrl+shift+-","linux":"ctrl+shift+-","when":"editorTextFocus && inputFocus && notebookEditorFocused && notebookViewType == jupyter-notebook","command":"notebook.cell.split"},{"command":"python.datascience.insertCellBelowPosition","key":"ctrl+; s","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.insertCellBelow","key":"ctrl+; b","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.insertCellAbove","key":"ctrl+; a","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.deleteCells","key":"ctrl+; x","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.extendSelectionByCellAbove","key":"ctrl+alt+shift+[","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.extendSelectionByCellBelow","key":"ctrl+alt+shift+]","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.moveCellsUp","key":"ctrl+; u","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.moveCellsDown","key":"ctrl+; d","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.changeCellToMarkdown","key":"ctrl+; m","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.changeCellToCode","key":"ctrl+; c","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.gotoNextCellInFile","key":"ctrl+alt+]","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.gotoPrevCellInFile","key":"ctrl+alt+[","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.selectCellContents","key":"ctrl+alt+\\","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.selectCell","key":"ctrl+alt+shift+\\","when":"editorTextFocus && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"}],"commands":[{"command":"python.enableSourceMapSupport","title":"Enable Source Map Support For Extension Debugging","category":"Python"},{"command":"python.sortImports","title":"Sort Imports","category":"Python Refactor"},{"command":"python.startREPL","title":"Start REPL","category":"Python"},{"command":"python.createTerminal","title":"Create Terminal","category":"Python"},{"command":"python.buildWorkspaceSymbols","title":"Build Workspace Symbols","category":"Python"},{"command":"python.openTestNodeInEditor","title":"Open","icon":{"light":"resources/light/open-file.svg","dark":"resources/dark/open-file.svg"}},{"command":"python.runTestNode","title":"Run","icon":{"light":"resources/light/start.svg","dark":"resources/dark/start.svg"}},{"command":"python.debugTestNode","title":"Debug","icon":{"light":"resources/light/debug.svg","dark":"resources/dark/debug.svg"}},{"command":"python.runtests","title":"Run All Tests","category":"Python","icon":{"light":"resources/light/run-tests.svg","dark":"resources/dark/run-tests.svg"}},{"command":"python.debugtests","title":"Debug All Tests","category":"Python","icon":{"light":"resources/light/debug.svg","dark":"resources/dark/debug.svg"}},{"command":"python.execInTerminal","title":"Run Python File in Terminal","category":"Python"},{"command":"python.execInTerminal-icon","title":"Run Python File in Terminal","category":"Python","icon":{"light":"resources/light/run-file.svg","dark":"resources/dark/run-file.svg"}},{"command":"python.setInterpreter","title":"Select Interpreter","category":"Python"},{"command":"python.switchOffInsidersChannel","title":"Switch to Default Channel","category":"Python"},{"command":"python.switchToDailyChannel","title":"Switch to Insiders Daily Channel","category":"Python"},{"command":"python.switchToWeeklyChannel","title":"Switch to Insiders Weekly Channel","category":"Python"},{"command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","category":"Python"},{"command":"python.resetInterpreterSecurityStorage","title":"Reset Stored Info for Untrusted Interpreters","category":"Python"},{"command":"python.refactorExtractVariable","title":"Extract Variable","category":"Python Refactor"},{"command":"python.refactorExtractMethod","title":"Extract Method","category":"Python Refactor"},{"command":"python.viewTestOutput","title":"Show Test Output","category":"Python","icon":{"light":"resources/light/repl.svg","dark":"resources/dark/repl.svg"}},{"command":"python.datascience.viewJupyterOutput","title":"Show Jupyter Output","category":"Python"},{"command":"python.datascience.export","title":"Export As","category":"Python","icon":{"light":"resources/light/export_to_python.svg","dark":"resources/dark/export_to_python.svg"},"enablement":"notebookViewType == jupyter-notebook && python.datascience.isnotebooktrusted"},{"command":"python.datascience.exportAsPythonScript","title":"Export as Python Script","category":"Python"},{"command":"python.datascience.exportToHTML","title":"Export to HTML","category":"Python"},{"command":"python.datascience.exportToPDF","title":"Export to PDF","category":"Python"},{"command":"python.datascience.selectJupyterInterpreter","title":"Select Interpreter to start Jupyter server","category":"Python"},{"command":"python.viewLanguageServerOutput","title":"Show Language Server Output","category":"Python","enablement":"python.hasLanguageServerOutputChannel"},{"command":"python.viewOutput","title":"Show Output","category":"Python","icon":{"light":"resources/light/repl.svg","dark":"resources/dark/repl.svg"}},{"command":"python.selectAndRunTestMethod","title":"Run Test Method ...","category":"Python"},{"command":"python.selectAndDebugTestMethod","title":"Debug Test Method ...","category":"Python"},{"command":"python.selectAndRunTestFile","title":"Run Test File ...","category":"Python"},{"command":"python.runCurrentTestFile","title":"Run Current Test File","category":"Python"},{"command":"python.runFailedTests","title":"Run Failed Tests","category":"Python","icon":{"light":"resources/light/run-failed-tests.svg","dark":"resources/dark/run-failed-tests.svg"}},{"command":"python.discoverTests","title":"Discover Tests","category":"Python","icon":{"light":"resources/light/refresh.svg","dark":"resources/dark/refresh.svg"}},{"command":"python.discoveringTests","title":"Discovering...","category":"Python","icon":{"light":"resources/light/discovering-tests.svg","dark":"resources/dark/discovering-tests.svg"}},{"command":"python.stopTests","title":"Stop","category":"Python","icon":{"light":"resources/light/stop.svg","dark":"resources/dark/stop.svg"}},{"command":"python.configureTests","title":"Configure Tests","category":"Python"},{"command":"python.execSelectionInTerminal","title":"Run Selection/Line in Python Terminal","category":"Python"},{"command":"python.execSelectionInDjangoShell","title":"Run Selection/Line in Django Shell","category":"Python"},{"command":"python.goToPythonObject","title":"Go to Python Object","category":"Python"},{"command":"python.setLinter","title":"Select Linter","category":"Python"},{"command":"python.enableLinting","title":"Enable Linting","category":"Python"},{"command":"python.runLinting","title":"Run Linting","category":"Python"},{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python"},{"command":"python.datascience.debugcell","title":"Debug Cell","category":"Python"},{"command":"python.datascience.debugstepover","title":"Step Over","category":"Python"},{"command":"python.datascience.debugstop","title":"Stop","category":"Python"},{"command":"python.datascience.debugcontinue","title":"Continue","category":"Python"},{"command":"python.datascience.insertCellBelowPosition","title":"Insert Cell Below Position","category":"Python"},{"command":"python.datascience.insertCellBelow","title":"Insert Cell Below","category":"Python"},{"command":"python.datascience.insertCellAbove","title":"Insert Cell Above","category":"Python"},{"command":"python.datascience.deleteCells","title":"Delete Selected Cells","category":"Python"},{"command":"python.datascience.selectCell","title":"Select Cell","category":"Python"},{"command":"python.datascience.selectCellContents","title":"Select Cell Contents","category":"Python"},{"command":"python.datascience.extendSelectionByCellAbove","title":"Extend Selection By Cell Above","category":"Python"},{"command":"python.datascience.extendSelectionByCellBelow","title":"Extend Selection By Cell Below","category":"Python"},{"command":"python.datascience.moveCellsUp","title":"Move Selected Cells Up","category":"Python"},{"command":"python.datascience.moveCellsDown","title":"Move Selected Cells Down","category":"Python"},{"command":"python.datascience.changeCellToMarkdown","title":"Change Cell to Markdown","category":"Python"},{"command":"python.datascience.changeCellToCode","title":"Change Cell to Code","category":"Python"},{"command":"python.datascience.gotoNextCellInFile","title":"Go to Next Cell","category":"Python"},{"command":"python.datascience.gotoPrevCellInFile","title":"Go to Previous Cell","category":"Python"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python"},{"command":"python.datascience.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Python"},{"command":"python.datascience.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Python"},{"command":"python.datascience.debugcurrentcell.palette","title":"Debug Current Cell","category":"Python"},{"command":"python.datascience.execSelectionInteractive","title":"Run Selection/Line in Python Interactive Window","category":"Python"},{"command":"python.datascience.createnewinteractive","title":"Create Python Interactive Window","category":"Python"},{"command":"python.datascience.runFileInteractive","title":"Run Current File in Python Interactive Window","category":"Python"},{"command":"python.datascience.debugFileInteractive","title":"Debug Current File in Python Interactive Window","category":"Python"},{"command":"python.datascience.runallcells","title":"Run All Cells","category":"Python"},{"command":"python.datascience.runallcellsabove","title":"Run Above","category":"Python"},{"command":"python.datascience.runcellandallbelow","title":"Run Below","category":"Python"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python"},{"command":"python.datascience.runtoline","title":"Run To Line in Python Interactive Window","category":"Python"},{"command":"python.datascience.runfromline","title":"Run From Line in Python Interactive Window","category":"Python"},{"command":"python.datascience.selectjupyteruri","title":"Specify local or remote Jupyter server for connections","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.selectjupytercommandline","title":"Specify Jupyter command line arguments","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"},{"command":"python.datascience.importnotebookfile","title":"Convert to Python Script","category":"Python"},{"command":"python.datascience.opennotebook","title":"Open in Notebook Editor","category":"Python"},{"command":"python.datascience.opennotebookInPreviewEditor","title":"Open in preview Notebook Editor","category":"Python"},{"command":"python.datascience.exportoutputasnotebook","title":"Export Python Interactive Window as Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Python"},{"command":"python.datascience.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Python"},{"command":"python.datascience.undocells","title":"Undo Last Python Interactive Action","category":"Python"},{"command":"python.datascience.redocells","title":"Redo Last Python Interactive Action","category":"Python"},{"command":"python.datascience.notebookeditor.undocells","title":"Undo Last Python Interactive Action","category":"Python"},{"command":"python.datascience.notebookeditor.redocells","title":"Redo Last Python Interactive Action","category":"Python"},{"command":"python.datascience.removeallcells","title":"Delete All Python Interactive Cells","category":"Python"},{"command":"python.datascience.interruptkernel","title":"Interrupt Jupyter Kernel","category":"Python"},{"command":"python.datascience.restartkernel","title":"Restart Jupyter Kernel","category":"Python"},{"command":"python.datascience.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Python"},{"command":"python.datascience.notebookeditor.interruptkernel","title":"Interrupt Jupyter Kernel","category":"Python"},{"command":"python.datascience.notebookeditor.restartkernel","title":"Restart Jupyter Kernel","category":"Python","icon":{"light":"resources/light/restart-kernel.svg","dark":"resources/dark/restart-kernel.svg"},"enablement":"python.datascience.notebookeditor.canrestartNotebookkernel"},{"command":"python.datascience.notebookeditor.trust","title":"Trust notebook","category":"Python","icon":{"light":"resources/light/un-trusted.svg","dark":"resources/dark/un-trusted.svg"},"enablement":"notebookViewType == jupyter-notebook && !python.datascience.isnotebooktrusted && python.datascience.trustfeatureenabled"},{"command":"python.datascience.notebookeditor.runallcells","title":"Run All Notebook Cells","category":"Python"},{"command":"python.datascience.notebookeditor.runselectedcell","title":"Run Selected Notebook Cell","category":"Python"},{"command":"python.datascience.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Python"},{"command":"python.datascience.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Python"},{"command":"python.datascience.notebookeditor.expandallcells","title":"Expand All Notebook Cells","category":"Python"},{"command":"python.datascience.notebookeditor.collapseallcells","title":"Collapse All Notebook Cells","category":"Python"},{"command":"python.datascience.expandallcells","title":"Expand All Python Interactive Cells","category":"Python"},{"command":"python.datascience.collapseallcells","title":"Collapse All Python Interactive Cells","category":"Python"},{"command":"python.datascience.addcellbelow","title":"Add Empty Cell to File","category":"Python"},{"command":"python.datascience.createnewnotebook","title":"Create New Blank Jupyter Notebook","category":"Python"},{"command":"python.startPage.open","title":"Open Start Page","category":"Python"},{"command":"python.datascience.scrolltocell","title":"Scroll Cell Into View","category":"Python"},{"command":"python.analysis.clearCache","title":"Clear Module Analysis Cache","category":"Python"},{"command":"python.datascience.switchKernel","title":"Select a Kernel","category":"Python","enablement":"python.datascience.isnativeactive"},{"command":"python.datascience.gatherquality","title":"DataScience.gatherQuality","category":"Python"},{"command":"python.datascience.latestExtension","title":"DataScience.latestExtension","category":"Python"},{"command":"python.datascience.showDataViewer","title":"View Value in Data Viewer","category":"Python"},{"command":"python.analysis.restartLanguageServer","title":"Restart Language Server","category":"Python"}],"menus":{"editor/context":[{"command":"python.refactorExtractVariable","title":"Refactor: Extract Variable","group":"Refactor","when":"editorHasSelection && editorLangId == python && !notebookEditorFocused"},{"command":"python.refactorExtractMethod","title":"Refactor: Extract Method","group":"Refactor","when":"editorHasSelection && editorLangId == python && !notebookEditorFocused"},{"command":"python.sortImports","title":"Refactor: Sort Imports","group":"Refactor","when":"editorLangId == python && !notebookEditorFocused"},{"command":"python.execSelectionInTerminal","group":"Python","when":"editorFocus && editorLangId == python"},{"command":"python.execSelectionInDjangoShell","group":"Python","when":"editorHasSelection && editorLangId == python && python.isDjangoProject"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == python","command":"python.runCurrentTestFile","group":"Python"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused","command":"python.datascience.runallcells","group":"Python2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused","command":"python.datascience.runcurrentcell","group":"Python2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused","command":"python.datascience.runcurrentcelladvance","group":"Python2"},{"command":"python.datascience.runFileInteractive","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.runfromline","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.ownsSelection && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.runtoline","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.ownsSelection && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.execSelectionInteractive","group":"Python2","when":"editorFocus && editorLangId == python && python.datascience.featureenabled && python.datascience.ownsSelection && !notebookEditorFocused"},{"when":"editorFocus && editorLangId == python && resourceLangId == jupyter && python.datascience.featureenabled && !notebookEditorFocused","command":"python.datascience.importnotebook","group":"Python3@1"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused","command":"python.datascience.exportfileasnotebook","group":"Python3@2"},{"when":"editorFocus && editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused","command":"python.datascience.exportfileandoutputasnotebook","group":"Python3@3"}],"editor/title":[{"command":"python.execInTerminal-icon","title":"Run Python File in Terminal","group":"navigation","when":"resourceLangId == python && python.showPlayIcon"},{"command":"python.datascience.notebookeditor.restartkernel","title":"Restart Jupyter Kernel","group":"navigation","when":"resourceLangId == jupyter && notebookViewType == 'jupyter-notebook'"},{"command":"python.datascience.notebookeditor.trust","title":"Trust notebook","group":"navigation@1","when":"resourceLangId == jupyter && notebookViewType == 'jupyter-notebook' && !python.datascience.isnotebooktrusted && python.datascience.trustfeatureenabled"},{"command":"python.datascience.export","title":"Export As","group":"navigation","when":"resourceLangId == jupyter && notebookViewType == 'jupyter-notebook' && python.datascience.isnotebooktrusted"}],"explorer/context":[{"when":"resourceLangId == python && !busyTests && !notebookEditorFocused","command":"python.runtests","group":"Python"},{"when":"resourceLangId == python && !busyTests && !notebookEditorFocused","command":"python.debugtests","group":"Python"},{"when":"resourceLangId == python","command":"python.execInTerminal","group":"Python"},{"when":"resourceLangId == python && python.datascience.featureenabled && !notebookEditorFocused","command":"python.datascience.runFileInteractive","group":"Python2"},{"when":"resourceLangId == jupyter","command":"python.datascience.opennotebook","group":"Python"},{"when":"resourceLangId == jupyter && python.vscode.channel == 'insiders'","command":"python.datascience.opennotebookInPreviewEditor","group":"Python"},{"when":"resourceLangId == jupyter","command":"python.datascience.importnotebookfile","group":"Python"}],"commandPalette":[{"command":"python.datascience.exportAsPythonScript","title":"Export as Python Script","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled && python.datascience.isnotebooktrusted"},{"command":"python.datascience.exportToHTML","title":"Export to HTML","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled && python.datascience.isnotebooktrusted"},{"command":"python.datascience.exportToPDF","title":"Export to PDF","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled && python.datascience.isnotebooktrusted"},{"command":"python.switchOffInsidersChannel","title":"Switch to Default Channel","category":"Python","when":"config.python.insidersChannel != 'default'"},{"command":"python.switchToDailyChannel","title":"Switch to Insiders Daily Channel","category":"Python","when":"config.python.insidersChannel != 'daily'"},{"command":"python.switchToWeeklyChannel","title":"Switch to Insiders Weekly Channel","category":"Python","when":"config.python.insidersChannel != 'weekly'"},{"command":"python.clearWorkspaceInterpreter","title":"Clear Workspace Interpreter Setting","category":"Python"},{"command":"python.resetInterpreterSecurityStorage","title":"Reset Stored Info for Untrusted Interpreters","category":"Python"},{"command":"python.viewOutput","title":"Show Output","category":"Python"},{"command":"python.runTestNode","title":"Run","category":"Python","when":"config.noExists"},{"command":"python.discoveringTests","category":"Python","when":"config.noExists"},{"command":"python.stopTests","category":"Python","when":"config.noExists"},{"command":"python.debugTestNode","title":"Debug","category":"Python","when":"config.noExists"},{"command":"python.openTestNodeInEditor","title":"Open","category":"Python","when":"config.noExists"},{"command":"python.datascience.insertCellBelowPosition","title":"Insert Cell Below Position","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.insertCellBelow","title":"Insert Cell Below","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.insertCellAbove","title":"Insert Cell Above","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.deleteCells","title":"Delete Selected Cells","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.selectCell","title":"Select Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.selectCellContents","title":"Select Cell Contents","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.extendSelectionByCellAbove","title":"Extend Selection By Cell Above","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.extendSelectionByCellBelow","title":"Extend Selection By Cell Below","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.moveCellsUp","title":"Move Selected Cells Up","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.moveCellsDown","title":"Move Selected Cells Down","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.changeCellToMarkdown","title":"Change Cell to Markdown","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.changeCellToCode","title":"Change Cell to Code","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.gotoNextCellInFile","title":"Go to Next Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.gotoPrevCellInFile","title":"Go to Previous Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.runcurrentcell","title":"Run Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.runcurrentcelladvance","title":"Run Current Cell And Advance","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.runcurrentcellandallbelow.palette","title":"Run Current Cell and Below","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.runallcellsabove.palette","title":"Run Cells Above Current Cell","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.debugcurrentcell.palette","title":"Debug Current Cell","category":"Python","when":"editorLangId == python && python.datascience.hascodecells && python.datascience.featureenabled"},{"command":"python.datascience.createnewinteractive","title":"Create Python Interactive Window","category":"Python","when":"python.datascience.featureenabled"},{"command":"python.datascience.runallcells","title":"Run All Cells","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.scrolltocell","title":"Scroll Cell Into View","category":"Python","when":"false"},{"command":"python.datascience.debugcell","title":"Debug Cell","category":"Python","when":"config.noExists"},{"command":"python.datascience.runcell","title":"Run Cell","category":"Python","when":"config.noExists"},{"command":"python.datascience.runFileInteractive","title":"Run Current File in Python Interactive Window","category":"Python","when":"editorLangId == python && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.debugFileInteractive","title":"Debug Current File in Python Interactive Window","category":"Python","when":"editorLangId == python && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.importnotebook","title":"Import Jupyter Notebook","category":"Python"},{"command":"python.datascience.opennotebook","title":"Open in Notebook Editor","category":"Python"},{"command":"python.datascience.exportfileasnotebook","title":"Export Current Python File as Jupyter Notebook","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive && !notebookEditorFocused"},{"command":"python.datascience.exportfileandoutputasnotebook","title":"Export Current Python File and Output as Jupyter Notebook","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive && !notebookEditorFocused"},{"command":"python.datascience.undocells","title":"Undo Last Python Interactive Action","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive && !notebookEditorFocused"},{"command":"python.datascience.redocells","title":"Redo Last Python Interactive Action","category":"Python","when":"python.datascience.haveredoablecells && python.datascience.featureenabled && python.datascience.ispythonorinteractiveornativeeactive && !notebookEditorFocused"},{"command":"python.datascience.removeallcells","title":"Delete All Python Interactive Cells","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive"},{"command":"python.datascience.interruptkernel","title":"Interrupt Jupyter Kernel","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive"},{"command":"python.datascience.restartkernel","title":"Restart Jupyter Kernel","category":"Python","when":"python.datascience.haveinteractive && python.datascience.featureenabled && python.datascience.ispythonorinteractiveeactive"},{"command":"python.datascience.notebookeditor.undocells","title":"Undo Last Python Interactive Action","category":"Python","when":"python.datascience.haveinteractivecells && python.datascience.featureenabled && python.datascience.isnativeactive && !notebookEditorFocused && python.datascience.isnotebooktrusted"},{"command":"python.datascience.notebookeditor.redocells","title":"Redo Last Python Interactive Action","category":"Python","when":"python.datascience.havenativeredoablecells && python.datascience.featureenabled && python.datascience.isnativeactive && !notebookEditorFocused&& python.datascience.isnotebooktrusted"},{"command":"python.datascience.notebookeditor.removeallcells","title":"Delete All Notebook Editor Cells","category":"Python","when":"python.datascience.havenativecells && python.datascience.featureenabled && python.datascience.isnativeactive && python.datascience.isnotebooktrusted"},{"command":"python.datascience.notebookeditor.interruptkernel","title":"Interrupt Jupyter Kernel","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled && python.datascience.isnotebooktrusted"},{"command":"python.datascience.notebookeditor.restartkernel","title":"Restart Jupyter Kernel","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled && python.datascience.isnotebooktrusted"},{"command":"python.datascience.notebookeditor.trust","title":"Trust notebook","category":"Python","when":"python.datascience.featureenabled && notebookEditorFocused && !python.datascience.isnotebooktrusted && python.datascience.trustfeatureenabled"},{"command":"python.datascience.notebookeditor.runallcells","title":"Run All Notebook Cells","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled && python.datascience.isnotebooktrusted"},{"command":"python.datascience.notebookeditor.runselectedcell","title":"Run Selected Notebook Cell","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled && python.datascience.havecellselected && !notebookEditorFocused && python.datascience.isnotebooktrusted"},{"command":"python.datascience.notebookeditor.runselectedcell","title":"Run Selected Notebook Cell","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled && notebookEditorFocused && python.datascience.isnotebooktrusted"},{"command":"python.datascience.notebookeditor.addcellbelow","title":"Add Empty Cell to Notebook File","category":"Python","when":"python.datascience.isnativeactive && python.datascience.featureenabled && python.datascience.isnotebooktrusted"},{"command":"python.datascience.notebookeditor.removeallcells","title":"Delete All Python Interactive Cells","category":"Python","when":"python.datascience.featureenabled && notebookEditorFocused"},{"command":"python.datascience.notebookeditor.expandallcells","title":"Expand All Python Interactive Cells","category":"Python","when":"python.datascience.featureenabled && notebookEditorFocused"},{"command":"python.datascience.notebookeditor.collapseallcells","title":"Collapse All Python Interactive Cells","category":"Python","when":"python.datascience.featureenabled && notebookEditorFocused"},{"command":"python.datascience.expandallcells","title":"Expand All Python Interactive Cells","category":"Python","when":"python.datascience.isinteractiveactive && python.datascience.featureenabled"},{"command":"python.datascience.collapseallcells","title":"Collapse All Python Interactive Cells","category":"Python","when":"python.datascience.isinteractiveactive && python.datascience.featureenabled"},{"command":"python.datascience.exportoutputasnotebook","title":"Export Python Interactive Window as Jupyter Notebook","category":"Python","when":"python.datascience.isinteractiveactive && python.datascience.featureenabled"},{"command":"python.datascience.runcellandallbelow","category":"Python","when":"config.noExists"},{"command":"python.datascience.runallcellsabove","category":"Python","when":"config.noExists"},{"command":"python.datascience.debugcontinue","category":"Python","when":"config.noExists"},{"command":"python.datascience.debugstop","category":"Python","when":"config.noExists"},{"command":"python.datascience.debugstepover","category":"Python","when":"config.noExists"},{"command":"python.datascience.debugcell","category":"Python","when":"config.noExists"},{"command":"python.datascience.addcellbelow","title":"Add Empty Cell to File","category":"Python","when":"python.datascience.hascodecells && python.datascience.featureenabled && python.datascience.ispythonornativeactive"},{"command":"python.datascience.createnewnotebook","title":"Create New Blank Jupyter Notebook","category":"Python"},{"command":"python.startPage.open","title":"Open Start Page","category":"Python"},{"command":"python.datascience.runtoline","category":"Python","when":"config.noExists"},{"command":"python.datascience.runfromline","category":"Python","when":"config.noExists"},{"command":"python.datascience.execSelectionInteractive","category":"Python","when":"editorLangId == python && python.datascience.featureenabled && !notebookEditorFocused"},{"command":"python.datascience.switchKernel","title":"Select a Kernel","category":"Python","when":"python.datascience.isnativeactive"},{"command":"python.datascience.gatherquality","title":"Did gather work as desired?","category":"Python","when":"false"},{"command":"python.datascience.latestExtension","title":"Download the latest version of the Python Extension","category":"Python","when":"false"},{"command":"python.datascience.showDataViewer","category":"Python","when":"false"},{"command":"python.datascience.export","title":"Export As","category":"Python","when":"false"}],"view/title":[{"command":"python.debugtests","when":"view == python_tests && !busyTests","group":"navigation@3"},{"command":"python.runtests","when":"view == python_tests && !busyTests","group":"navigation@1"},{"command":"python.stopTests","when":"view == python_tests && busyTests","group":"navigation@1"},{"command":"python.discoverTests","when":"view == python_tests && !busyTests","group":"navigation@4"},{"command":"python.discoveringTests","when":"view == python_tests && discoveringTests","group":"navigation@4"},{"command":"python.runFailedTests","when":"view == python_tests && hasFailedTests && !busyTests","group":"navigation@2"},{"command":"python.viewTestOutput","when":"view == python_tests","group":"navigation@5"}],"view/item/context":[{"command":"python.runtests","when":"view == python_tests && viewItem == testWorkspaceFolder && !busyTests","group":"inline@0"},{"command":"python.debugtests","when":"view == python_tests && viewItem == testWorkspaceFolder && !busyTests","group":"inline@1"},{"command":"python.discoverTests","when":"view == python_tests && viewItem == testWorkspaceFolder && !busyTests","group":"inline@2"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == function","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == function && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == function && !busyTests","group":"inline@0"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == file","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == file && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == file && !busyTests","group":"inline@0"},{"command":"python.openTestNodeInEditor","when":"view == python_tests && viewItem == suite","group":"inline@2"},{"command":"python.debugTestNode","when":"view == python_tests && viewItem == suite && !busyTests","group":"inline@1"},{"command":"python.runTestNode","when":"view == python_tests && viewItem == suite && !busyTests","group":"inline@0"}],"debug/variables/context":[{"command":"python.datascience.showDataViewer","group":"1_view","when":"python.isDebuggerDataViewerExperimentEnabled && debugProtocolVariableMenuContext == 'viewableInDataViewer'"}]},"breakpoints":[{"language":"python"},{"language":"html"},{"language":"jinja"}],"debuggers":[{"type":"python","label":"Python","languages":["python"],"variables":{"pickProcess":"python.pickLocalProcess"},"configurationSnippets":[],"configurationAttributes":{"launch":{"properties":{"module":{"type":"string","description":"Name of the module to be debugged.","default":""},"program":{"type":"string","description":"Absolute path to the program.","default":"${file}"},"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings","default":"${command:python.interpreterPath}"},"pythonArgs":{"type":"array","description":"Command-line arguments passed to the Python interpreter. To pass arguments to the debug target, use \"args\".","default":[],"items":{"type":"string"}},"args":{"type":"array","description":"Command line arguments passed to the program","default":[],"items":{"type":"string"}},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":true},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"integratedTerminal"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{},"additionalProperties":{"type":"string"}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"port":{"type":"number","description":"Debug port (default is 0, resulting in the use of a dynamic port).","default":0},"host":{"type":"string","description":"IP address of the of the local debug server (default is localhost).","default":"localhost"},"pathMappings":{"type":"array","label":"Path mappings.","items":{"type":"object","label":"Path mapping","required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","label":"Local source root.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","label":"Remote source root.","default":""}}},"default":[]},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"justMyCode":{"type":"boolean","description":"Debug only user-written code.","default":true},"gevent":{"type":"boolean","description":"Enable debugging of gevent monkey-patched code.","default":false},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"sudo":{"type":"boolean","description":"Running debug program under elevated permissions (on Unix).","default":false},"pyramid":{"type":"boolean","description":"Whether debugging Pyramid applications","default":false},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false}}},"test":{"properties":{"pythonPath":{"type":"string","description":"Path (fully qualified) to python executable. Defaults to the value in settings","default":"${command:python.interpreterPath}"},"stopOnEntry":{"type":"boolean","description":"Automatically stop after launch.","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":true},"console":{"enum":["internalConsole","integratedTerminal","externalTerminal"],"description":"Where to launch the debug target: internal console, integrated terminal, or external terminal.","default":"internalConsole"},"cwd":{"type":"string","description":"Absolute path to the working directory of the program being debugged. Default is the root directory of the file (leave empty).","default":"${workspaceFolder}"},"env":{"type":"object","description":"Environment variables defined as a key value pair. Property ends up being the Environment Variable and the value of the property ends up being the value of the Env Variable.","default":{},"additionalProperties":{"type":"string"}},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env"},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"justMyCode":{"type":"boolean","description":"Debug only user-written code.","default":true}}},"attach":{"properties":{"connect":{"type":"object","label":"Attach by connecting to debugpy over a socket.","properties":{"port":{"type":"number","description":"Port to connect to."},"host":{"type":"string","description":"Hostname or IP address to connect to.","default":"127.0.0.1"}},"required":["port"]},"listen":{"type":"object","label":"Attach by listening for incoming socket connection from debugpy","properties":{"port":{"type":"number","description":"Port to listen on."},"host":{"type":"string","description":"Hostname or IP address of the interface to listen on.","default":"127.0.0.1"}},"required":["port"]},"port":{"type":"number","description":"Port to connect to."},"host":{"type":"string","description":"Hostname or IP address to connect to.","default":"127.0.0.1"},"pathMappings":{"type":"array","label":"Path mappings.","items":{"type":"object","label":"Path mapping","required":["localRoot","remoteRoot"],"properties":{"localRoot":{"type":"string","label":"Local source root.","default":"${workspaceFolder}"},"remoteRoot":{"type":"string","label":"Remote source root.","default":""}}},"default":[]},"logToFile":{"type":"boolean","description":"Enable logging of debugger events to a log file.","default":false},"redirectOutput":{"type":"boolean","description":"Redirect output.","default":true},"justMyCode":{"type":"boolean","description":"Debug only user-written code.","default":true},"django":{"type":"boolean","description":"Django debugging.","default":false},"jinja":{"enum":[true,false,null],"description":"Jinja template debugging (e.g. Flask).","default":null},"subProcess":{"type":"boolean","description":"Whether to enable Sub Process debugging","default":false},"showReturnValue":{"type":"boolean","description":"Show return value of functions when stepping.","default":true},"processId":{"anyOf":[{"enum":["${command:pickProcess}"],"description":"Use process picker to select a process to attach, or Process ID as integer.","default":"${command:pickProcess}"},{"type":"integer","description":"ID of the local process to attach to."}]}}}}}],"configuration":{"type":"object","title":"Python","properties":{"python.diagnostics.sourceMapsEnabled":{"type":"boolean","default":false,"description":"Enable source map support for meaningful stack traces in error logs.","scope":"application"},"python.autoComplete.addBrackets":{"type":"boolean","default":false,"description":"Automatically add brackets for functions.","scope":"resource"},"python.autoComplete.extraPaths":{"type":"array","default":[],"description":"List of paths to libraries and the like that need to be imported by auto complete engine. E.g. when using Google App SDK, the paths are not in system path, hence need to be added into this list.","scope":"resource"},"python.autoComplete.showAdvancedMembers":{"type":"boolean","default":true,"description":"Controls appearance of methods with double underscores in the completion list.","scope":"resource"},"python.autoComplete.typeshedPaths":{"type":"array","items":{"type":"string"},"default":[],"description":"Specifies paths to local typeshed repository clone(s) for the Python language server.","scope":"resource"},"python.autoUpdateLanguageServer":{"type":"boolean","default":true,"description":"Automatically update the language server.","scope":"application"},"python.logging.level":{"type":"string","default":"error","enum":["off","error","warn","info","debug"],"description":"The logging level the extension logs at, defaults to 'error'","scope":"machine"},"python.experiments.enabled":{"type":"boolean","default":true,"description":"Enables/disables A/B tests.","scope":"machine"},"python.defaultInterpreterPath":{"type":"string","default":"python","description":"Path to Python, you can use a custom version of Python by modifying this setting to include the full path.","scope":"machine"},"python.experiments.optInto":{"type":"array","default":[],"items":{"enum":["AlwaysDisplayTestExplorer - experiment","ShowExtensionSurveyPrompt - enabled","Reload - experiment","AA_testing - experiment","LocalZMQKernel - experiment","NativeNotebook - experiment","CustomEditorSupport - experiment","UseTerminalToGetActivatedEnvVars - experiment","CollectLSRequestTiming - experiment","CollectNodeLSRequestTiming - experiment","DeprecatePythonPath - experiment","RunByLine - experiment","tryPylance","jediLSP","debuggerDataViewer","All"]},"description":"List of experiment to opt into. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.","scope":"machine"},"python.experiments.optOutFrom":{"type":"array","default":[],"items":{"enum":["AlwaysDisplayTestExplorer - experiment","ShowExtensionSurveyPrompt - enabled","Reload - experiment","AA_testing - experiment","LocalZMQKernel - experiment","NativeNotebook - experiment","CustomEditorSupport - experiment","UseTerminalToGetActivatedEnvVars - experiment","CollectLSRequestTiming - experiment","CollectNodeLSRequestTiming - experiment","DeprecatePythonPath - experiment","RunByLine - experiment","tryPylance","jediLSP","debuggerDataViewer","All"]},"description":"List of experiment to opt out of. If empty, user is assigned the default experiment groups. See https://github.com/microsoft/vscode-python/wiki/Experiments for more details.","scope":"machine"},"python.dataScience.allowImportFromNotebook":{"type":"boolean","default":true,"description":"Allows a user to import a jupyter notebook into a python file anytime one is opened.","scope":"resource"},"python.dataScience.widgetScriptSources":{"type":"array","default":[],"items":{"type":"string","enum":["jsdelivr.com","unpkg.com"],"enumDescriptions":["Loads widget (javascript) scripts from https://www.jsdelivr.com/","Loads widget (javascript) scripts from https://unpkg.com/"]},"uniqueItems":true,"markdownDescription":"Defines the location and order of the sources where scripts files for Widgets are downloaded from (e.g. ipywidgest, bqplot, beakerx, ipyleaflet, etc). Not selecting any of these could result in widgets not rendering or function correctly. See [here](https://aka.ms/PVSCIPyWidgets) for more information. Once updated you will need to restart the Kernel.","scope":"machine"},"python.dataScience.askForLargeDataFrames":{"type":"boolean","default":true,"description":"Warn the user before trying to open really large data frames.","scope":"application"},"python.dataScience.askForKernelRestart":{"type":"boolean","default":true,"description":"Warn the user before restarting a kernel.","scope":"application"},"python.dataScience.enabled":{"type":"boolean","default":true,"description":"Enable the experimental data science features in the python extension.","scope":"resource"},"python.dataScience.exportWithOutputEnabled":{"type":"boolean","default":false,"description":"Enable exporting a python file into a jupyter notebook and run all cells when doing so.","scope":"resource"},"python.dataScience.jupyterLaunchTimeout":{"type":"number","default":60000,"description":"Amount of time (in ms) to wait for the Jupyter Notebook server to start.","scope":"resource"},"python.dataScience.jupyterLaunchRetries":{"type":"number","default":3,"description":"Number of times to attempt to connect to the Jupyter Notebook","scope":"resource"},"python.dataScience.jupyterServerURI":{"type":"string","default":"local","description":"When a Notebook Editor or Interactive Window session is started, create the kernel on the specified Jupyter server. Select 'local' to create a new Jupyter server on this local machine.","scope":"resource"},"python.dataScience.jupyterCommandLineArguments":{"type":"array","default":[],"description":"When a Notebook Editor or Interactive Window Jupyter server is started, these arguments will be passed to it. By default this list is generated by the Python Extension.","scope":"resource"},"python.dataScience.notebookFileRoot":{"type":"string","default":"${fileDirname}","description":"Set the root directory for loading files for the Python Interactive window.","scope":"resource"},"python.dataScience.searchForJupyter":{"type":"boolean","default":true,"description":"Search all installed Python interpreters for a Jupyter installation when starting the Python Interactive window","scope":"resource"},"python.dataScience.changeDirOnImportExport":{"type":"boolean","default":false,"description":"When importing or exporting a Jupyter Notebook add a directory change command to allow relative path loading to work.","scope":"resource"},"python.dataScience.useDefaultConfigForJupyter":{"type":"boolean","default":true,"description":"When running Jupyter locally, create a default empty Jupyter config for the Python Interactive window","scope":"resource"},"python.dataScience.jupyterInterruptTimeout":{"type":"number","default":10000,"description":"Amount of time (in ms) to wait for an interrupt before asking to restart the Jupyter kernel.","scope":"resource"},"python.dataScience.allowInput":{"type":"boolean","default":true,"description":"Allow the inputting of python code directly into the Python Interactive window"},"python.dataScience.showCellInputCode":{"type":"boolean","default":true,"description":"Show cell input code.","scope":"resource"},"python.dataScience.collapseCellInputCodeByDefault":{"type":"boolean","default":true,"description":"Collapse cell input code by default.","scope":"resource"},"python.dataScience.maxOutputSize":{"type":"number","default":400,"description":"Maximum size (in pixels) of text output in the Notebook Editor before a scrollbar appears. First enable scrolling for cell outputs in settings.","scope":"resource"},"python.dataScience.alwaysScrollOnNewCell":{"type":"boolean","default":false,"description":"Automatically scroll the interactive window to show the output of the last statement executed. If false, the interactive window will only automatically scroll if the bottom of the prior cell is visible.","scope":"resource"},"python.dataScience.enableScrollingForCellOutputs":{"type":"boolean","default":true,"description":"Enables scrolling for large cell outputs in the Notebook Editor. This setting does not apply to the Python Interactive Window.","scope":"resource"},"python.dataScience.errorBackgroundColor":{"type":"string","default":"#FFFFFF","description":"Background color (in hex) for exception messages in the Python Interactive window.","scope":"resource","deprecationMessage":"No longer necessary as the theme colors are used for error messages"},"python.dataScience.sendSelectionToInteractiveWindow":{"type":"boolean","default":false,"description":"Determines if selected code in a python file will go to the terminal or the Python Interactive window when hitting shift+enter","scope":"resource"},"python.dataScience.showJupyterVariableExplorer":{"type":"boolean","default":true,"description":"Show the variable explorer in the Python Interactive window.","deprecationMessage":"This setting no longer applies. It is ignored.","scope":"resource"},"python.dataScience.variableExplorerExclude":{"type":"string","default":"module;function;builtin_function_or_method","description":"Types to exclude from showing in the Python Interactive variable explorer","scope":"resource"},"python.dataScience.codeRegularExpression":{"type":"string","default":"^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])","description":"Regular expression used to identify code cells. All code until the next match is considered part of this cell. \nDefaults to '^(#\\s*%%|#\\s*\\<codecell\\>|#\\s*In\\[\\d*?\\]|#\\s*In\\[ \\])' if left blank","scope":"resource"},"python.dataScience.defaultCellMarker":{"type":"string","default":"# %%","description":"Cell marker used for delineating a cell in a python file.","scope":"resource"},"python.dataScience.markdownRegularExpression":{"type":"string","default":"^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)","description":"Regular expression used to identify markdown cells. All comments after this expression are considered part of the markdown. \nDefaults to '^(#\\s*%%\\s*\\[markdown\\]|#\\s*\\<markdowncell\\>)' if left blank","scope":"resource"},"python.dataScience.allowLiveShare":{"type":"boolean","default":true,"description":"Allow the Python Interactive window to be shared during a Live Share session","scope":"resource"},"python.dataScience.ignoreVscodeTheme":{"type":"boolean","default":false,"description":"Don't use the VS Code theme in the Python Interactive window (requires reload of VS Code). This forces the Python Interactive window to use 'Light +(default light)' and disables matplotlib defaults.","scope":"resource"},"python.dataScience.themeMatplotlibPlots":{"type":"boolean","default":false,"description":"In the Python Interactive window and Notebook Editor theme matplotlib outputs to match the VS Code editor theme.","scope":"resource"},"python.dataScience.liveShareConnectionTimeout":{"type":"number","default":1000,"description":"Amount of time to wait for guest connections to verify they have the Python extension installed.","scope":"application"},"python.dataScience.decorateCells":{"type":"boolean","default":true,"description":"Draw a highlight behind the currently active cell.","scope":"resource"},"python.dataScience.enableCellCodeLens":{"type":"boolean","default":true,"description":"Enables code lens for 'cells' in a python file.","scope":"resource"},"python.dataScience.enableAutoMoveToNextCell":{"type":"boolean","default":true,"description":"Enables moving to the next cell when clicking on a 'Run Cell' code lens.","scope":"resource"},"python.dataScience.autoPreviewNotebooksInInteractivePane":{"type":"boolean","deprecationMessage":"No longer supported. Notebooks open directly in their own editor now.","default":false,"description":"When opening ipynb files, automatically preview the contents in the Python Interactive window.","scope":"resource"},"python.dataScience.useNotebookEditor":{"type":"boolean","default":true,"description":"Automatically open .ipynb files in the Notebook Editor.","scope":"resource"},"python.dataScience.allowUnauthorizedRemoteConnection":{"type":"boolean","default":false,"description":"Allow for connecting the Python Interactive window to a https Jupyter server that does not have valid certificates. This can be a security risk, so only use for known and trusted servers.","scope":"resource"},"python.dataScience.enablePlotViewer":{"type":"boolean","default":true,"description":"Modify plot output so that it can be expanded into a plot viewer window.","scope":"resource"},"python.dataScience.gatherToScript":{"type":"boolean","default":false,"description":"Gather code to a python script rather than a notebook.","scope":"resource"},"python.dataScience.gatherSpecPath":{"type":"string","default":"","description":"This setting specifies a folder that contains additional or replacement spec files used for analysis.","scope":"resource"},"python.dataScience.codeLenses":{"type":"string","default":"python.datascience.runcell,  python.datascience.runallcellsabove, python.datascience.debugcell","description":"Set of commands to put as code lens above a cell. Defaults to 'python.datascience.runcell,  python.datascience.runallcellsabove, python.datascience.debugcell'","scope":"resource"},"python.dataScience.debugCodeLenses":{"type":"string","default":"python.datascience.debugcontinue, python.datascience.debugstop, python.datascience.debugstepover","description":"Set of debug commands to put as code lens above a cell while debugging.","scope":"resource"},"python.dataScience.debugpyDistPath":{"type":"string","default":"","description":"Path to debugpy bits for debugging cells.","scope":"resource"},"python.dataScience.stopOnFirstLineWhileDebugging":{"type":"boolean","default":true,"description":"When debugging a cell, stop on the first line.","scope":"resource"},"python.dataScience.remoteDebuggerPort":{"type":"number","default":-1,"description":"When debugging a cell, open this port on the remote box. If -1 is specified, a random port between 8889 and 9000 will be attempted.","scope":"resource"},"python.dataScience.disableJupyterAutoStart":{"type":"boolean","default":false,"description":"When true, disables Jupyter from being automatically started for you. You must instead run a cell to start Jupyter.","scope":"resource"},"python.dataScience.textOutputLimit":{"type":"number","default":20000,"description":"Limit the amount of text in Python Interactive cell text output to this value. 0 to allow any amount of characters.","scope":"resource"},"python.dataScience.colorizeInputBox":{"type":"boolean","default":true,"description":"Whether or not to use the theme's peek color as the background for the input box.","scope":"resource"},"python.dataScience.stopOnError":{"type":"boolean","default":true,"description":"Stop running cells if a cell throws an exception.","scope":"resource"},"python.dataScience.addGotoCodeLenses":{"type":"boolean","default":true,"description":"After running a cell, add a 'Goto' code lens on the cell. Note, disabling all code lenses disables this code lens as well.","scope":"resource"},"python.dataScience.variableQueries":{"type":"array","description":"Language to query mapping for returning the list of active variables in a Jupyter kernel. Used by the Variable Explorer in both the Interactive Window and Notebooks. Example: \n'[\n{\n   \"language\": \"python\",\n   \"query\": \"%who_ls\",\n  \"parseExpr\": \"'(\\\\w+)'\"\n}\n]'","scope":"machine","examples":[[{"language":"python","query":"_rwho_ls = %who_ls\\nprint(_rwho_ls)","parseExpr":"'(\\w+)'"},{"language":"julia","query":"whos","parseExpr":"'(\\w+)'"}]]},"python.dataScience.interactiveWindowMode":{"type":"string","enum":["perFile","single","multiple"],"scope":"resource","description":"Behavior of the Python Interactive Window. 'perFile' will create a new interactive window for every file that runs a cell. 'single' allows a single window. 'multiple' allows the creation of multiple.","default":"multiple"},"python.disableInstallationCheck":{"type":"boolean","default":false,"description":"Whether to check if Python is installed (also warn when using the macOS-installed Python).","scope":"resource"},"python.envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions.","default":"${workspaceFolder}/.env","scope":"resource"},"python.formatting.autopep8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.autopep8Path":{"type":"string","default":"autopep8","description":"Path to autopep8, you can use a custom version of autopep8 by modifying this setting to include the full path.","scope":"resource"},"python.formatting.provider":{"type":"string","default":"autopep8","description":"Provider for formatting. Possible options include 'autopep8', 'black', and 'yapf'.","enum":["autopep8","black","yapf","none"],"scope":"resource"},"python.formatting.blackArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.blackPath":{"type":"string","default":"black","description":"Path to Black, you can use a custom version of Black by modifying this setting to include the full path.","scope":"resource"},"python.formatting.yapfArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.formatting.yapfPath":{"type":"string","default":"yapf","description":"Path to yapf, you can use a custom version of yapf by modifying this setting to include the full path.","scope":"resource"},"python.globalModuleInstallation":{"type":"boolean","default":false,"description":"Whether to install Python modules globally when not using an environment.","scope":"resource"},"python.jediMemoryLimit":{"type":"number","default":0,"description":"Memory limit for the Jedi completion engine in megabytes. Zero (default) means 1024 MB. -1 means unlimited (disable memory limit check)","scope":"resource"},"python.jediPath":{"type":"string","default":"","description":"Path to directory containing the Jedi library (this path will contain the 'Jedi' sub directory). Note: since Jedi depends on Parso, if using this setting you will need to ensure a suitable version of Parso is available.","scope":"resource"},"python.languageServer":{"type":"string","enum":["Jedi","Pylance","Microsoft","None"],"default":"Jedi","description":"Defines type of the language server.","scope":"window"},"python.analysis.diagnosticPublishDelay":{"type":"integer","default":1000,"description":"Delay before diagnostic messages are transferred to the problems list (in milliseconds).","scope":"resource"},"python.analysis.errors":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as errors.","scope":"resource"},"python.analysis.warnings":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as warnings.","scope":"resource"},"python.analysis.information":{"type":"array","default":[],"items":{"type":"string"},"description":"List of diagnostics messages to be shown as information.","scope":"resource"},"python.analysis.disabled":{"type":"array","default":[],"items":{"type":"string"},"description":"List of suppressed diagnostic messages.","scope":"resource"},"python.analysis.typeshedPaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Paths to Typeshed stub folders. Default is Typeshed installed with the language server. Change requires restart.","scope":"resource"},"python.analysis.cacheFolderPath":{"type":"string","description":"Path to a writable folder where analyzer can cache its data. Change requires restart.","scope":"resource"},"python.analysis.memory.keepLibraryAst":{"type":"boolean","default":false,"description":"Allows code analysis to keep parser trees in memory. Increases memory consumption but may improve performance with large library analysis.","scope":"resource"},"python.analysis.logLevel":{"type":"string","enum":["Error","Warning","Information","Trace"],"default":"Error","description":"Defines type of log messages language server writes into the output window.","scope":"resource"},"python.analysis.symbolsHierarchyDepthLimit":{"type":"integer","default":10,"description":"Limits depth of the symbol tree in the document outline.","scope":"resource"},"python.linting.enabled":{"type":"boolean","default":true,"description":"Whether to lint Python files.","scope":"resource"},"python.linting.flake8Args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.flake8CategorySeverity.E":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.F":{"type":"string","default":"Error","description":"Severity of Flake8 message type 'F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8CategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of Flake8 message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.flake8Enabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using flake8","scope":"resource"},"python.linting.flake8Path":{"type":"string","default":"flake8","description":"Path to flake8, you can use a custom version of flake8 by modifying this setting to include the full path.","scope":"resource"},"python.linting.ignorePatterns":{"type":"array","description":"Patterns used to exclude files or folders from being linted.","default":[".vscode/*.py","**/site-packages/**/*.py"],"items":{"type":"string"},"scope":"resource"},"python.linting.lintOnSave":{"type":"boolean","default":true,"description":"Whether to lint Python files when saved.","scope":"resource"},"python.linting.maxNumberOfProblems":{"type":"number","default":100,"description":"Controls the maximum number of problems produced by the server.","scope":"resource"},"python.linting.banditArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.banditEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using bandit.","scope":"resource"},"python.linting.banditPath":{"type":"string","default":"bandit","description":"Path to bandit, you can use a custom version of bandit by modifying this setting to include the full path.","scope":"resource"},"python.linting.mypyArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["--ignore-missing-imports","--follow-imports=silent","--show-column-numbers"],"items":{"type":"string"},"scope":"resource"},"python.linting.mypyCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Mypy message type 'Error'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyCategorySeverity.note":{"type":"string","default":"Information","description":"Severity of Mypy message type 'Note'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.mypyEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using mypy.","scope":"resource"},"python.linting.mypyPath":{"type":"string","default":"mypy","description":"Path to mypy, you can use a custom version of mypy by modifying this setting to include the full path.","scope":"resource"},"python.linting.pycodestyleArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pycodestyleCategorySeverity.E":{"type":"string","default":"Error","description":"Severity of pycodestyle message type 'E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pycodestyleCategorySeverity.W":{"type":"string","default":"Warning","description":"Severity of pycodestyle message type 'W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pycodestyleEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pycodestyle","scope":"resource"},"python.linting.pycodestylePath":{"type":"string","default":"pycodestyle","description":"Path to pycodestyle, you can use a custom version of pycodestyle by modifying this setting to include the full path.","scope":"resource"},"python.linting.prospectorArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.prospectorEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using prospector.","scope":"resource"},"python.linting.prospectorPath":{"type":"string","default":"prospector","description":"Path to Prospector, you can use a custom version of prospector by modifying this setting to include the full path.","scope":"resource"},"python.linting.pydocstyleArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pydocstyleEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pydocstyle","scope":"resource"},"python.linting.pydocstylePath":{"type":"string","default":"pydocstyle","description":"Path to pydocstyle, you can use a custom version of pydocstyle by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylamaArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylamaEnabled":{"type":"boolean","default":false,"description":"Whether to lint Python files using pylama.","scope":"resource"},"python.linting.pylamaPath":{"type":"string","default":"pylama","description":"Path to pylama, you can use a custom version of pylama by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.linting.pylintCategorySeverity.convention":{"type":"string","default":"Information","description":"Severity of Pylint message type 'Convention/C'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.error":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Error/E'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.fatal":{"type":"string","default":"Error","description":"Severity of Pylint message type 'Fatal/F'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.refactor":{"type":"string","default":"Hint","description":"Severity of Pylint message type 'Refactor/R'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintCategorySeverity.warning":{"type":"string","default":"Warning","description":"Severity of Pylint message type 'Warning/W'.","enum":["Hint","Error","Information","Warning"],"scope":"resource"},"python.linting.pylintEnabled":{"type":"boolean","default":true,"description":"Whether to lint Python files using pylint.","scope":"resource"},"python.linting.pylintPath":{"type":"string","default":"pylint","description":"Path to Pylint, you can use a custom version of pylint by modifying this setting to include the full path.","scope":"resource"},"python.linting.pylintUseMinimalCheckers":{"type":"boolean","default":true,"description":"Whether to run Pylint with minimal set of rules.","scope":"resource"},"python.pythonPath":{"type":"string","default":"python","description":"Path to Python, you can use a custom version of Python by modifying this setting to include the full path.","scope":"resource"},"python.condaPath":{"type":"string","default":"","description":"Path to the conda executable to use for activation (version 4.4+).","scope":"resource"},"python.pipenvPath":{"type":"string","default":"pipenv","description":"Path to the pipenv executable to use for activation.","scope":"resource"},"python.poetryPath":{"type":"string","default":"poetry","description":"Path to the poetry executable.","scope":"resource"},"python.sortImports.args":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.sortImports.path":{"type":"string","description":"Path to isort script, default using inner version","default":"","scope":"resource"},"python.terminal.activateEnvironment":{"type":"boolean","default":true,"description":"Activate Python Environment in Terminal created using the Extension.","scope":"resource"},"python.terminal.executeInFileDir":{"type":"boolean","default":false,"description":"When executing a file in the terminal, whether to use execute in the file's directory, instead of the current open folder.","scope":"resource"},"python.terminal.launchArgs":{"type":"array","default":[],"description":"Python launch arguments to use when executing a file in the terminal.","scope":"resource"},"python.terminal.activateEnvInCurrentTerminal":{"type":"boolean","default":false,"description":"Activate Python Environment in the current Terminal on load of the Extension.","scope":"resource"},"python.testing.cwd":{"type":"string","default":null,"description":"Optional working directory for tests.","scope":"resource"},"python.testing.debugPort":{"type":"number","default":3000,"description":"Port number used for debugging of tests.","scope":"resource"},"python.testing.nosetestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.testing.nosetestsEnabled":{"type":"boolean","default":false,"description":"Enable testing using nosetests.","scope":"resource"},"python.testing.nosetestPath":{"type":"string","default":"nosetests","description":"Path to nosetests, you can use a custom version of nosetests by modifying this setting to include the full path.","scope":"resource"},"python.testing.promptToConfigure":{"type":"boolean","default":true,"description":"Prompt to configure a test framework if potential tests directories are discovered.","scope":"resource"},"python.testing.pytestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":[],"items":{"type":"string"},"scope":"resource"},"python.testing.pytestEnabled":{"type":"boolean","default":false,"description":"Enable testing using pytest.","scope":"resource"},"python.testing.pytestPath":{"type":"string","default":"pytest","description":"Path to pytest (pytest), you can use a custom version of pytest by modifying this setting to include the full path.","scope":"resource"},"python.testing.unittestArgs":{"type":"array","description":"Arguments passed in. Each argument is a separate item in the array.","default":["-v","-s",".","-p","*test*.py"],"items":{"type":"string"},"scope":"resource"},"python.testing.unittestEnabled":{"type":"boolean","default":false,"description":"Enable testing using unittest.","scope":"resource"},"python.testing.autoTestDiscoverOnSaveEnabled":{"type":"boolean","default":true,"description":"Enable auto run test discovery when saving a test file.","scope":"resource"},"python.venvFolders":{"type":"array","default":[],"description":"Folders in your home directory to look into for virtual environments (supports pyenv, direnv and virtualenvwrapper by default).","scope":"resource","items":{"type":"string"}},"python.venvPath":{"type":"string","default":"","description":"Path to folder with a list of Virtual Environments (e.g. ~/.pyenv, ~/Envs, ~/.virtualenvs).","scope":"resource"},"python.workspaceSymbols.ctagsPath":{"type":"string","default":"ctags","description":"Fully qualified path to the ctags executable (else leave as ctags, assuming it is in current path).","scope":"resource"},"python.workspaceSymbols.enabled":{"type":"boolean","default":false,"description":"Set to 'true' to enable ctags to provide Workspace Symbols.","scope":"resource"},"python.workspaceSymbols.exclusionPatterns":{"type":"array","default":["**/site-packages/**"],"items":{"type":"string"},"description":"Pattern used to exclude files and folders from ctags See http://ctags.sourceforge.net/ctags.html.","scope":"resource"},"python.workspaceSymbols.rebuildOnFileSave":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on when changes made to python files are saved.","scope":"resource"},"python.workspaceSymbols.rebuildOnStart":{"type":"boolean","default":true,"description":"Whether to re-build the tags file on start (defaults to true).","scope":"resource"},"python.workspaceSymbols.tagFilePath":{"type":"string","default":"${workspaceFolder}/.vscode/tags","description":"Fully qualified path to tag file (exuberant ctag file), used to provide workspace symbols.","scope":"resource"},"python.dataScience.magicCommandsAsComments":{"type":"boolean","default":false,"description":"Uncomment shell assignments (#!), line magic (#!%) and cell magic (#!%%) when parsing code cells.","scope":"resource"},"python.dataScience.runMagicCommands":{"type":"string","default":"","deprecationMessage":"This setting has been deprecated in favor of 'runStartupCommands'.","description":"A series of Python instructions or iPython magic commands separated by '\\n' that will be executed when the interactive window loads.","scope":"application"},"python.dataScience.runStartupCommands":{"type":"array","default":"","description":"A series of Python instructions or iPython magic commands. Can be either an array of strings or a single string with commands separated by '\\n'. Commands will be silently executed whenever the interactive window loads. For instance, set this to '%load_ext autoreload\\n%autoreload 2' to automatically reload changes made to imported files without having to restart the interactive session.","scope":"application"},"python.dataScience.debugJustMyCode":{"type":"boolean","default":true,"description":"When debugging, debug just my code.","scope":"resource"},"python.dataScience.alwaysTrustNotebooks":{"type":"boolean","default":false,"markdownDescription":"Enabling this setting will automatically trust any opened notebook and therefore display markdown and render code cells. You will no longer be prompted to trust individual notebooks and harmful code could automatically run. \n\n[Learn more.](https://aka.ms/trusted-notebooks)","scope":"machine"},"python.insidersChannel":{"type":"string","default":"off","description":"Set to \"weekly\" or \"daily\" to automatically download and install the latest Insiders builds of the python extension, which include upcoming features and bug fixes.","enum":["off","weekly","daily"],"scope":"application"},"python.showStartPage":{"type":"boolean","default":true,"description":"Show the Python Start Page when a new update is released.","scope":"application"}}},"languages":[{"id":"pip-requirements","aliases":["pip requirements","requirements.txt"],"filenames":["requirements.txt","constraints.txt","requirements.in"],"filenamePatterns":["*-requirements.txt","requirements-*.txt","constraints-*.txt","*-constraints.txt","*-requirements.in","requirements-*.in"],"configuration":"./languages/pip-requirements.json"},{"id":"yaml","filenames":[".condarc"]},{"id":"toml","filenames":["poetry.lock","Pipfile"]},{"id":"json","filenames":["Pipfile.lock"]},{"id":"ini","filenames":[".flake8"]},{"id":"jinja","extensions":[".jinja2",".j2"],"aliases":["Jinja"]},{"id":"jupyter","aliases":["Jupyter","Notebook"],"extensions":[".ipynb"]},{"id":"julia","aliases":["Julia","julia"],"extensions":[".jl"]}],"grammars":[{"language":"pip-requirements","scopeName":"source.pip-requirements","path":"./syntaxes/pip-requirements.tmLanguage.json"}],"jsonValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"yamlValidation":[{"fileMatch":".condarc","url":"./schemas/condarc.json"},{"fileMatch":"environment.yml","url":"./schemas/conda-environment.json"},{"fileMatch":"meta.yaml","url":"./schemas/conda-meta.json"}],"views":{"test":[{"id":"python_tests","name":"Python","when":"testsDiscovered"}]},"notebookOutputRenderer":[{"id":"jupyter-notebook-renderer","entrypoint":"./out/datascience-ui/renderers/renderers.js","displayName":"Jupyter Notebook Renderer","mimeTypes":["application/geo+json","application/vdom.v1+json","application/vnd.dataresource+json","application/vnd.plotly.v1+json","application/vnd.vega.v2+json","application/vnd.vega.v3+json","application/vnd.vega.v4+json","application/vnd.vega.v5+json","application/vnd.vegalite.v1+json","application/vnd.vegalite.v2+json","application/vnd.vegalite.v3+json","application/vnd.vegalite.v4+json","application/x-nteract-model-debug+json","image/gif","image/png","image/jpeg","text/latex","text/vnd.plotly.v1+html"],"viewType":"jupyter-notebook"}],"notebookProvider":[{"viewType":"jupyter-notebook","displayName":"Jupyter Notebook (preview)","selector":[{"filenamePattern":"*.ipynb"}],"priority":"option"}],"customEditors":[{"viewType":"ms-python.python.notebook.ipynb","displayName":"Jupyter Notebook","selector":[{"filenamePattern":"*.ipynb"}],"priority":"option"}]},"scripts":{"package":"gulp clean && gulp prePublishBundle && vsce package -o ms-python-insiders.vsix","compile":"tsc -watch -p ./","compiled":"deemon npm run compile","kill-compiled":"deemon --kill npm run compile","compile-webviews-watch":"gulp compile-ipywidgets && gulp compile-renderers && cross-env NODE_OPTIONS=--max_old_space_size=9096 webpack --config ./build/webpack/webpack.datascience-ui.config.js --watch","compile-webviews-watchd":"deemon npm run compile-webviews-watch","kill-compile-webviews-watchd":"deemon --kill npm run compile-webviews-watch","build-ipywidgets":"npm run build-ipywidgets-clean && npm run build-ipywidgets-compile && npm run build-ipywidgets-webpack","build-ipywidgets-clean":"node ./src/ipywidgets/scripts/clean.js","build-ipywidgets-compile":"tsc -p ./src/ipywidgets && rimraf ./out/tsconfig.tsbuildinfo && node ./src/ipywidgets/scripts/copyfiles.js","build-ipywidgets-webpack":"cross-env NODE_OPTIONS=--max_old_space_size=9096 webpack --config ./src/ipywidgets/webpack.config.js","checkDependencies":"gulp checkDependencies","postinstall":"node ./build/ci/postInstall.js","test":"node ./out/test/standardTest.js && node ./out/test/multiRootTest.js","test:unittests":"mocha --config ./build/.mocha.unittests.js.json","test:unittests:cover":"nyc --no-clean --nycrc-path build/.nycrc mocha --config ./build/.mocha.unittests.ts.json","test:functional":"mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:perf":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.perf.json","test:functional:memleak":"node --inspect-brk ./node_modules/mocha/bin/_mocha --require source-map-support/register --config ./build/.mocha.functional.json","test:functional:cover":"npm run test:functional","test:functional:parallel":"cross-env VSC_PYTHON_CI_TEST_PARALLEL=1 node ./build/ci/scripts/runFunctionalTests.js","test:cover:report":"nyc --nycrc-path build/.nycrc  report --reporter=text --reporter=html --reporter=text-summary --reporter=cobertura","testDebugger":"node ./out/test/testBootstrap.js ./out/test/debuggerTest.js","testSingleWorkspace":"node ./out/test/testBootstrap.js ./out/test/standardTest.js","preTestJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js","testJediLSP":"node ./out/test/languageServers/jedi/lspSetup.js && cross-env CODE_TESTS_WORKSPACE=src/test VSC_PYTHON_CI_TEST_GREP='Language Server:' node ./out/test/testBootstrap.js ./out/test/standardTest.js && node ./out/test/languageServers/jedi/lspTeardown.js","pretestDataScience":"node ./out/test/datascience/dsTestSetup.js","testDataScience":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_PYTHON_CI_TEST_VSC_CHANNEL=insiders TEST_FILES_SUFFIX=native.vscode.test VSC_PYTHON_FORCE_LOGGING=1 VSC_PYTHON_LOAD_EXPERIMENTS_FROM_FILE=true node ./out/test/testBootstrap.js ./out/test/standardTest.js","pretestDataScienceInVSCode":"node ./out/test/datascience/dsTestSetup.js","testDataScienceInVSCode":"cross-env CODE_TESTS_WORKSPACE=src/test/datascience VSC_PYTHON_CI_TEST_VSC_CHANNEL=stable TEST_FILES_SUFFIX=vscode.test VSC_PYTHON_FORCE_LOGGING=1 VSC_PYTHON_LOAD_EXPERIMENTS_FROM_FILE=true node ./out/test/testBootstrap.js ./out/test/standardTest.js","testMultiWorkspace":"node ./out/test/testBootstrap.js ./out/test/multiRootTest.js","testPerformance":"node ./out/test/testBootstrap.js ./out/test/performanceTest.js","testSmoke":"node ./out/test/smokeTest.js","lint-staged":"node gulpfile.js","lint":"tslint src/**/*.ts -t verbose","prettier-fix":"prettier 'src/**/*.ts*' --write && prettier 'build/**/*.js' --write","clean":"gulp clean","updateBuildNumber":"gulp updateBuildNumber","verifyBundle":"gulp verifyBundle","webpack":"webpack"},"dependencies":{"@jupyter-widgets/schema":"^0.4.0","@jupyterlab/coreutils":"^3.1.0","@jupyterlab/services":"^4.2.0","@loadable/component":"^5.12.0","@nteract/messaging":"^7.0.0","@types/tcp-port-used":"^1.0.0","ansi-regex":"^4.1.0","arch":"^2.1.0","azure-storage":"^2.10.3","detect-indent":"^6.0.0","diff-match-patch":"^1.0.0","fast-deep-equal":"^2.0.1","font-awesome":"^4.7.0","fs-extra":"^4.0.3","fuzzy":"^0.1.3","get-port":"^3.2.0","glob":"^7.1.2","hash.js":"^1.1.7","iconv-lite":"^0.4.21","inversify":"^4.11.1","is-online":"^8.2.1","jsonc-parser":"^2.0.3","line-by-line":"^0.1.6","lodash":"^4.17.19","log4js":"^6.1.2","md5":"^2.2.1","minimatch":"^3.0.4","named-js-regexp":"^1.3.3","node-fetch":"^2.6.1","node-stream-zip":"^1.6.0","onigasm":"^2.2.2","pdfkit":"^0.11.0","pidusage":"^1.2.0","portfinder":"^1.0.25","react-draggable":"^4.4.2","reflect-metadata":"^0.1.12","request":"^2.87.0","request-progress":"^3.0.0","rxjs":"^6.5.4","rxjs-compat":"^6.5.4","sanitize-filename":"^1.6.3","semver":"^5.5.0","stack-trace":"0.0.10","string-argv":"^0.3.1","strip-ansi":"^5.2.0","sudo-prompt":"^8.2.0","svg-to-pdfkit":"^0.1.8","tcp-port-used":"^1.0.1","tmp":"^0.0.29","tree-kill":"^1.2.2","typescript-char":"^0.0.0","uint64be":"^1.0.1","unicode":"^10.0.0","untildify":"^3.0.2","vscode-debugadapter":"^1.28.0","vscode-debugprotocol":"^1.28.0","vscode-extension-telemetry":"0.1.4","vscode-jsonrpc":"6.0.0-next.5","vscode-languageclient":"7.0.0-next.9","vscode-languageserver":"7.0.0-next.7","vscode-languageserver-protocol":"3.16.0-next.7","vscode-tas-client":"^0.1.4","vsls":"^0.3.1291","winreg":"^1.2.4","winston":"^3.2.1","ws":"^6.0.0","xml2js":"^0.4.19","zeromq":"^6.0.0-beta.6"},"devDependencies":{"@babel/cli":"^7.8.4","@babel/core":"^7.4.4","@babel/plugin-transform-runtime":"^7.4.4","@babel/polyfill":"^7.4.4","@babel/preset-env":"^7.1.0","@babel/preset-react":"^7.0.0","@babel/register":"^7.9.0","@blueprintjs/select":"^3.11.2","@enonic/fnv-plus":"^1.3.0","@istanbuljs/nyc-config-typescript":"^0.1.3","@jupyter-widgets/base":"^2.0.1","@jupyter-widgets/controls":"^1.5.2","@jupyter-widgets/jupyterlab-manager":"^1.0.2","@jupyter-widgets/output":"^2.0.1","@nteract/transform-dataresource":"^4.3.5","@nteract/transform-geojson":"^3.2.3","@nteract/transform-model-debug":"^3.2.3","@nteract/transform-plotly":"^6.0.0","@nteract/transform-vega":"^6.0.3","@nteract/transforms":"^4.4.7","@phosphor/widgets":"^1.9.3","@sinonjs/fake-timers":"^6.0.1","@testing-library/react":"^9.4.0","@types/ansi-regex":"^4.0.0","@types/chai":"^4.1.2","@types/chai-arrays":"^1.0.2","@types/chai-as-promised":"^7.1.0","@types/copy-webpack-plugin":"^4.4.2","@types/cors":"^2.8.6","@types/debug":"^4.1.5","@types/dedent":"^0.7.0","@types/del":"^3.0.0","@types/diff-match-patch":"^1.0.32","@types/download":"^6.2.2","@types/enzyme":"^3.1.14","@types/enzyme-adapter-react-16":"^1.0.3","@types/event-stream":"^3.3.33","@types/fs-extra":"^5.0.1","@types/get-port":"^3.2.0","@types/glob":"^5.0.35","@types/html-webpack-plugin":"^3.2.0","@types/iconv-lite":"^0.0.1","@types/jsdom":"^11.12.0","@types/loadable__component":"^5.10.0","@types/loader-utils":"^1.1.3","@types/lodash":"^4.14.104","@types/md5":"^2.1.32","@types/memoize-one":"^4.1.1","@types/mocha":"^5.2.7","@types/nock":"^10.0.3","@types/node":"^10.14.18","@types/node-fetch":"^2.5.7","@types/pdfkit":"^0.7.36","@types/promisify-node":"^0.4.0","@types/react":"^16.4.14","@types/react-dom":"^16.0.8","@types/react-json-tree":"^0.6.8","@types/react-redux":"^7.1.5","@types/react-virtualized":"^9.21.2","@types/redux-logger":"^3.0.7","@types/request":"^2.47.0","@types/semver":"^5.5.0","@types/shortid":"^0.0.29","@types/sinon":"^7.5.1","@types/sinonjs__fake-timers":"^6.0.1","@types/socket.io":"^2.1.4","@types/stack-trace":"0.0.29","@types/temp":"^0.8.32","@types/tmp":"0.0.33","@types/untildify":"^3.0.0","@types/uuid":"^3.4.3","@types/vscode":"^1.47.0","@types/vscode-notebook-renderer":"^1.48.0","@types/webpack-bundle-analyzer":"^2.13.0","@types/winreg":"^1.2.30","@types/ws":"^6.0.1","@types/xml2js":"^0.4.2","@typescript-eslint/eslint-plugin":"^3.7.0","@typescript-eslint/parser":"^3.7.0","acorn":"^6.4.1","ansi-to-html":"^0.6.7","babel-loader":"^8.0.3","babel-plugin-inline-json-import":"^0.3.1","babel-plugin-transform-runtime":"^6.23.0","babel-polyfill":"^6.26.0","bootstrap":"^4.3.1","bootstrap-less":"^3.3.8","brfs":"^2.0.2","cache-loader":"^4.1.0","canvas":"^2.6.0","chai":"^4.1.2","chai-arrays":"^2.0.0","chai-as-promised":"^7.1.1","chai-http":"^4.3.0","codecov":"^3.7.1","colors":"^1.2.1","copy-webpack-plugin":"^5.1.1","cors":"^2.8.5","cross-env":"^6.0.3","cross-spawn":"^6.0.5","css-loader":"^1.0.1","dedent":"^0.7.0","deemon":"^1.4.0","del":"^3.0.0","download":"^7.0.0","enzyme":"^3.7.0","enzyme-adapter-react-16":"^1.6.0","eslint":"^7.2.0","eslint-config-airbnb":"^18.2.0","eslint-config-prettier":"^6.9.0","eslint-plugin-import":"^2.22.0","eslint-plugin-jsx-a11y":"^6.3.1","eslint-plugin-prettier":"^3.1.2","eslint-plugin-react":"^7.20.3","eslint-plugin-react-hooks":"^4.0.0","event-stream":"3.3.4","expose-loader":"^0.7.5","express":"^4.17.1","extract-zip":"^1.6.7","fast-xml-parser":"^3.16.0","file-loader":"^5.1.0","filemanager-webpack-plugin-fixed":"^2.0.9","flat":"^4.0.0","fork-ts-checker-webpack-plugin":"^4.1.6","gulp":"^4.0.0","gulp-azure-storage":"^0.11.1","gulp-chmod":"^2.0.0","gulp-filter":"^5.1.0","gulp-gunzip":"^1.1.0","gulp-rename":"^1.4.0","gulp-sourcemaps":"^2.6.4","gulp-typescript":"^4.0.1","gulp-untar":"0.0.8","gulp-vinyl-zip":"^2.1.2","html-webpack-plugin":"^3.2.0","husky":"^1.1.2","immutable":"^4.0.0-rc.12","jsdom":"^15.0.0","json-loader":"^0.5.7","less":"^3.9.0","less-loader":"^5.0.0","less-plugin-inline-urls":"^1.2.0","loader-utils":"^1.1.0","lolex":"^5.1.2","memoize-one":"^5.1.1","mocha":"^8.1.1","mocha-junit-reporter":"^1.17.0","mocha-multi-reporters":"^1.1.7","monaco-editor":"0.18.1","monaco-editor-textmate":"^2.2.1","monaco-editor-webpack-plugin":"^1.7.0","monaco-textmate":"^3.0.1","nocache":"^2.1.0","nock":"^10.0.6","node-has-native-dependencies":"^1.0.2","node-html-parser":"^1.1.13","nyc":"^15.0.0","playwright-chromium":"^0.13.0","plotly.js-dist":"^1.56.0","postcss":"^7.0.27","postcss-cssnext":"^3.1.0","postcss-import":"^12.0.1","postcss-loader":"^3.0.0","prettier":"^2.0.2","range-inclusive":"^1.0.2","raw-loader":"^0.5.1","react":"^16.5.2","react-data-grid":"^6.0.2-0","react-dev-utils":"^5.0.2","react-dom":"^16.5.2","react-json-tree":"^0.11.0","react-redux":"^7.1.1","react-svg-pan-zoom":"^3.1.0","react-svgmt":"^1.1.8","react-virtualized":"^9.21.1","redux":"^4.0.4","redux-logger":"^3.0.6","relative":"^3.0.2","remove-files-webpack-plugin":"^1.4.0","requirejs":"^2.3.6","rewiremock":"^3.13.0","rimraf":"^3.0.2","sass-loader":"^7.1.0","serialize-javascript":"^3.1.0","shortid":"^2.2.8","sinon":"^8.0.1","slickgrid":"^2.4.17","socket.io":"^2.3.0","source-map-support":"^0.5.12","style-loader":"^0.23.1","styled-jsx":"^3.1.0","svg-inline-loader":"^0.8.0","svg-inline-react":"^3.1.0","terser-webpack-plugin":"^3.1.0","thread-loader":"^2.1.3","transform-loader":"^0.2.4","ts-loader":"^5.3.0","ts-mock-imports":"^1.3.0","ts-mockito":"^2.5.0","ts-node":"^8.3.0","tsconfig-paths-webpack-plugin":"^3.2.0","tslint":"^5.20.1","tslint-config-prettier":"^1.18.0","tslint-eslint-rules":"^5.1.0","tslint-microsoft-contrib":"^5.0.3","tslint-plugin-prettier":"^2.1.0","typed-react-markdown":"^0.1.0","typemoq":"^2.1.0","typescript":"^4.0.2","typescript-formatter":"^7.1.0","unicode-properties":"^1.3.1","url-loader":"^1.1.2","uuid":"^3.3.2","vinyl-fs":"^3.0.3","vsce":"^1.59.0","vscode-debugadapter-testsupport":"^1.27.0","vscode-test":"^1.2.3","webpack":"^4.33.0","webpack-bundle-analyzer":"^3.6.0","webpack-cli":"^3.1.2","webpack-fix-default-import-plugin":"^1.0.3","webpack-merge":"^4.1.4","webpack-node-externals":"^1.7.2","webpack-require-from":"^1.8.0","why-is-node-running":"^2.0.3","wtfnode":"^0.8.0","yargs":"^15.3.1"},"uuid":"f1f59ae4-9318-4f3c-a9b5-81b2eaa5f8a5","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-python.python","identifier":{"value":"ms-python.python","_lower":"ms-python.python"},"extensionLocation":{"$mid":1,"fsPath":"/home/mipy/.vscode-oss/extensions/ms-python.python-2020.10.332292344","path":"/home/mipy/.vscode-oss/extensions/ms-python.python-2020.10.332292344","scheme":"file"}},{"name":"cpptools","displayName":"C/C++","description":"C/C++ IntelliSense, debugging, and code browsing.","version":"1.5.1","publisher":"ms-vscode","icon":"LanguageCCPP_color_128x.png","readme":"README.md","author":{"name":"Microsoft Corporation"},"license":"SEE LICENSE IN LICENSE.txt","engines":{"vscode":"^1.53.0"},"bugs":{"url":"https://github.com/Microsoft/vscode-cpptools/issues","email":"c_cpp_support@microsoft.com"},"repository":{"type":"git","url":"https://github.com/Microsoft/vscode-cpptools.git"},"homepage":"https://github.com/Microsoft/vscode-cpptools","qna":"https://github.com/Microsoft/vscode-cpptools/issues","keywords":["C","C++","IntelliSense","Microsoft","multi-root ready"],"categories":["Programming Languages","Debuggers","Formatters","Linters","Snippets"],"capabilities":{"untrustedWorkspaces":{"supported":false,"description":"Multiple settings can cause processes local to the workspace to be executed, e.g. C_Cpp.clang_format_path, C_Cpp.addNodeAddonIncludePaths, C_Cpp.default.compilerPath, C_Cpp.default.configurationProvider, and C_Cpp.default.compileCommands, and the equivalent properties in c_cpp_properties.json."},"virtualWorkspaces":false},"activationEvents":["onLanguage:c","onLanguage:cpp","onLanguage:cuda-cpp","onCommand:extension.pickNativeProcess","onCommand:extension.pickRemoteNativeProcess","onCommand:C_Cpp.BuildAndDebugActiveFile","onCommand:C_Cpp.ConfigurationEditJSON","onCommand:C_Cpp.ConfigurationEditUI","onCommand:C_Cpp.ConfigurationSelect","onCommand:C_Cpp.ConfigurationProviderSelect","onCommand:C_Cpp.SwitchHeaderSource","onCommand:C_Cpp.EnableErrorSquiggles","onCommand:C_Cpp.DisableErrorSquiggles","onCommand:C_Cpp.ToggleIncludeFallback","onCommand:C_Cpp.ToggleDimInactiveRegions","onCommand:C_Cpp.ResetDatabase","onCommand:C_Cpp.TakeSurvey","onCommand:C_Cpp.LogDiagnostics","onCommand:C_Cpp.RescanWorkspace","onCommand:C_Cpp.VcpkgClipboardInstallSuggested","onCommand:C_Cpp.VcpkgOnlineHelpSuggested","onCommand:C_Cpp.GenerateEditorConfig","onCommand:C_Cpp.GoToNextDirectiveInGroup","onCommand:C_Cpp.GoToPrevDirectiveInGroup","onCommand:C_Cpp.CheckForCompiler","onDebugInitialConfigurations","onDebugResolve:cppdbg","onDebugResolve:cppvsdbg","workspaceContains:/.vscode/c_cpp_properties.json","onFileSystem:cpptools-schema"],"main":"./dist/main","contributes":{"walkthroughs":[{"id":"cppWelcome","title":"Get Started with C++ Development","description":"Dive into VS Code's rich C++ development experience.","when":"false","steps":[{"id":"verify.compiler.mac","title":"Install a C++ compiler","description":"The C++ extension uses the C++ compiler on your system to configure IntelliSense for your project. \n[Check for C++ compilers](command:C_Cpp.CheckForCompiler)","when":"workspacePlatform == mac","media":{"markdown":"walkthrough/installcompiler/install-clang-macos.md"}},{"id":"verify.compiler.linux","title":"Install a C++ compiler","description":"The C++ extension uses the C++ compiler on your system to configure IntelliSense for your project. \n[Check for C++ compilers](command:C_Cpp.CheckForCompiler)","when":"workspacePlatform == linux","media":{"markdown":"walkthrough/installcompiler/install-gcc-linux.md"}},{"id":"verify.compiler.windows","title":"Install a C++ compiler","description":"The C++ extension uses the C++ compiler on your system to configure IntelliSense for your project. \n[Check for C++ compilers](command:C_Cpp.CheckForCompiler)","when":"workspacePlatform == windows","media":{"markdown":"walkthrough/installcompiler/install-compiler-windows.md"}},{"id":"open.project","title":"Open your project folder","description":"Open an existing folder that contains your C++ project, or create a new folder. \n[Pick a folder](command:workbench.action.files.openFolder)","when":"workspaceFolderCount == 0","media":{"altText":"A screenshot that shows a C++ project opened in the file Explorer.","image":{"light":"walkthrough/images/cpp-folder-explorer-light.png","dark":"walkthrough/images/cpp-folder-explorer-dark.png","hc":"walkthrough/images/cpp-folder-explorer-hc.png"}}},{"id":"setup.intellisense","title":"Configure C++ IntelliSense","description":"Verify important IntelliSense settings like Compiler Path, Compiler Args, IntelliSense Mode, and Include Path. \n[Open IntelliSense Configuration](command:C_Cpp.ConfigurationEditUI?-2)","media":{"altText":"A screenshot that shows the IntelliSense Configurations UI with important settings highlighted.","image":{"light":"walkthrough/images/intellisense-config-light.png","dark":"walkthrough/images/intellisense-config-dark.png","hc":"walkthrough/images/intellisense-config-hc.png"}}},{"id":"run.project.mac","title":"Run and debug your C++ file","description":"Create a default build task and debug configuration for your project. \n[Learn more](https://code.visualstudio.com/docs/cpp/config-clang-mac#_debug-helloworldcpp)","when":"workspacePlatform == mac","media":{"markdown":"walkthrough/debugconfig/run-and-debug-project-mac.md"}},{"id":"run.project.linux","title":"Run and debug your C++ file","description":"Create a default build task and debug configuration for your project. \n[Learn more](https://code.visualstudio.com/docs/cpp/config-linux#_debug-helloworldcpp)","when":"workspacePlatform == linux","media":{"markdown":"walkthrough/debugconfig/run-and-debug-project-linux.md"}},{"id":"run.project.windows","title":"Run and debug your C++ file","description":"Create a default build task and debug configuration for your project. \n[Learn more](https://code.visualstudio.com/docs/cpp/config-msvc#_debug-helloworldcpp)","when":"workspacePlatform == windows","media":{"markdown":"walkthrough/debugconfig/run-and-debug-project-windows.md"}},{"id":"install.cmake.tools","title":"Install CMake Tools","description":"Do you build your project with CMake? Install the CMake Tools extension to seamlessly build and debug your CMake project. \n[Install CMake Tools](command:workbench.extensions.installExtension?%22ms-vscode.cmake-tools%22)","completionEvents":["extensionInstalled:ms-vscode.cmake-tools"],"media":{"altText":"A screenshot of the CMake Tools extension page in the Marketplace.","image":{"light":"walkthrough/images/cmake-tools-light.png","dark":"walkthrough/images/cmake-tools-dark.png","hc":"walkthrough/images/cmake-tools-hc.png"}}},{"id":"watch.tutorials","title":"Lean back and get started","description":"Watch this series of short and practical videos about setting up C++ IntelliSense and building and debugging C++ projects. \n[Watch Tutorials](https://code.visualstudio.com/docs/cpp/introvideos-cpp)","media":{"altText":"A screenshot with a preview of the video tutorial and a play button.","image":"walkthrough/images/getting-started-video.png"}}]}],"taskDefinitions":[{"type":"cppbuild","required":["command","label"],"properties":{"label":{"type":"string","description":"The name of the task"},"command":{"type":"string","description":"The path to either a compiler or script that performs compilation"},"args":{"type":"array","description":"Additional arguments to pass to the compiler or compilation script"},"options":{"type":"object","description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."}}},"detail":{"type":"string","description":"Additional details of the task"}}}],"views":{"references-view":[{"id":"CppReferencesView","name":"C/C++: Other references results","when":"cppReferenceTypes:hasResults"}]},"viewsWelcome":[{"view":"debug","contents":"To learn more about launch.json, see [Configuring C/C++ debugging](https://code.visualstudio.com/docs/cpp/launch-json-reference).","when":"debugStartLanguage == cpp || debugStartLanguage == c || debugStartLanguage == cuda-cpp"}],"problemMatchers":[{"name":"gcc","source":"gcc","owner":"cpptools","fileLocation":["autoDetect","${workspaceFolder}"],"pattern":{"regexp":"^(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}}],"configuration":{"type":"object","title":"C/C++","properties":{"C_Cpp.clang_format_path":{"type":"string","description":"The full path of the clang-format executable. If not specified, and clang-format is available in the environment path, that is used. If not found in the environment path, a copy of clang-format bundled with the extension will be used.","scope":"machine-overridable"},"C_Cpp.clang_format_style":{"type":"string","default":"file","description":"Coding style, currently supports: Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit. Use \"file\" to load the style from a .clang-format file in the current or parent directory. Use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }","scope":"machine-overridable"},"C_Cpp.formatting":{"type":"string","enum":["clangFormat","vcFormat","Default","Disabled"],"enumDescriptions":["clang-format will be used to format code.","The Visual C++ formatting engine will be used to format code.","clang-format will be used to format code.","Code formatting will be disabled."],"default":"clangFormat","description":"Configures the formatting engine","scope":"resource"},"C_Cpp.vcFormat.indent.braces":{"type":"boolean","default":false,"description":"Braces are indented by the amount specified in the Editor: Tab Size setting.","scope":"resource"},"C_Cpp.vcFormat.indent.multiLineRelativeTo":{"type":"string","enum":["outermostParenthesis","innermostParenthesis","statementBegin"],"enumDescriptions":["Indent new line relative to the outermost open parenthesis.","Indent new line relative to the innermost open parenthesis.","Indent new line relative to the beginning of the current statement."],"default":"innermostParenthesis","description":"Determines what new line indentation is relative to","scope":"resource"},"C_Cpp.vcFormat.indent.withinParentheses":{"type":"string","enum":["alignToParenthesis","indent"],"enumDescriptions":["New line is aligned under the opening parenthesis.","New line is indented based on \"C_Cpp.vcFormat.indent.multiLineRelativeTo\"."],"default":"indent","description":"When a new line is typed, it is aligned under the opening parenthesis or based on \"C_Cpp.vcFormat.indent.multiLineRelativeTo\".","scope":"resource"},"C_Cpp.vcFormat.indent.preserveWithinParentheses":{"type":"boolean","default":false,"description":"In existing code, preserve the existing indent alignment of new lines within parentheses.","scope":"resource"},"C_Cpp.vcFormat.indent.caseLabels":{"type":"boolean","default":false,"description":"Labels are indented relative to switch statements by the amount specified in the Editor: Tab Size setting.","scope":"resource"},"C_Cpp.vcFormat.indent.caseContents":{"type":"boolean","default":true,"description":"Code inside case block is indented relative to its label by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.caseContentsWhenBlock":{"type":"boolean","default":false,"description":"Indent braces following a case statement by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.lambdaBracesWhenParameter":{"type":"boolean","default":true,"description":"Indent braces of lambdas used as function parameters relative to the start of the statement by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.gotoLabels":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"enumDescriptions":["Position goto labels to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting","Position goto labels at the leftmost edge of the code.","Goto labels will not be formatted."],"default":"oneLeft","description":"The position of goto labels","scope":"resource"},"C_Cpp.vcFormat.indent.preprocessor":{"type":"string","enum":["oneLeft","leftmostColumn","none"],"enumDescriptions":["Preprocessor directives are positioned to the left of the current code indentation, by the amount specified in the Editor: Tab Size setting","Preprocessor directives are positioned at the leftmost edge of the code.","Preprocessor directives will not be formatted."],"default":"leftmostColumn","description":"The position of preprocessor directives","scope":"resource"},"C_Cpp.vcFormat.indent.accessSpecifiers":{"type":"boolean","default":false,"description":"Access specifiers are indented relative to class or struct definitions by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.namespaceContents":{"type":"boolean","default":true,"description":"Code is indented relative to its enclosing namespace by the amount specified in the Editor: Tab Size setting","scope":"resource"},"C_Cpp.vcFormat.indent.preserveComments":{"type":"boolean","default":false,"description":"Indentation of comments is not changed during formatting operations.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.namespace":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for namespaces","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.type":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for type definitions","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.function":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for functions","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.block":{"type":"string","enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for control blocks","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeOpenBrace.lambda":{"enum":["newLine","sameLine","ignore"],"enumDescriptions":["Opening braces are moved to a new line.","Opening braces are kept on the same line and a space is added before each one.","Opening braces are not formatted."],"default":"ignore","description":"The position of opening braces for lambda functions","scope":"resource"},"C_Cpp.vcFormat.newLine.scopeBracesOnSeparateLines":{"type":"boolean","default":false,"description":"Place opening and closing braces for scopes on separate lines.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyType":{"type":"boolean","default":false,"description":"For empty types, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.closeBraceSameLine.emptyFunction":{"type":"boolean","default":false,"description":"For empty function bodies, move closing braces to the same line as opening braces.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeCatch":{"type":"boolean","default":true,"description":"Place 'catch' and similar keywords on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeElse":{"type":"boolean","default":true,"description":"Place 'else' on a new line.","scope":"resource"},"C_Cpp.vcFormat.newLine.beforeWhileInDoWhile":{"type":"boolean","default":false,"description":"Place 'while' in a do-while loop on a new line.","scope":"resource"},"C_Cpp.vcFormat.space.beforeFunctionOpenParenthesis":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["Add a space before the opening parenthesis of a function.","Spaces before opening parenthesis of a function are removed.","Spaces are left as entered."],"default":"remove","description":"Spacing between function names and opening parentheses of argument lists","scope":"resource"},"C_Cpp.vcFormat.space.withinParameterListParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in function parameter lists.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyParameterListParentheses":{"type":"boolean","default":false,"description":"When a function parameter list is empty, a space is inserted between its parentheses.","scope":"resource"},"C_Cpp.vcFormat.space.afterKeywordsInControlFlowStatements":{"type":"boolean","default":true,"description":"A space is added between the keyword and opening parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.withinControlFlowStatementParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis in control flow statements.","scope":"resource"},"C_Cpp.vcFormat.space.beforeLambdaOpenParenthesis":{"type":"boolean","default":false,"description":"A space is added before the opening parenthesis of lambda argument lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinCastParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.afterCastCloseParenthesis":{"type":"boolean","default":false,"description":"A space is added after the closing parenthesis of a C-style cast.","scope":"resource"},"C_Cpp.vcFormat.space.withinExpressionParentheses":{"type":"boolean","default":false,"description":"A space is added after the opening parenthesis and also before the closing parenthesis of a parenthesized expression.","scope":"resource"},"C_Cpp.vcFormat.space.beforeBlockOpenBrace":{"type":"boolean","default":true,"description":"A space is added before the opening braces of scope blocks.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyBraces":{"type":"boolean","default":false,"description":"When braces are empty and on the same line, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInitializerListOpenBrace":{"type":"boolean","default":false,"description":"A space is added before the opening brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.withinInitializerListBraces":{"type":"boolean","default":true,"description":"A space is added after the opening brace and also before the closing brace of uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.preserveInInitializerList":{"type":"boolean","default":true,"description":"Spaces around commas are preserved inside uniform initialization and initializer lists.","scope":"resource"},"C_Cpp.vcFormat.space.beforeOpenSquareBracket":{"type":"boolean","default":false,"description":"A space is added before opening square brackets.","scope":"resource"},"C_Cpp.vcFormat.space.withinSquareBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.beforeEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is added before the opening bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptySquareBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.groupSquareBrackets":{"type":"boolean","default":true,"description":"For multi-dimensional arrays, all space between brackets is removed. Other settings that control space are overridden.","scope":"resource"},"C_Cpp.vcFormat.space.withinLambdaBrackets":{"type":"boolean","default":false,"description":"A space is added after the opening square bracket and also before the closing square bracket.","scope":"resource"},"C_Cpp.vcFormat.space.betweenEmptyLambdaBrackets":{"type":"boolean","default":false,"description":"When square brackets are empty, a space is inserted between them.","scope":"resource"},"C_Cpp.vcFormat.space.beforeComma":{"type":"boolean","default":false,"description":"A space is added before every comma.","scope":"resource"},"C_Cpp.vcFormat.space.afterComma":{"type":"boolean","default":true,"description":"A space is added after every comma.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundMemberOperators":{"type":"boolean","default":true,"description":"Spaces around member access operators, pointer-to-member operators, and scope resolution operators are removed.","scope":"resource"},"C_Cpp.vcFormat.space.beforeInheritanceColon":{"type":"boolean","default":true,"description":"A space is added before the colon for inherited types in class definitions.","scope":"resource"},"C_Cpp.vcFormat.space.beforeConstructorColon":{"type":"boolean","default":true,"description":"A space is added before the colon in constructor definitions.","scope":"resource"},"C_Cpp.vcFormat.space.removeBeforeSemicolon":{"type":"boolean","default":true,"description":"Spaces are removed before every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.insertAfterSemicolon":{"type":"boolean","default":false,"description":"A space is inserted after every semicolon.","scope":"resource"},"C_Cpp.vcFormat.space.removeAroundUnaryOperator":{"type":"boolean","default":true,"description":"Spaces between unary operators and operands are removed.","scope":"resource"},"C_Cpp.vcFormat.space.aroundBinaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around binary operators","scope":"resource"},"C_Cpp.vcFormat.space.aroundAssignmentOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around assignment operators","scope":"resource"},"C_Cpp.vcFormat.space.pointerReferenceAlignment":{"type":"string","enum":["left","center","right","ignore"],"enumDescriptions":["Pointer and reference operators are aligned to the left.","Pointer and reference operators are centered.","Pointer and reference operators are aligned to the right.","Pointer and reference operators are not formatted."],"default":"left","description":"Spaces around pointer and reference operators","scope":"resource"},"C_Cpp.vcFormat.space.aroundTernaryOperator":{"type":"string","enum":["insert","remove","ignore"],"enumDescriptions":["A space is added before the operator and also after it.","Spaces before and after the operator are removed.","Spaces are left as entered."],"default":"insert","description":"Spaces around conditional operators","scope":"resource"},"C_Cpp.vcFormat.wrap.preserveBlocks":{"type":"string","enum":["oneLiners","allOneLineScopes","never"],"enumDescriptions":["A complete code block that is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings","Any code where the opening and closing brace is entered on one line is kept on one line, regardless of the values of any of the VC Format: New Line settings","Code blocks are always formatted based on the values of the VC Format: New Line settings"],"default":"oneLiners","description":"Wrapping options for blocks","scope":"resource"},"C_Cpp.clang_format_fallbackStyle":{"type":"string","default":"Visual Studio","description":"Name of the predefined style used as a fallback in case clang-format is invoked with style \"file\" but the .clang-format file is not found. Possible values are Visual Studio, LLVM, Google, Chromium, Mozilla, WebKit, none, or use {key: value, ...} to set specific parameters. For example, the \"Visual Studio\" style is similar to: { BasedOnStyle: LLVM, UseTab: Never, IndentWidth: 4, TabWidth: 4, BreakBeforeBraces: Allman, AllowShortIfStatementsOnASingleLine: false, IndentCaseLabels: false, ColumnLimit: 0, AccessModifierOffset: -4, NamespaceIndentation: All, FixNamespaceComments: false }","scope":"machine-overridable"},"C_Cpp.clang_format_sortIncludes":{"type":["boolean","null"],"enum":[true,false,null],"default":null,"description":"If set, overrides the include sorting behavior determined by the SortIncludes parameter.","scope":"resource"},"C_Cpp.intelliSenseEngine":{"type":"string","enum":["Default","Tag Parser","Disabled"],"default":"Default","description":"Controls the IntelliSense provider. \"Tag Parser\" provides \"fuzzy\" results that are not context-aware. \"Default\" provides context-aware results. \"Disabled\" turns off C/C++ language service features.","scope":"resource"},"C_Cpp.intelliSenseEngineFallback":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether the IntelliSense engine will automatically switch to the Tag Parser for translation units containing #include errors.","scope":"resource"},"C_Cpp.autocomplete":{"type":"string","enum":["Default","Disabled"],"default":"Default","description":"Controls the auto-completion provider. \"Default\" uses the active IntelliSense engine. \"Disabled\" uses the word-based completion provided by Visual Studio Code.","scope":"resource"},"C_Cpp.errorSquiggles":{"type":"string","enum":["Enabled","Disabled","EnabledIfIncludesResolve"],"default":"EnabledIfIncludesResolve","description":"Controls whether suspected compile errors detected by the IntelliSense engine will be reported back to the editor. This setting is ignored by the Tag Parser engine.","scope":"resource"},"C_Cpp.dimInactiveRegions":{"type":"boolean","default":true,"description":"Controls whether inactive preprocessor blocks are colored differently than active code. This setting has no effect if IntelliSense is disabled or if using the Default High Contrast theme.","scope":"resource"},"C_Cpp.inactiveRegionOpacity":{"type:":"number","default":0.55,"description":"Controls the opacity of inactive preprocessor blocks. Scales between 0.1 and 1.0. This setting only applies when inactive region dimming is enabled.","scope":"resource","minimum":0.1,"maximum":1},"C_Cpp.inactiveRegionForegroundColor":{"type":"string","description":"Controls the font coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to the syntax coloring scheme of the editor. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.inactiveRegionBackgroundColor":{"type":"string","description":"Controls the background coloring of inactive preprocessor blocks. Input is in the form a hexadecimal color code or a valid Theme Color. If not set, this defaults to transparent. This setting only applies when inactive region dimming is enabled.","scope":"resource"},"C_Cpp.loggingLevel":{"type":"string","enum":["None","Error","Warning","Information","Debug"],"default":"Error","description":"The verbosity of logging in the Output Panel. The order of levels from least verbose to most verbose is: None < Error < Warning < Information < Debug.","scope":"window"},"C_Cpp.autoAddFileAssociations":{"type":"boolean","default":true,"description":"Controls whether files are automatically added to files.associations when they are the target of a navigation operation from a C/C++ file.","scope":"window"},"C_Cpp.workspaceParsingPriority":{"type":"string","enum":["highest","high","medium","low"],"default":"highest","description":"Controls whether parsing of the non-active workspace files uses sleeps to avoid using 100% CPU. The values highest/high/medium/low correspond to approximately 100/75/50/25% CPU usage.","scope":"window"},"C_Cpp.workspaceSymbols":{"type":"string","enum":["All","Just My Code"],"default":"Just My Code","description":"The symbols to include in the query results when 'Go to Symbol in Workspace' is invoked.","scope":"window"},"C_Cpp.exclusionPolicy":{"type":"string","enum":["checkFolders","checkFilesAndFolders"],"default":"checkFolders","description":"Instructs the extension when to use the \"files.exclude\" setting when determining which files should be added to the code navigation database while traversing through the paths in the \"browse.path\" array. \"checkFolders\" means that the exclusion filters will only be evaluated once per folder (individual files are not checked). \"checkFilesAndFolders\" means that the exclusion filters will be evaluated against every file and folder encountered. If your \"files.exclude\" setting only contains folders, then \"checkFolders\" is the best choice and will increase the speed at which the extension can initialize the code navigation database.","scope":"resource"},"C_Cpp.preferredPathSeparator":{"type":"string","enum":["Forward Slash","Backslash"],"default":"Forward Slash","description":"The character used as a path separator for #include auto-completion results.","scope":"machine-overridable"},"C_Cpp.simplifyStructuredComments":{"type":"boolean","default":true,"description":"If true, tooltips of hover and auto-complete will only display certain labels of structured comments. Otherwise, all comments are displayed.","scope":"application"},"C_Cpp.commentContinuationPatterns":{"type":"array","default":["/**"],"items":{"anyOf":[{"type":"string","description":"The pattern that begins a multiline or single line comment block. The continuation pattern defaults to ' * ' for multiline comment blocks or this string for single line comment blocks."},{"type":"object","properties":{"begin":{"type":"string","description":"The pattern that begins a multiline or single line comment block."},"continue":{"type":"string","description":"The text that will be inserted on the next line when Enter is pressed inside a multiline or single line comment block."}}}]},"description":"Defines the editor behavior for when the Enter key is pressed inside a multiline or single line comment block.","scope":"window"},"C_Cpp.configurationWarnings":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"Determines whether pop up notifications will be shown when a configuration provider extension is unable to provide a configuration for a source file.","scope":"resource"},"C_Cpp.intelliSenseCachePath":{"type":"string","description":"Defines the folder path for cached precompiled headers used by IntelliSense. The default cache path is \"%LocalAppData%/Microsoft/vscode-cpptools\" on Windows, \"$XDG_CACHE_HOME/vscode-cpptools/\" on Linux (or \"$HOME/.cache/vscode-cpptools/\" if XDG_CACHE_HOME is not defined), and \"$HOME/Library/Caches/vscode-cpptools/\" on Mac. The default path will be used if no path is specified or if a specified path is invalid.","scope":"machine-overridable"},"C_Cpp.intelliSenseCacheSize":{"type":"number","default":5120,"description":"Maximum size of the per-workspace hard drive space in megabytes (MB) for cached precompiled headers; the actual usage may fluctuate around this value. The default size is 5120 MB. Precompiled header caching is disabled when the size is 0.","scope":"machine-overridable","minimum":0},"C_Cpp.intelliSenseMemoryLimit":{"type":"number","default":4096,"description":"Memory usage limit in megabytes (MB) of an IntelliSense process. The default limit is 4096 MB and the maximum limit is 16 GB. The extension will shutdown and restart an IntelliSense process when it exceeds the limit.","scope":"machine-overridable","minimum":256,"maximum":16384},"C_Cpp.intelliSenseUpdateDelay":{"type":"number","default":2000,"description":"Controls the delay in milliseconds before IntelliSense starts updating after a modification.","scope":"application","minimum":500,"maximum":3000},"C_Cpp.default.includePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"includePath\" is not specified in c_cpp_properties.json. If \"includePath\" is specified, add \"${default}\" to the array to insert the values from this setting.","scope":"machine-overridable"},"C_Cpp.default.defines":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"defines\" is not specified, or the values to insert if \"${default}\" is present in \"defines\".","scope":"machine-overridable"},"C_Cpp.default.macFrameworkPath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"macFrameworkPath\" is not specified, or the values to insert if \"${default}\" is present in \"macFrameworkPath\".","scope":"machine-overridable"},"C_Cpp.default.windowsSdkVersion":{"type":"string","description":"Version of the Windows SDK include path to use on Windows, e.g. '10.0.17134.0'.","pattern":"^((\\d{2}\\.\\d{1}\\.\\d{5}\\.\\d{1}$|^8\\.1)|())$","scope":"machine-overridable"},"C_Cpp.default.compileCommands":{"type":"string","description":"The value to use in a configuration if \"compileCommands\" is either not specified, or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.forcedInclude":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"forcedInclude\" is not specified, or the values to insert if \"${default}\" is present in \"forcedInclude\".","scope":"machine-overridable"},"C_Cpp.default.intelliSenseMode":{"type":"string","enum":["","macos-clang-x86","macos-clang-x64","macos-clang-arm","macos-clang-arm64","macos-gcc-x86","macos-gcc-x64","macos-gcc-arm","macos-gcc-arm64","linux-clang-x86","linux-clang-x64","linux-clang-arm","linux-clang-arm64","linux-gcc-x86","linux-gcc-x64","linux-gcc-arm","linux-gcc-arm64","windows-clang-x86","windows-clang-x64","windows-clang-arm","windows-clang-arm64","windows-gcc-x86","windows-gcc-x64","windows-gcc-arm","windows-gcc-arm64","windows-msvc-x86","windows-msvc-x64","windows-msvc-arm","windows-msvc-arm64","clang-x86","clang-x64","clang-arm","clang-arm64","gcc-x86","gcc-x64","gcc-arm","gcc-arm64","msvc-x86","msvc-x64","msvc-arm","msvc-arm64"],"description":"The value to use in a configuration if \"intelliSenseMode\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.compilerPath":{"type":["string","null"],"default":null,"description":"The value to use in a configuration if \"compilerPath\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.compilerArgs":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in configuration if \"compilerArgs\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.cStandard":{"type":"string","enum":["","c89","c99","c11","c17","gnu89","gnu99","gnu11","gnu17"],"description":"The value to use in a configuration if \"cStandard\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.cppStandard":{"type":"string","enum":["","c++98","c++03","c++11","c++14","c++17","c++20","gnu++98","gnu++03","gnu++11","gnu++14","gnu++17","gnu++20"],"description":"The value to use in a configuration if \"cppStandard\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.configurationProvider":{"type":"string","description":"The value to use in a configuration if \"configurationProvider\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.browse.path":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use in a configuration if \"browse.path\" is not specified, or the values to insert if \"${default}\" is present in \"browse.path\".","scope":"machine-overridable"},"C_Cpp.default.browse.databaseFilename":{"type":"string","description":"The value to use in a configuration if \"browse.databaseFilename\" is either not specified or set to \"${default}\".","scope":"machine-overridable"},"C_Cpp.default.browse.limitSymbolsToIncludedHeaders":{"type":"boolean","default":true,"description":"The value to use in a configuration if \"browse.limitSymbolsToIncludedHeaders\" is either not specified or set to \"${default}\".","scope":"resource"},"C_Cpp.default.systemIncludePath":{"type":["array","null"],"items":{"type":"string"},"default":null,"description":"The value to use for the system include path. If set, it overrides the system include path acquired via \"compilerPath\" and \"compileCommands\" settings.","scope":"machine-overridable"},"C_Cpp.default.customConfigurationVariables":{"type":["object","null"],"default":null,"patternProperties":{"(^.+$)":{"type":"string"}},"description":"The value to use in a configuration if \"customConfigurationVariables\" is not set, or the values to insert if \"${default}\" is present as a key in \"customConfigurationVariables\".","scope":"machine-overridable"},"C_Cpp.default.enableConfigurationSquiggles":{"type":"boolean","default":true,"description":"Controls whether the extension will report errors detected in c_cpp_properties.json.","scope":"resource"},"C_Cpp.updateChannel":{"type":"string","enum":["Default","Insiders"],"default":"Default","description":"Set to \"Insiders\" to automatically download and install the latest Insiders builds of the extension, which include upcoming features and bug fixes.","scope":"application"},"C_Cpp.experimentalFeatures":{"type":"string","enum":["Enabled","Disabled"],"default":"Disabled","description":"Controls whether \"experimental\" features are usable.","scope":"window"},"C_Cpp.suggestSnippets":{"type":"boolean","default":true,"description":"If true, snippets are provided by the language server.","scope":"resource"},"C_Cpp.enhancedColorization":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code is colorized based on IntelliSense. This setting only applies if intelliSenseEngine is set to \"Default\".","scope":"window"},"C_Cpp.vcpkg.enabled":{"type":"boolean","default":true,"markdownDescription":"Enable integration services for the [vcpkg dependency manager](https://aka.ms/vcpkg/).","scope":"resource"},"C_Cpp.addNodeAddonIncludePaths":{"type":"boolean","default":false,"markdownDescription":"Add include paths from nan and node-addon-api when they're dependencies.","scope":"application"},"C_Cpp.renameRequiresIdentifier":{"type":"boolean","default":true,"description":"If true, 'Rename Symbol' will require a valid C/C++ identifier.","scope":"application"},"C_Cpp.debugger.useBacktickCommandSubstitution":{"type":"boolean","default":false,"description":"If true, debugger shell command substitution will use obsolete backtick (`).","scope":"window"},"C_Cpp.codeFolding":{"type":"string","enum":["Enabled","Disabled"],"default":"Enabled","description":"If enabled, code folding ranges are provided by the language server.","scope":"window"},"C_Cpp.autocompleteAddParentheses":{"type":"boolean","default":false,"description":"If true, autocomplete will automatically add \"(\" after function calls, in which case \")\" may also be added, depending on the value of the \"editor.autoClosingBrackets\" setting.","scope":"resource"},"C_Cpp.files.exclude":{"type":"object","markdownDescription":"Configure glob patterns for excluding folders (and files if \"C_Cpp.exclusionPolicy\" is changed). These are specific to the C/C++ extension and are in addition to \"files.exclude\", but unlike \"files.exclude\" they are not removed from the Explorer view. Read more about glob patterns [here](https://code.visualstudio.com/docs/editor/codebasics#_advanced-search-options).","default":{"**/.vscode":true},"additionalProperties":{"anyOf":[{"type":"boolean","description":"The glob pattern to match file paths against. Set to true or false to enable or disable the pattern."},{"type":"object","properties":{"when":{"type":"string","pattern":"\\w*\\$\\(basename\\)\\w*","default":"$(basename).ext","description":"Additional check on the siblings of a matching file. Use $(basename) as variable for the matching file name."}}}]},"scope":"resource"}}},"commands":[{"command":"C_Cpp.ConfigurationSelect","title":"Select a Configuration...","category":"C/C++"},{"command":"C_Cpp.ConfigurationProviderSelect","title":"Change Configuration Provider...","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditJSON","title":"Edit Configurations (JSON)","category":"C/C++"},{"command":"C_Cpp.ConfigurationEditUI","title":"Edit Configurations (UI)","category":"C/C++"},{"command":"C_Cpp.SwitchHeaderSource","title":"Switch Header/Source","category":"C/C++"},{"command":"C_Cpp.EnableErrorSquiggles","title":"Enable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.DisableErrorSquiggles","title":"Disable Error Squiggles","category":"C/C++"},{"command":"C_Cpp.ToggleIncludeFallback","title":"Toggle IntelliSense Engine Fallback on Include Errors","category":"C/C++"},{"command":"C_Cpp.ToggleDimInactiveRegions","title":"Toggle Inactive Region Colorization","category":"C/C++"},{"command":"C_Cpp.ResetDatabase","title":"Reset IntelliSense Database","category":"C/C++"},{"command":"C_Cpp.TakeSurvey","title":"Take Survey","category":"C/C++"},{"command":"C_Cpp.BuildAndDebugActiveFile","title":"Build and Debug Active File","category":"C/C++"},{"command":"C_Cpp.LogDiagnostics","title":"Log Diagnostics","category":"C/C++"},{"command":"C_Cpp.RescanWorkspace","title":"Rescan Workspace","category":"C/C++"},{"command":"C_Cpp.VcpkgClipboardInstallSuggested","title":"Copy vcpkg install command to clipboard","category":"C/C++"},{"command":"C_Cpp.VcpkgOnlineHelpSuggested","title":"Visit the vcpkg help page","category":"C/C++"},{"command":"C_Cpp.GenerateEditorConfig","title":"Generate EditorConfig contents from VC Format settings","category":"C/C++"},{"command":"C_Cpp.referencesViewGroupByType","category":"C/C++","title":"Group by Reference Type","icon":{"light":"assets/ref-group-by-type-light.svg","dark":"assets/ref-group-by-type-dark.svg"}},{"command":"C_Cpp.referencesViewUngroupByType","category":"C/C++","title":"Ungroup by Reference Type","icon":{"light":"assets/ref-ungroup-by-type-light.svg","dark":"assets/ref-ungroup-by-type-dark.svg"}},{"command":"C_Cpp.GoToNextDirectiveInGroup","title":"Go to next preprocessor directive in conditional group","category":"C/C++"},{"command":"C_Cpp.GoToPrevDirectiveInGroup","title":"Go to previous preprocessor directive in conditional group","category":"C/C++"}],"keybindings":[{"command":"C_Cpp.SwitchHeaderSource","key":"Alt+O","when":"editorLangId == 'c' && editorTextFocus || editorLangId == 'cpp' && editorTextFocus || editorLangId == 'cuda-cpp' && editorTextFocus"}],"debuggers":[{"type":"cppdbg","label":"C++ (GDB/LLDB)","languages":["c","cpp","cuda-cpp"],"variables":{"pickProcess":"extension.pickNativeProcess","pickRemoteProcess":"extension.pickRemoteNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"cwd":{"type":"string","description":"The working directory of the target","default":"."},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"customLaunchSetupCommands":{"type":"array","description":"If provided, this replaces the default commands used to launch a target with some other commands. For example, this can be \"-target-attach\" in order to attach to a target process. An empty command list replaces the launch commands with nothing, which can be useful if the debugger is being provided launch options as command line options. Example: \"customLaunchSetupCommands\": [ { \"text\": \"target-run\", \"description\": \"run target\", \"ignoreFailures\": false }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"launchCompleteCommand":{"enum":["exec-run","exec-continue","None"],"description":"The command to execute after the debugger is fully setup in order to cause the target process to run. Allowed values are \"exec-run\", \"exec-continue\", \"None\". The default value is \"exec-run\".","default":"exec-run"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerArgs":{"type":"string","description":"Additional arguments for the MI debugger (such as gdb).","default":""},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"debugServerPath":{"type":"string","description":"Optional full path to the debug server to launch. Defaults to null. It is used in conjunction with either \"miDebugServerAddress\" or your own server with a \"customSetupCommand\" that runs \"-target-select remote <server:port>\".","default":""},"debugServerArgs":{"type":"string","description":"Optional debug server args. Defaults to null.","default":""},"serverStarted":{"type":"string","description":"Optional server-started pattern to look for in the debug server output. Defaults to null.","default":""},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"serverLaunchTimeout":{"type":"integer","description":"Optional time, in milliseconds, for the debugger to wait for the debugServer to start up. Default is 10000.","default":"10000"},"coreDumpPath":{"type":"string","description":"Optional full path to a core dump file for the specified program. Defaults to null.","default":""},"externalConsole":{"type":"boolean","description":"If true, a console is launched for the debuggee. If false, on Linux and Windows, it will appear in the Integrated Console.","default":false},"avoidWindowsConsoleRedirection":{"type":"boolean","description":"If true, disables debuggee console redirection that is required for Integrated Terminal support.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\"","default":""}}},"stopAtConnect":{"type":"boolean","description":"If true, the debugger should stop after connecting to the target. If false, the debugger will continue after connecting. Defaults to false.","default":false},"hardwareBreakpoints":{"description":"Explicit control of hardware breakpoint behavior for remote targets.","default":{},"type":"object","properties":{"require":{"type":"boolean","description":"If true, always use hardware breakpoints. Defaults to false.","default":false},"limit":{"type":"integer","description":"Optional limit on the number of available hardware breakpoints to use. Only enforced when \"require\" is true and \"limit\" is greater than 0. Defaults to 0.","default":0}}}}},"attach":{"type":"object","default":{},"required":["program","processId"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/a.out"},"type":{"type":"string","description":"The type of the engine. Must be \"cppdbg\".","default":"cppdbg"},"targetArchitecture":{"type":"string","description":"The architecture of the debuggee. This will automatically be detected unless this parameter is set. Allowed values are x86, arm, arm64, mips, x64, amd64, x86_64.","default":"x64"},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process. This option is not compatible with GDB pretty printing. Please also see \"showDisplayString\" if using this setting.","default":""},"showDisplayString":{"type":"boolean","description":"When a visualizerFile is specified, showDisplayString will enable the display string. Turning this option on can cause slower performance during debugging.","default":true},"additionalSOLibSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for .so files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"MIMode":{"type":"string","description":"Indicates the console debugger that the MIDebugEngine will connect to. Allowed values are \"gdb\" \"lldb\".","default":"gdb"},"miDebuggerPath":{"type":"string","description":"The path to the MI debugger (such as gdb). When unspecified, it will search path first for the debugger.","default":"/usr/bin/gdb"},"miDebuggerServerAddress":{"type":"string","description":"Network address of the MI Debugger Server to connect to (example: localhost:1234).","default":"serveraddress:port"},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"filterStdout":{"type":"boolean","description":"Search stdout stream for server-started pattern and log stdout to debug output. Defaults to true.","default":true},"filterStderr":{"type":"boolean","description":"Search stderr stream for server-started pattern and log stderr to debug output. Defaults to false.","default":false},"sourceFileMap":{"anyOf":[{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},{"description":"Current and compile-time paths to the same source trees. Files found under the EditorPath are mapped to the CompileTimePath path for breakpoint matching and mapped from CompileTimePath to EditorPath when displaying stacktrace locations.","type":"object","default":{"<source-path>":{"editorPath":"","useForBreakpoints":true}},"properties":{"<source-path>":{"type":"object","default":{"editorPath":"","useForBreakpoints":true},"properties":{"editorPath":{"type":"string","description":"The path to the source tree the editor will use.","default":""},"useForBreakpoints":{"type":"boolean","description":"False if this entry is only used for stack frame location mapping. True if this entry should also be used when specifying breakpoint locations.","default":true}}}}}]},"logging":{"description":"Optional flags to determine what types of messages should be logged to the Debug Console.","type":"object","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false},"traceResponse":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command and response tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"pipeTransport":{"description":"When present, this tells the debugger to connect to a remote computer using another executable as a pipe that will relay standard input/output between VS Code and the MI-enabled debugger backend executable (such as gdb).","type":"object","default":{"pipeCwd":"/usr/bin","pipeProgram":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'","pipeArgs":[],"debuggerPath":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"properties":{"pipeCwd":{"type":"string","description":"The fully qualified path to the working directory for the pipe program.","default":"/usr/bin"},"pipeProgram":{"type":"string","description":"The fully qualified pipe command to execute.","default":"enter the fully qualified path for the pipe program name, for example '/usr/bin/ssh'"},"pipeArgs":{"type":"array","description":"Command line arguments passed to the pipe program to configure the connection.","items":{"type":"string"},"default":[]},"debuggerPath":{"type":"string","description":"The full path to the debugger on the target machine, for example /usr/bin/gdb.","default":"The full path to the debugger on the target machine, for example /usr/bin/gdb."},"pipeEnv":{"type":"object","additionalProperties":{"type":"string"},"description":"Environment variables passed to the pipe program.","default":{}},"quoteArgs":{"exceptions":{"type":"boolean","description":"If the pipeProgram's individual arguments contain characters (such as spaces or tabs), should it be quoted? If 'false', the debugger command will no longer be automatically quoted. Default is 'true'.","default":true}}}},"setupCommands":{"type":"array","description":"One or more GDB/LLDB commands to execute in order to setup the underlying debugger. Example: \"setupCommands\": [ { \"text\": \"-enable-pretty-printing\", \"description\": \"Enable GDB pretty printing\", \"ignoreFailures\": true }].","items":{"type":"object","default":{},"properties":{"text":{"type":"string","description":"The debugger command to execute.","default":""},"description":{"type":"string","description":"Optional description for the command.","default":""},"ignoreFailures":{"type":"boolean","description":"If true, failures from the command should be ignored. Default value is false.","default":false}}},"default":[]},"symbolLoadInfo":{"description":"Explicit control of symbol loading.","type":"object","default":{"loadAll":true,"exceptionList":""},"properties":{"loadAll":{"type":"boolean","description":"If true, symbols for all libs will be loaded, otherwise no solib symbols will be loaded. Default value is true.","default":true},"exceptionList":{"type":"string","description":"List of filenames (wildcards allowed) separated by semicolons ';'. Modifies behavior of LoadAll. If LoadAll is true then don't load symbols for libs that match any name in the list. Otherwise only load symbols for libs that match. Example: \"foo.so;bar.so\"","default":""}}}}}}},{"type":"cppvsdbg","label":"C++ (Windows)","languages":["c","cpp","cuda-cpp"],"variables":{"pickProcess":"extension.pickNativeProcess"},"configurationAttributes":{"launch":{"type":"object","default":{},"required":["program","cwd"],"properties":{"program":{"type":"string","description":"Full path to program executable.","default":"${workspaceRoot}/program.exe"},"args":{"type":"array","description":"Command line arguments passed to the program.","items":{"type":"string"},"default":[]},"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"cwd":{"type":"string","description":"The working directory of the target","default":"${workspaceRoot}"},"environment":{"type":"array","description":"Environment variables to add to the environment for the program. Example: [ { \"name\": \"config\", \"value\": \"Debug\" } ], not [ { \"config\": \"Debug\" } ].","items":{"type":"object","default":{},"properties":{"name":{"type":"string"},"value":{"type":"string"}}},"default":[]},"envFile":{"type":"string","description":"Absolute path to a file containing environment variable definitions. This file has key value pairs separated by an equals sign per line. E.g. KEY=VALUE","default":"${workspaceFolder}/.env"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"stopAtEntry":{"type":"boolean","description":"Optional parameter. If true, the debugger should stop at the entrypoint of the target. If processId is passed, has no effect.","default":false},"dumpPath":{"type":"string","description":"Optional full path to a dump file for the specified program. Example: \"c:\\temp\\app.dmp\". Defaults to null.","default":""},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"externalConsole":{"type":"boolean","description":"[Deprecated by 'console'] If true, a console is launched for the debuggee. If false, no console is launched.","default":false},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:'std::cin' or 'scanf')","VS Code's integrated terminal","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"description":"Where to launch the debug target. Defaults to 'internalConsole' if not defined.","default":"internalConsole"},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"enableDebugHeap":{"type":"boolean","description":"If false, the process will be launched with debug heap disabled. This sets the environment variable '_NO_DEBUG_HEAP' to '1'.","default":false},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"engineLogging":{"type":"boolean","description":"Optional flag to determine whether diagnostic debug engine messages should be logged to the Debug Console. Defaults to false.","default":false},"threadExit":{"type":"boolean","description":"Optional flag to determine whether thread exit messages should be logged to the Debug Console. Default: false.","default":false},"processExit":{"type":"boolean","description":"Optional flag to determine whether target process exit messages should be logged to the Debug Console. Default: true.","default":true}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache.","default":"%TEMP%\\SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}}}},"attach":{"type":"object","default":{},"required":["processId"],"properties":{"type":{"type":"string","description":"The type of the engine. Must be \"cppvsdbg\".","default":"cppvsdbg"},"symbolSearchPath":{"type":"string","description":"Semicolon separated list of directories to use to search for symbol (that is, pdb) files. Example: \"c:\\dir1;c:\\dir2\".","default":""},"processId":{"anyOf":[{"type":"string","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":"${command:pickProcess}"},{"type":"integer","description":"Optional process id to attach the debugger to. Use \"${command:pickProcess}\" to get a list of local running processes to attach to. Note that some platforms require administrator privileges in order to attach to a process.","default":0}]},"visualizerFile":{"type":"string","description":".natvis file to be used when debugging this process.","default":""},"sourceFileMap":{"type":"object","description":"Optional source file mappings passed to the debug engine. Example: '{ \"/original/source/path\":\"/current/source/path\" }'","default":{"<source-path>":"<target-path>"}},"logging":{"type":"object","description":"Optional flags to determine what types of messages should be logged to the Debug Console.","default":{},"properties":{"exceptions":{"type":"boolean","description":"Optional flag to determine whether exception messages should be logged to the Debug Console. Defaults to true.","default":true},"moduleLoad":{"type":"boolean","description":"Optional flag to determine whether module load events should be logged to the Debug Console. Defaults to true.","default":true},"programOutput":{"type":"boolean","description":"Optional flag to determine whether program output should be logged to the Debug Console. Defaults to true.","default":true},"trace":{"type":"boolean","description":"Optional flag to determine whether diagnostic adapter command tracing should be logged to the Debug Console. Defaults to false.","default":false}}},"requireExactSource":{"type":"boolean","description":"Optional flag to require current source code to match the pdb.","default":true},"symbolOptions":{"description":"Options to control how symbols (.pdb files) are found and loaded.","default":{"searchPaths":[],"searchMicrosoftSymbolServer":false},"type":"object","properties":{"searchPaths":{"type":"array","items":{"type":"string"},"description":"Array of symbol server URLs (example: http​://MyExampleSymbolServer) or directories (example: /build/symbols) to search for .pdb files. These directories will be searched in addition to the default locations -- next to the module and the path where the pdb was originally dropped to.","default":[]},"searchMicrosoftSymbolServer":{"type":"boolean","description":"If 'true' the Microsoft Symbol server (https​://msdl.microsoft.com​/download/symbols) is added to the symbols search path. If unspecified, this option defaults to 'false'.","default":false},"cachePath":{"type":"string","description":"Directory where symbols downloaded from symbol servers should be cached. If unspecified, on Windows the debugger will default to %TEMP%\\SymbolCache.","default":"%TEMP%\\SymbolCache"},"moduleFilter":{"description":"Provides options to control which modules (.dll files) the debugger will attempt to load symbols (.pdb files) for.","default":{"mode":"loadAllButExcluded","excludedModules":[]},"type":"object","required":["mode"],"properties":{"mode":{"type":"string","enum":["loadAllButExcluded","loadOnlyIncluded"],"enumDescriptions":["Load symbols for all modules unless the module is in the 'excludedModules' array.","Do not attempt to load symbols for ANY module unless it is in the 'includedModules' array, or it is included through the 'includeSymbolsNextToModules' setting."],"description":"Controls which of the two basic operating modes the module filter operates in.","default":"loadAllButExcluded"},"excludedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should NOT load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadAllButExcluded'.","default":[]},"includedModules":{"type":"array","items":{"type":"string"},"description":"Array of modules that the debugger should load symbols for. Wildcards (example: MyCompany.*.dll) are supported.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":["MyExampleModule.dll"]},"includeSymbolsNextToModules":{"type":"boolean","description":"If true, for any module NOT in the 'includedModules' array, the debugger will still check next to the module itself and the launching executable, but it will not check paths on the symbol search list. This option defaults to 'true'.\n\nThis property is ignored unless 'mode' is set to 'loadOnlyIncluded'.","default":true}}}}}}}}}],"breakpoints":[{"language":"c"},{"language":"cpp"},{"language":"cuda-cpp"},{"language":"cuda"}],"jsonValidation":[{"fileMatch":"c_cpp_properties.json","url":"cpptools-schema:///c_cpp_properties.schema.json"}],"menus":{"view/title":[{"command":"C_Cpp.referencesViewGroupByType","when":"view == CppReferencesView && refView.isGroupedByFile","group":"navigation"},{"command":"C_Cpp.referencesViewUngroupByType","when":"view == CppReferencesView && !refView.isGroupedByFile","group":"navigation"}],"editor/context":[{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"C_Cpp.SwitchHeaderSource","group":"other1_navigation@1"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"workbench.action.gotoSymbol","group":"other1_navigation@3"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"workbench.action.showAllSymbols","group":"other1_navigation@4"},{"when":"editorLangId == 'c' || editorLangId == 'cpp' || editorLangId == 'cuda-cpp'","command":"C_Cpp.BuildAndDebugActiveFile","group":"other2_debug@1"}],"commandPalette":[{"command":"C_Cpp.referencesViewGroupByType","when":"cppReferenceTypes:hasResults"},{"command":"C_Cpp.referencesViewUngroupByType","when":"cppReferenceTypes:hasResults"}]},"configurationDefaults":{"[cpp]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[cuda-cpp]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[c]":{"editor.wordBasedSuggestions":false,"editor.suggest.insertMode":"replace","editor.semanticHighlighting.enabled":true},"[Log]":{"editor.wordWrap":"off"}},"semanticTokenTypes":[{"id":"referenceType","superType":"class","description":"A C++/CLI reference type."},{"id":"cliProperty","superType":"property","description":"A C++/CLI property."},{"id":"genericType","superType":"class","description":"A C++/CLI generic type."},{"id":"valueType","superType":"class","description":"A C++/CLI value type."},{"id":"templateFunction","superType":"function","description":"A template function."},{"id":"templateType","superType":"class","description":"A template type."},{"id":"operatorOverload","superType":"operator","description":"An overloaded operator."},{"id":"memberOperatorOverload","superType":"operator","description":"An overloaded operator member function."},{"id":"newOperator","superType":"operator","description":"A C++ new or delete operator."},{"id":"customLiteral","superType":"number","description":"A user-defined literal."},{"id":"numberLiteral","superType":"number","description":"A user-defined literal number."},{"id":"stringLiteral","superType":"string","description":"A user-defined literal string."}],"semanticTokenModifiers":[{"id":"global","description":"Annotates a symbol that is declared in global scope."},{"id":"local","description":"Annotates a symbol that is declared in local scope."}],"semanticTokenScopes":[{"scopes":{"label":["entity.name.label"],"variable.global":["variable.other.global"],"variable.local":["variable.other.local"],"property.static":["variable.other.property.static"],"method.static":["entity.name.function.member.static"],"macro":["entity.name.function.preprocessor"],"referenceType":["entity.name.type.class.reference"],"cliProperty":["variable.other.property.cli"],"genericType":["entity.name.type.class.generic"],"valueType":["entity.name.type.class.value"],"templateFunction":["entity.name.function.templated"],"templateType":["entity.name.type.class.templated"],"operatorOverload":["entity.name.function.operator"],"memberOperatorOverload":["entity.name.function.operator.member"],"newOperator":["keyword.operator.new"],"numberLiteral":["entity.name.operator.custom-literal.number"],"customLiteral":["entity.name.operator.custom-literal"],"stringLiteral":["entity.name.operator.custom-literal.string"]}}]},"scripts":{"vscode:prepublish":"yarn run compile","compile":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --env vscode_nls","compile-dev":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development","compile-watch":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-generate && webpack --mode production --env vscode_nls --watch --progress","compile-dev-watch":"node ./tools/prepublish.js && gulp generate-native-strings && webpack --mode development --watch --progress","generateOptionsSchema":"node ./tools/prepublish.js && node ./out/tools/generateOptionsSchema.js","generate-native-strings":"node ./tools/prepublish.js && gulp generate-native-strings","translations-export":"node ./tools/prepublish.js && gulp generate-native-strings && gulp translations-export","translations-generate":"node ./tools/prepublish.js && gulp translations-generate","translations-import":"node ./tools/prepublish.js && gulp translations-import","prepublishjs":"node ./tools/prepublish.js","pretest":"tsc -p test.tsconfig.json","generatePackageHashes":"gulp generate-package-hashes","pr-check":"gulp pr-check","lint":"gulp lint","unitTests":"tsc -p test.tsconfig.json && node ./out/test/unitTests/runTest.js","integrationTests":"tsc -p test.tsconfig.json && node ./out/test/integrationTests/languageServer/runTest.js","intelliSenseFeaturesTests":"tsc -p test.tsconfig.json && node ./out/test/integrationTests/IntelliSenseFeatures/runTest.js","import-edge-strings":"node ./import_edge_strings.js"},"devDependencies":{"@octokit/rest":"^16.28.9","@types/minimatch":"^3.0.3","@types/mkdirp":"^0.5.2","@types/mocha":"^8.2.2","@types/node":"^14.14.0","@types/plist":"^3.0.2","@types/semver":"^7.1.0","@types/tmp":"^0.1.0","@types/vscode":"1.53.0","@types/which":"^1.3.2","@types/yauzl":"^2.9.1","@typescript-eslint/eslint-plugin":"^4.22.1","@typescript-eslint/eslint-plugin-tslint":"^4.22.1","@typescript-eslint/parser":"^4.22.1","async-child-process":"^1.1.1","await-notify":"^1.0.1","eslint":"^7.25.0","eslint-plugin-import":"^2.22.1","eslint-plugin-jsdoc":"^33.1.0","event-stream":"^4.0.1","fs-extra":"^8.1.0","glob":"^7.1.6","gulp":"^4.0.2","gulp-env":"^0.4.0","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^2.6.5","gulp-typescript":"^5.0.1","http-proxy-agent":"^2.1.0","minimist":"^1.2.5","mocha":"^8.3.2","parse-git-config":"^3.0.0","parse5":"^5.1.0","parse5-traverse":"^1.0.3","ts-loader":"^8.1.0","tslint":"^5.19.0","typescript":"^3.5.3","vscode-debugadapter":"^1.35.0","vscode-debugprotocol":"^1.35.0","vscode-nls-dev":"^4.0.0-next.1","vscode-test":"^1.3.0","webpack":"^5.28.0","webpack-cli":"^4.5.0","xml2js":"^0.4.19"},"dependencies":{"comment-json":"^3.0.3","editorconfig":"^0.15.3","escape-string-regexp":"^2.0.0","https-proxy-agent":"^2.2.4","minimatch":"^3.0.4","mkdirp":"^0.5.1","plist":"^3.0.2","tmp":"^0.1.0","vscode-cpptools":"^5.0.0","vscode-extension-telemetry":"^0.1.7","vscode-languageclient":"^5.2.1","vscode-nls":"^4.1.1","vscode-tas-client":"^0.1.22","which":"^2.0.2","yauzl":"^2.10.0"},"resolutions":{"**/mkdirp/minimist":"^0.2.1","yargs-parser":"^15.0.1","y18n":"^5.0.5","hosted-git-info":"^3.0.8","browserslist":"^4.16.6","glob-parent":"^5.1.2"},"runtimeDependencies":[{"description":"C/C++ language components (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2167520","platforms":["linux"],"architectures":["x64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"32AC1D58A5A21527AA24583011F5A3694FCEFB5920677D0CA8D13F70BC0102BE"},{"description":"C/C++ language components (Linux / armhf)","url":"https://go.microsoft.com/fwlink/?linkid=2167624","platforms":["linux"],"architectures":["arm"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"9CB1C36A34DD2F7A53FF5471F1FBB5C0AD65A9E67C17013C7FBF65CDDAF7A7E1"},{"description":"C/C++ language components (Linux / aarch64)","url":"https://go.microsoft.com/fwlink/?linkid=2167623","platforms":["linux"],"architectures":["arm64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"D8F6A5A4A8A13F6F872C94BD522602A7C0E5E5CCA58CE7CE1ED3DC32F82850AC"},{"description":"C/C++ language components (macOS / x86_64)","url":"https://go.microsoft.com/fwlink/?linkid=2167518","platforms":["darwin"],"architectures":["x64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"3EF54224CED1BCC6D64B2A93BFA8093E3D75510C8F96E943049CCB4C656161A2"},{"description":"C/C++ language components (macOS / ARM64)","url":"https://go.microsoft.com/fwlink/?linkid=2167519","platforms":["darwin"],"architectures":["arm64"],"binaries":["./bin/cpptools","./bin/cpptools-srv"],"integrity":"02F2BE96493256237995EF51D4E0CD0345727D27A61135C6FCDB88608406C908"},{"description":"C/C++ language components (Windows)","url":"https://go.microsoft.com/fwlink/?linkid=2167517","platforms":["win32"],"architectures":["x64","x86"],"binaries":["./bin/cpptools.exe","./bin/cpptools-srv.exe"],"integrity":"1E23884810A6EBF56BC7C5C4CB5317723CC3519039D56BF07310735870163E77"},{"description":"C/C++ language components (Windows ARM64)","url":"https://go.microsoft.com/fwlink/?linkid=2167516","platforms":["win32"],"architectures":["arm64"],"binaries":["./bin/cpptools.exe","./bin/cpptools-srv.exe"],"integrity":"26CCA79735F15BE0595510E2A170794CBF7E2EE72F2A565CD9D26970EA35547F"},{"description":"ClangFormat (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162325","platforms":["linux"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format"],"integrity":"3F10BAD92274A07DB5DE0FD922C0CEDA034DECDB9E73DC477DD43CF30B500A7B"},{"description":"ClangFormat (Linux / armhf)","url":"https://go.microsoft.com/fwlink/?LinkID=2162327","platforms":["linux"],"architectures":["arm"],"binaries":["./LLVM/bin/clang-format"],"integrity":"1098291D78FB3E9411C445218BE14D1A96E7242E0B70549DA499C6551D8CA538"},{"description":"ClangFormat (Linux / aarch64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162412","platforms":["linux"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format"],"integrity":"CD5578A21C8D515D15C0611621E44C03DE4E667EFB4EE1A0DE18B08FD9B96794"},{"description":"ClangFormat (macOS / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162416","platforms":["darwin"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format.darwin"],"integrity":"AEB24D394118EAD87087DCC651F2EE329FC335ECE88ED6C8C2A9E93ED60DFECD"},{"description":"ClangFormat (macOS / ARM64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162413","platforms":["darwin"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format.darwin"],"integrity":"AE5507F54562B9DA99E3F8318E25C93BD38AD2FBF4238ADF1C152ECFB0C10FA9"},{"description":"ClangFormat (Windows x86)","url":"https://go.microsoft.com/fwlink/?LinkID=2162326","platforms":["win32"],"architectures":["x86"],"binaries":["./LLVM/bin/clang-format.exe"],"integrity":"928AF7C36F0E148537D8DF4D7AEEAD8A18DF9E4CA5C8BF23E49776EFBE078453"},{"description":"ClangFormat (Windows x64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162415","platforms":["win32"],"architectures":["x64"],"binaries":["./LLVM/bin/clang-format.exe"],"integrity":"7977B82D6BD88C1AEB5071146EDCB45976D1EA66E312EEF9156957CAD0702F35"},{"description":"ClangFormat (Windows arm64)","url":"https://go.microsoft.com/fwlink/?LinkID=2162414","platforms":["win32"],"architectures":["arm64"],"binaries":["./LLVM/bin/clang-format.exe"],"integrity":"6756365C82B5BD90C6A40C13CF8E3599E4A1DB50628111FFDB3A76FF85256BA4"},{"description":"Mono Framework Assemblies","url":"https://go.microsoft.com/fwlink/?LinkId=2027135","platforms":["linux","darwin"],"binaries":[],"integrity":"579295329C1825588B6251EEA56571D1B9555BD529AA1A319CDFE741BC22D786"},{"description":"Mono Runtime (Linux / x86_64)","url":"https://go.microsoft.com/fwlink/?LinkId=2027416","platforms":["linux"],"architectures":["x64"],"binaries":["./debugAdapters/mono.linux-x86_64"],"integrity":"927C5094E83CE64EDC3A267EE1F13267CFA09FC1E9A5ADC870A752C05AD26F17"},{"description":"Mono Runtime (Linux / armhf)","url":"https://aka.ms/mono-runtime-linux-arm","platforms":["linux"],"architectures":["arm"],"binaries":["./debugAdapters/mono.linux-armhf"],"integrity":"D2D1FE7FB5CC5B2A60364F08829467509879D603FC951AC3805B530C8CEEF981"},{"description":"Mono Runtime (Linux / arm64)","url":"https://aka.ms/mono-runtime-linux-arm64","platforms":["linux"],"architectures":["arm64"],"binaries":["./debugAdapters/mono.linux-arm64"],"integrity":"946C54C8C6BF5BF79AC05D4E152F8D8647700FA786C21505832B3C79988339B4"},{"description":"Mono Runtime (macOS)","url":"https://go.microsoft.com/fwlink/?LinkId=2027403","platforms":["darwin"],"binaries":["./debugAdapters/mono.osx"],"integrity":"5D9E5AB3E921D138887BD12FF46B02BFC85B692B438EDFAAEB1E1E7837F1D40B"},{"description":"LLDB-MI (macOS Mojave and higher)","url":"https://go.microsoft.com/fwlink/?linkid=2154927","platforms":["darwin"],"versionRegex":"10\\.(1[0-3]|[0-9])(\\..*)*$","matchVersion":false,"binaries":["./debugAdapters/lldb-mi/bin/lldb-mi"],"integrity":"FA76E76C7D8E5D5CD0CC8E68C6FB70A354750D596DF3CED36ABF78AAD5C562C0"},{"description":"LLDB 3.8.0 (macOS High Sierra and lower)","url":"https://go.microsoft.com/fwlink/?LinkID=817244","platforms":["darwin"],"versionRegex":"10\\.(1[0-3]|[0-9])(\\..*)*$","matchVersion":true,"binaries":["./debugAdapters/lldb/bin/debugserver","./debugAdapters/lldb/bin/lldb-mi","./debugAdapters/lldb/bin/lldb-argdumper","./debugAdapters/lldb/bin/lldb-launcher"],"integrity":"D4ACCD43F562E42CE30879AC15ADF5FB6AA50656795DCE8F3AD32FB108BB3B7E"},{"description":"Visual Studio Windows Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2167539","platforms":["win32"],"architectures":["x64","x86"],"binaries":["./debugAdapters/vsdbg/bin/vsdbg.exe"],"integrity":"3E71A1FDD78FBD9FD46ADEE0DF1283349363078B273CAE765978ACF1BA9C2DB1"},{"description":"Visual Studio Windows ARM64 Debugger","url":"https://go.microsoft.com/fwlink/?linkid=2167648","platforms":["win32"],"architectures":["arm64"],"binaries":["./debugAdapters/vsdbg/bin/vsdbg.exe"],"integrity":"698BA3D45B925F998AACE9ED387ADE4927FFE569860408570FD074DD0CD56252"}],"isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"ms-vscode.cpptools","identifier":{"value":"ms-vscode.cpptools","_lower":"ms-vscode.cpptools"},"extensionLocation":{"$mid":1,"fsPath":"/home/mipy/.vscode-oss/extensions/ms-vscode.cpptools-1.5.1","path":"/home/mipy/.vscode-oss/extensions/ms-vscode.cpptools-1.5.1","scheme":"file"}},{"name":"material-icon-theme","displayName":"Material Icon Theme","description":"Material Design Icons for Visual Studio Code","version":"4.9.0","publisher":"PKief","engines":{"vscode":"^1.51.0"},"homepage":"https://github.com/PKief/vscode-material-icon-theme/blob/main/README.md","repository":{"type":"git","url":"https://github.com/PKief/vscode-material-icon-theme.git"},"bugs":{"url":"https://github.com/PKief/vscode-material-icon-theme/issues"},"icon":"logo.png","galleryBanner":{"color":"#1e1e1e","theme":"dark"},"categories":["Themes"],"keywords":["icons","theme","material","icon-theme","customization"],"extensionKind":["ui","workspace"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["*"],"main":"./dist/extension","contributes":{"iconThemes":[{"id":"material-icon-theme","label":"Material Icon Theme","path":"./dist/material-icons.json","_watch":true}],"commands":[{"command":"material-icon-theme.activateIcons","title":"Material Icons: Activate Icon Theme"},{"command":"material-icon-theme.toggleIconPacks","title":"Material Icons: Configure Icon Packs"},{"command":"material-icon-theme.changeFolderTheme","title":"Material Icons: Change Folder Theme"},{"command":"material-icon-theme.changeFolderColor","title":"Material Icons: Change Folder Color"},{"command":"material-icon-theme.restoreDefaultConfig","title":"Material Icons: Restore Default Configuration"},{"command":"material-icon-theme.toggleExplorerArrows","title":"Material Icons: Toggle Explorer Arrows"},{"command":"material-icon-theme.changeOpacity","title":"Material Icons: Change Opacity"},{"command":"material-icon-theme.toggleGrayscale","title":"Material Icons: Toggle Grayscale"},{"command":"material-icon-theme.changeSaturation","title":"Material Icons: Change Saturation"}],"configuration":{"type":"object","title":"Material Icons","properties":{"material-icon-theme.showWelcomeMessage":{"type":"boolean","default":true,"description":"Show the welcome message after first installation."},"material-icon-theme.showUpdateMessage":{"type":"boolean","default":false,"description":"Show the update message after each update."},"material-icon-theme.showReloadMessage":{"type":"boolean","default":true,"description":"Show restart notification."},"material-icon-theme.activeIconPack":{"type":"string","default":"angular","description":"Select an icon pack that enables specific icons.","enumDescriptions":["Icons for Angular.","Icons for Angular and ngrx.","Icons for React.","Icons for React and Redux.","Icons for Vue.","Icons for Vue and Vuex.","Icons for NestJS.","No icon pack enabled."],"enum":["angular","angular_ngrx","react","react_redux","vue","vue_vuex","nest","none"]},"material-icon-theme.files.associations":{"type":"object","default":{},"description":"Set custom file icon associations."},"material-icon-theme.folders.associations":{"type":"object","default":{},"description":"Set custom folder icon associations."},"material-icon-theme.languages.associations":{"type":"object","default":{},"description":"Set custom language icon associations."},"material-icon-theme.folders.theme":{"type":"string","default":"specific","description":"Set the type for the folder icons.","enumDescriptions":["Select specific folder icons.","Select classic folder icons.","No folder icons."],"enum":["specific","classic","none"]},"material-icon-theme.folders.color":{"type":"string","default":"#90a4ae","pattern":"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$","description":"Change the color of the folder icons."},"material-icon-theme.opacity":{"type":"number","default":1,"minimum":0,"maximum":1,"description":"Change the opacity of the icons."},"material-icon-theme.hidesExplorerArrows":{"type":"boolean","default":false,"description":"Hide explorer arrows before folder."},"material-icon-theme.saturation":{"type":"number","default":1,"minimum":0,"maximum":1,"description":"Change the saturation of the icons."}}}},"scripts":{"build":"npm run compile:dev && npm run postcompile","check":"ts-node ./src/scripts/icons/checks","compile":"webpack --mode production","compile:dev":"webpack --mode none","compile:watch":"webpack --mode none --watch","contributors":"ts-node ./src/scripts/contributors/index.ts","generateJson":"ts-node ./src/scripts/icons/generateJson.ts","lint":"eslint -c .eslintrc.json --ext .ts ./src/**/*.ts","postcompile":"npm run generateJson && npm run check","pretest":"npm run build && tsc -p ./","preview":"ts-node ./src/scripts/preview","test":"node ./out/test/runTest.js","vscode:prepublish":"npm run lint && npm run compile"},"dependencies":{"lodash.merge":"4.6.2","semver":"7.3.5"},"devDependencies":{"@types/glob":"^7.1.4","@types/lodash.merge":"^4.6.6","@types/mocha":"^9.0.0","@types/node":"^16.4.12","@types/puppeteer":"^5.4.4","@types/semver":"^7.3.8","@types/vscode":"~1.51.0","@typescript-eslint/eslint-plugin":"^4.29.0","@typescript-eslint/parser":"^4.29.0","eslint":"^7.32.0","eslint-config-prettier":"^8.3.0","eslint-plugin-prettier":"^3.4.0","glob":"^7.1.7","mocha":"^9.0.3","prettier":"^2.3.2","puppeteer":"^10.2.0","rimraf":"^3.0.2","ts-loader":"^9.2.5","ts-node":"^10.1.0","typescript":"^4.3.5","vscode-test":"^1.6.1","webpack":"^5.48.0","webpack-cli":"^4.7.2"},"uuid":"5db78037-f674-459f-a236-db622c427c5b","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"PKief.material-icon-theme","identifier":{"value":"PKief.material-icon-theme","_lower":"pkief.material-icon-theme"},"extensionLocation":{"$mid":1,"fsPath":"/home/mipy/.vscode-oss/extensions/pkief.material-icon-theme-4.9.0","path":"/home/mipy/.vscode-oss/extensions/pkief.material-icon-theme-4.9.0","scheme":"file"}},{"name":"vscode-yaml","displayName":"YAML","description":"YAML Language Support by Red Hat, with built-in Kubernetes syntax support","author":"Red Hat","contributors":[{"name":"Joshua Pinkney","email":"jpinkney@redhat.com"},{"name":"Yevhen Vydolob","email":"yvydolob@redhat.com"}],"license":"MIT","version":"0.22.0","publisher":"redhat","preview":true,"bugs":"https://github.com/redhat-developer/vscode-yaml/issues","repository":{"type":"git","url":"https://github.com/redhat-developer/vscode-yaml"},"icon":"icon/icon128.png","engines":{"npm":">=7.0.0","vscode":"^1.52.0"},"categories":["Programming Languages","Linters","Snippets","Formatters"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"activationEvents":["onLanguage:yaml"],"keywords":["kubernetes","yaml","autocompletion","validation"],"main":"./out/src/extension","contributes":{"languages":[{"id":"yaml","aliases":["YAML","yaml"],"extensions":[".yml",".eyaml",".eyml",".yaml"],"filenames":[".clang-format","_clang-format"],"firstLine":"^#cloud-config","configuration":"./language-configuration.json"}],"grammars":[{"language":"yaml","scopeName":"source.yaml","path":"./syntaxes/yaml.tmLanguage.json"}],"configuration":{"properties":{"redhat.telemetry.enabled":{"type":"boolean","default":null,"markdownDescription":"Enable usage data and errors to be sent to Red Hat servers. Read our [privacy statement](https://developers.redhat.com/article/tool-data-collection).","scope":"window"},"yaml.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VSCode and the YAML language service."},"yaml.schemas":{"type":"object","default":{},"description":"Associate schemas to YAML files in the current workspace"},"yaml.format.enable":{"type":"boolean","default":true,"description":"Enable/disable default YAML formatter"},"yaml.format.singleQuote":{"type":"boolean","default":false,"description":"Use single quotes instead of double quotes"},"yaml.format.bracketSpacing":{"type":"boolean","default":true,"description":"Print spaces between brackets in objects"},"yaml.format.proseWrap":{"type":"string","default":"preserve","enum":["preserve","never","always"],"description":"Always: wrap prose if it exeeds the print width, Never: never wrap the prose, Preserve: wrap prose as-is"},"yaml.format.printWidth":{"type":"integer","default":80,"description":"Specify the line length that the printer will wrap on"},"yaml.validate":{"type":"boolean","default":true,"description":"Enable/disable validation feature"},"yaml.hover":{"type":"boolean","default":true,"description":"Enable/disable hover feature"},"yaml.completion":{"type":"boolean","default":true,"description":"Enable/disable completion feature"},"yaml.customTags":{"type":"array","default":[],"description":"Custom tags for the parser to use"},"yaml.schemaStore.enable":{"type":"boolean","default":true,"description":"Automatically pull available YAML schemas from JSON Schema Store"},"yaml.schemaStore.url":{"type":"string","default":"https://www.schemastore.org/api/json/catalog.json","description":"URL of schema store catalog to use"},"yaml.disableAdditionalProperties":{"type":"boolean","default":false,"description":"Globally set additionalProperties to false for all objects. So if its true, no extra properties are allowed inside yaml."},"yaml.maxItemsComputed":{"type":"integer","default":5000,"description":"The maximum number of outline symbols and folding regions computed (limited for performance reasons)."}}},"configurationDefaults":{"[yaml]":{"editor.insertSpaces":true,"editor.tabSize":2,"editor.quickSuggestions":{"other":true,"comments":false,"strings":true},"editor.autoIndent":"keep"}}},"extensionDependencies":[],"scripts":{"build":"yarn run clean && yarn run lint && yarn run vscode:prepublish","check-dependencies":"node ./scripts/check-dependencies.js","clean":"rimraf out","compile":"tsc -watch -p ./","format":"prettier --write .","lint":"eslint -c .eslintrc.js --ext .ts src test","test":"sh scripts/e2e.sh","vscode:prepublish":"tsc -p ./"},"devDependencies":{"@types/chai":"^4.2.12","@types/fs-extra":"^9.0.6","@types/mocha":"^2.2.48","@types/node":"^12.12.6","@types/sinon":"^9.0.5","@types/sinon-chai":"^3.2.5","@types/vscode":"^1.52.0","@typescript-eslint/eslint-plugin":"^4.16.1","@typescript-eslint/parser":"^4.16.1","chai":"^4.2.0","eslint":"^7.6.0","eslint-config-prettier":"^6.11.0","eslint-plugin-prettier":"^3.1.4","glob":"^7.1.6","mocha":"^8.0.1","prettier":"^2.0.5","rimraf":"^3.0.2","sinon":"^9.0.3","sinon-chai":"^3.5.0","ts-node":"^3.3.0","typescript":"4.1.2","vscode-test":"^1.4.0"},"dependencies":{"@redhat-developer/vscode-redhat-telemetry":"0.2.0","fs-extra":"^9.1.0","request-light":"^0.4.0","vscode-languageclient":"7.0.0","vscode-nls":"^3.2.1","vscode-uri":"^2.0.3","yaml-language-server":"0.22.0"},"uuid":"2061917f-f76a-458a-8da9-f162de22b97e","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"redhat.vscode-yaml","identifier":{"value":"redhat.vscode-yaml","_lower":"redhat.vscode-yaml"},"extensionLocation":{"$mid":1,"fsPath":"/home/mipy/.vscode-oss/extensions/redhat.vscode-yaml-0.22.0","path":"/home/mipy/.vscode-oss/extensions/redhat.vscode-yaml-0.22.0","scheme":"file"}},{"name":"markdown-snippets","displayName":"Markdown Snippets","publisher":"robole","author":{"name":"Rob O'Leary"},"description":"Extended Markdown snippets.","icon":"img/logo.png","version":"0.7.4","engines":{"vscode":"^1.0.0"},"bugs":{"url":"https://github.com/robole/vscode-markdown-snippets/issues"},"repository":{"type":"git","url":"https://github.com/robole/vscode-markdown-snippets"},"license":"MIT","categories":["Snippets"],"galleryBanner":{"color":"#89009a","theme":"dark"},"keywords":["markdown","snippets","markdown snippets","extended markdown snippets","table","tasks","task list"],"contributes":{"snippets":[{"language":"markdown","path":"./snippets/snippets.code-snippets"}]},"scripts":{"build":"vsce package ."},"devDependencies":{"vsce":"^1.78.0"},"uuid":"3bf5bc6c-8041-42d8-a272-77b5b6b7f664","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"robole.markdown-snippets","identifier":{"value":"robole.markdown-snippets","_lower":"robole.markdown-snippets"},"extensionLocation":{"$mid":1,"fsPath":"/home/mipy/.vscode-oss/extensions/robole.markdown-snippets-0.7.4","path":"/home/mipy/.vscode-oss/extensions/robole.markdown-snippets-0.7.4","scheme":"file"}},{"name":"markdown-preview-enhanced","displayName":"Markdown Preview Enhanced","version":"0.5.22","description":"Markdown Preview Enhanced ported to vscode","categories":["Other"],"keywords":["markdown"],"bugs":{"url":"https://github.com/shd101wyy/vscode-markdown-preview-enhanced/issues"},"repository":"https://github.com/shd101wyy/vscode-markdown-preview-enhanced","license":"NCSA","contributors":["shd101wyy","kachkaev","gabyx"],"publisher":"shd101wyy","main":"./out/src/extension","scripts":{"check":"npm run check:eslint && npm run check:prettier && npm run check:tsc && npm run check:tslint","check:eslint":"eslint \"**/*\"","check:prettier":"prettier --check \"**/*.*\"","check:tsc":"tsc --project . --noEmit","check:tslint":"tslint --project .","compile":"tsc -p ./","fix":"npm run fix:eslint && npm run fix:tslint && npm run fix:prettier","fix:eslint":"eslint --fix \"**/*\"","fix:prettier":"prettier --write \"**/*.*\"","fix:tslint":"tslint --project .","test":"npm run compile && node ./node_modules/vscode/bin/test","vscode:prepublish":"npm run compile","watch":"tsc -watch -p ./"},"contributes":{"commands":[{"command":"markdown-preview-enhanced.openPreviewToTheSide","title":"Markdown Preview Enhanced: Open Preview to the Side","category":"Markdown","icon":{"light":"./media/preview-right-light.svg","dark":"./media/preview-right-dark.svg"}},{"command":"markdown-preview-enhanced.openPreview","title":"Markdown Preview Enhanced: Open Preview","category":"Markdown","icon":{"light":"./media/preview-right-light.svg","dark":"./media/preview-right-dark.svg"}},{"command":"markdown-preview-enhanced.toggleScrollSync","title":"Markdown Preview Enhanced: Toggle Scroll Sync"},{"command":"markdown-preview-enhanced.toggleLiveUpdate","title":"Markdown Preview Enhanced: Toggle Live Update"},{"command":"markdown-preview-enhanced.toggleBreakOnSingleNewLine","title":"Markdown Preview Enhanced: Toggle Break On Single New Line"},{"command":"markdown-preview-enhanced.openImageHelper","title":"Markdown Preview Enhanced: Image Helper"},{"command":"markdown-preview-enhanced.runAllCodeChunks","title":"Markdown Preview Enhanced: Run All Code Chunks"},{"command":"markdown-preview-enhanced.runCodeChunk","title":"Markdown Preview Enhanced: Run Code Chunk"},{"command":"markdown-preview-enhanced.syncPreview","title":"Markdown Preview Enhanced: Sync Preview"},{"command":"markdown-preview-enhanced.customizeCss","title":"Markdown Preview Enhanced: Customize CSS"},{"command":"markdown-preview-enhanced.insertNewSlide","title":"Markdown Preview Enhanced: Insert New Slide"},{"command":"markdown-preview-enhanced.insertTable","title":"Markdown Preview Enhanced: Insert Table"},{"command":"markdown-preview-enhanced.insertPagebreak","title":"Markdown Preview Enhanced: Insert Page Break"},{"command":"markdown-preview-enhanced.createTOC","title":"Markdown Preview Enhanced: Create TOC"},{"command":"markdown-preview-enhanced.openMermaidConfig","title":"Markdown Preview Enhanced: Open Mermaid Config"},{"command":"markdown-preview-enhanced.openMathJaxConfig","title":"Markdown Preview Enhanced: Open MathJax Config"},{"command":"markdown-preview-enhanced.openKaTeXConfig","title":"Markdown Preview Enhanced: Open KaTeX Config"},{"command":"markdown-preview-enhanced.extendParser","title":"Markdown Preview Enhanced: Extend Parser"},{"command":"markdown-preview-enhanced.showUploadedImages","title":"Markdown Preview Enhanced: Show Uploaded Images"}],"configuration":{"type":"object","title":"Markdown Preview Enhanced","properties":{"markdown-preview-enhanced.configPath":{"description":"The configuration directory path. Leave it empty to use '~/.mume' as the config path. Please reload vscode to take effect.","default":"","type":"string"},"markdown-preview-enhanced.usePandocParser":{"description":"Enable this option will render markdown by pandoc instead of markdown-it.","default":false,"type":"boolean"},"markdown-preview-enhanced.breakOnSingleNewLine":{"description":"In Markdown, a single newline character doesn't cause a line break in the generated HTML. In GitHub Flavored Markdown, that is not true. Enable this config option to insert line breaks in rendered HTML for single newlines in Markdown source.","default":true,"type":"boolean"},"markdown-preview-enhanced.scrollSync":{"description":"Automatic scroll sync. This is now partially supported.","default":true,"type":"boolean"},"markdown-preview-enhanced.liveUpdate":{"description":"Re-render the preview as the contents of the source changes, without requiring the source buffer to be saved. If disabled, the preview is re-rendered only when the buffer is saved to disk.","default":true,"type":"boolean"},"markdown-preview-enhanced.singlePreview":{"description":"Open Only One Preview.","default":true,"type":"boolean"},"markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited":{"description":"Automatically show preview of markdown being edited.","default":false,"type":"boolean"},"markdown-preview-enhanced.enableTypographer":{"description":"Enable smartypants and other sweet transforms.","default":false,"type":"boolean"},"markdown-preview-enhanced.mathRenderingOption":{"description":"Choose the Math expression rendering method here. You can also disable math rendering if you want by choosing 'None'.","default":"KaTeX","type":"string","enum":["KaTeX","MathJax","None"]},"markdown-preview-enhanced.mathInlineDelimiters":{"description":"Use customized Math expression inline delimiters.","default":[["$","$"],["\\(","\\)"]],"type":"array"},"markdown-preview-enhanced.mathBlockDelimiters":{"description":"Use customized Math expression block delimiters.","default":[["$$","$$"],["\\[","\\]"]],"type":"array"},"markdown-preview-enhanced.mathRenderingOnlineService":{"description":"Choose the Math expression rendering method option for GFM markdown export (Save as Markdown).","default":"https://latex.codecogs.com/gif.latex","type":"string","enum":["https://latex.codecogs.com/gif.latex","https://latex.codecogs.com/svg.latex","https://latex.codecogs.com/png.latex"]},"markdown-preview-enhanced.enableWikiLinkSyntax":{"description":"Enable Wiki Link syntax support. More information can be found at https://help.github.com/articles/adding-links-to-wikis/","default":true,"type":"boolean"},"markdown-preview-enhanced.enableLinkify":{"description":"Enable or disable conversion of URL-like text to links in the markdown preview.","default":true,"type":"boolean"},"markdown-preview-enhanced.useGitHubStylePipedLink":{"description":"If checked, we use GitHub style piped wiki links, i.e. [[linkText|wikiLink]]. Otherwise, we use [[wikiLink|linkText]] as the original Wikipedia style.","default":true,"type":"boolean"},"markdown-preview-enhanced.wikiLinkFileExtension":{"description":"By default, the extension for wikilink is `.md`. For example: [[test]] will direct to file path `test.md`.","default":".md","type":"string"},"markdown-preview-enhanced.enableEmojiSyntax":{"description":"Enable emoji & font-awesome plugin. This only works for markdown-it parser, but not pandoc parser.","default":true,"type":"boolean"},"markdown-preview-enhanced.enableExtendedTableSyntax":{"description":"Enable extended table syntax to support merging table cells.","default":false,"type":"boolean"},"markdown-preview-enhanced.enableCriticMarkupSyntax":{"description":"Enable CriticMarkup syntax. Only works with markdown-it parser. Please check http://criticmarkup.com/users-guide.php for more information.","default":false,"type":"boolean"},"markdown-preview-enhanced.frontMatterRenderingOption":{"description":"Front matter rendering option","type":"string","enum":["none","table","code block"],"default":"none"},"markdown-preview-enhanced.mermaidTheme":{"description":"Mermaid theme, you can choose one from [\"mermaid.css\", \"mermaid.dark.css\", \"mermaid.forest.css\"]","default":"default","type":"string","enum":["default","dark","forest"]},"markdown-preview-enhanced.codeBlockTheme":{"description":"Code block theme. If `auto.css` is chosen, then the code block theme that best matches the current preview theme will be picked.","default":"auto.css","type":"string","enum":["auto.css","default.css","atom-dark.css","atom-light.css","atom-material.css","coy.css","darcula.css","dark.css","funky.css","github.css","hopscotch.css","monokai.css","okaidia.css","one-dark.css","one-light.css","pen-paper-coffee.css","pojoaque.css","solarized-dark.css","solarized-light.css","twilight.css","vs.css","vue.css","xonokai.css"]},"markdown-preview-enhanced.previewTheme":{"description":"Preview Theme","default":"github-light.css","type":"string","enum":["atom-dark.css","atom-light.css","atom-material.css","github-dark.css","github-light.css","gothic.css","medium.css","monokai.css","newsprint.css","night.css","none.css","one-dark.css","one-light.css","solarized-dark.css","solarized-light.css","vue.css"]},"markdown-preview-enhanced.revealjsTheme":{"description":"RevealJS Presentation Theme","default":"white.css","type":"string","enum":["beige.css","black.css","blood.css","league.css","moon.css","night.css","serif.css","simple.css","sky.css","solarized.css","white.css","none.css"]},"markdown-preview-enhanced.protocolsWhiteList":{"description":"Accepted protocols for links.","default":"http://, https://, atom://, file://, mailto:, tel:","type":"string"},"markdown-preview-enhanced.imageFolderPath":{"description":"When using Image Helper to copy images, by default images will be copied to root image folder path '/assets'","default":"/assets","type":"string"},"markdown-preview-enhanced.imageUploader":{"description":"You can choose different image uploader to upload image","default":"imgur","type":"string","enum":["imgur","sm.ms","qiniu"]},"markdown-preview-enhanced.AccessKey":{"type":"string","default":"","description":"Qiniu AccessKey"},"markdown-preview-enhanced.SecretKey":{"type":"string","default":"","description":"Qiniu SecretKey"},"markdown-preview-enhanced.Bucket":{"type":"string","default":"","description":"Qiniu Bucket"},"markdown-preview-enhanced.Domain":{"type":"string","default":"http://","description":"Qiniu Domain"},"markdown-preview-enhanced.printBackground":{"description":"Whether to print background for file export or not. If set to `false`, then `github-light` preview theme will be used. You can also set `print_background` in front-matter for individual files.","default":false,"type":"boolean"},"markdown-preview-enhanced.chromePath":{"description":"Chrome executable path, which is used for Puppeteer export. Leaving it empty means the path will be found automatically.","default":"","type":"string","scope":"machine"},"markdown-preview-enhanced.imageMagickPath":{"description":"ImageMagick command line path. Should be either `magick` or `convert`. Leaving it empty means the path will be found automatically.","default":"","type":"string","scope":"machine"},"markdown-preview-enhanced.pandocPath":{"description":"Pandoc executable path","default":"pandoc","type":"string","scope":"machine"},"markdown-preview-enhanced.pandocMarkdownFlavor":{"description":"The pandoc markdown flavor you want","default":"markdown-raw_tex+tex_math_single_backslash","type":"string"},"markdown-preview-enhanced.pandocArguments":{"description":"Args passed to pandoc command e.g. [\"--smart\", \"--filter=/bin/exe\"] Please use long argument names.","default":[],"type":"array"},"markdown-preview-enhanced.latexEngine":{"description":"Default latex engine for Pandoc export and latex code chunk.","default":"pdflatex","type":"string"},"markdown-preview-enhanced.enableScriptExecution":{"description":"Enables executing code chunks and importing javascript files.\n⚠️ Please use this feature with caution because it may put your security at risk! Your machine can get hacked if someone makes you open a markdown with malicious code while script execution is enabled.","default":false,"type":"boolean"},"markdown-preview-enhanced.enableHTML5Embed":{"description":" Enables transform audio video link to to html5 embed audio video tags.","default":false,"type":"boolean"},"markdown-preview-enhanced.HTML5EmbedUseImageSyntax":{"description":" Enables video/audio embed with ![]() syntax (default).","default":true,"type":"boolean"},"markdown-preview-enhanced.HTML5EmbedUseLinkSyntax":{"description":"Enables video/audio embed with []() syntax.","default":false,"type":"boolean"},"markdown-preview-enhanced.HTML5EmbedIsAllowedHttp":{"description":"When true embed media with http:// schema in URLs. When false ignore and don't embed them.","default":false,"type":"boolean"},"markdown-preview-enhanced.HTML5EmbedAudioAttributes":{"description":"HTML attributes to pass to audio tags.","default":"controls preload=\"metadata\" width=\"320\"","type":"string"},"markdown-preview-enhanced.HTML5EmbedVideoAttributes":{"description":"HTML attributes to pass to video tags.","default":"controls preload=\"metadata\" width=\"320\" height=\"240\"","type":"string"},"markdown-preview-enhanced.puppeteerWaitForTimeout":{"description":"Puppeteer waits for a certain timeout in milliseconds before the document export.","default":0,"type":"number"},"markdown-preview-enhanced.usePuppeteerCore":{"description":"If set to true, then locally installed puppeteer-core will be required. Otherwise, the puppeteer globally installed by `npm install -g puppeteer` will be required.","default":true,"type":"boolean"},"markdown-preview-enhanced.puppeteerArgs":{"description":"Args passed to puppeteer.launch({args: $puppeteerArgs})","default":[],"type":"array"},"markdown-preview-enhanced.plantumlServer":{"description":"Render using PlantUML server instead of binary. Leave it empty to use the builtin plantuml.jar binary (`java` is required in system path). Eg: \"http://localhost:8080/svg/\"","default":"","type":"string"}}},"keybindings":[{"command":"markdown-preview-enhanced.openPreviewToTheSide","key":"ctrl+k v","mac":"cmd+k v","when":"editorLangId == markdown"},{"command":"markdown-preview-enhanced.openPreview","key":"ctrl+shift+v","mac":"cmd+shift+v","when":"editorLangId == markdown"},{"command":"markdown-preview-enhanced.runAllCodeChunks","key":"ctrl+shift+enter","when":"editorLangId == markdown"},{"command":"markdown-preview-enhanced.runCodeChunk","key":"shift+enter","when":"editorLangId == markdown"},{"command":"markdown-preview-enhanced.syncPreview","key":"ctrl+shift+s","when":"editorLangId == markdown"}],"menus":{"editor/context":[{"command":"markdown-preview-enhanced.openPreviewToTheSide","when":"editorLangId == markdown","group":"markdown-preview-enhanced"}],"editor/title":[{"command":"markdown-preview-enhanced.openPreviewToTheSide","when":"editorLangId == markdown","group":"navigation"}]}},"activationEvents":["onLanguage:markdown","onCommand:markdown-preview-enhanced.openPreviewToTheSide"],"husky":{"hooks":{"pre-commit":"lint-staged"}},"lint-staged":{"**/*.*":["eslint","prettier --write","git add"]},"dependencies":{"@shd101wyy/mume":"^0.6.7","@types/vfile":"^3.0.2"},"devDependencies":{"@types/cheerio":"^0.22.18","@types/jquery":"^3.3.9","@types/mocha":"^5.2.5","@types/node":"^11.11.0","@types/vscode":"1.40.0","eslint":"^5.15.1","husky":"^3.0.9","lint-staged":"^9.4.2","mocha":"^6.1.4","prettier":"^1.18.2","prettier-plugin-packagejson":"^2.0.1","tslint":"^5.13.1","tslint-config-prettier":"^1.18.0","typescript":"^3.0.3"},"engines":{"vscode":"^1.40.0"},"uuid":"3b1db1fc-c7f7-4bd6-9fa4-b499dfa99a8a","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"shd101wyy.markdown-preview-enhanced","identifier":{"value":"shd101wyy.markdown-preview-enhanced","_lower":"shd101wyy.markdown-preview-enhanced"},"extensionLocation":{"$mid":1,"fsPath":"/home/mipy/.vscode-oss/extensions/shd101wyy.markdown-preview-enhanced-0.5.22","path":"/home/mipy/.vscode-oss/extensions/shd101wyy.markdown-preview-enhanced-0.5.22","scheme":"file"}},{"name":"vscode-lldb","displayName":"CodeLLDB","version":"1.6.5","publisher":"vadimcn","description":"Native debugger based on LLDB.","license":"MIT","author":{"name":"vadimcn"},"icon":"images/lldb.png","categories":["Debuggers"],"keywords":["LLDB","Rust","C++","Native","Assembly"],"private":true,"repository":{"type":"git","url":"https://github.com/vadimcn/vscode-lldb.git"},"bugs":{"url":"https://github.com/vadimcn/vscode-lldb/issues"},"qna":"https://github.com/vadimcn/vscode-lldb/discussions","engines":{"vscode":"^1.31.0"},"dependencies":{"string-argv":"^0.3.1","yaml":"^1.10.0","yauzl":"^2.10.0"},"devDependencies":{"@types/vscode":"^1.31.0","@types/node":"^8.10.50","@types/mocha":"^7.0.1","@types/yauzl":"^2.9.0","typescript":"^4.2.4","mocha":"^8.4.0","source-map-support":"^0.5.12","memory-streams":"^0.1.3","vscode-debugprotocol":"^1.47.0","vscode-debugadapter-testsupport":"^1.47.0","vsce":"^1.88.0","webpack":"^5.37.1","webpack-cli":"^4.7.0","ts-loader":"^8.0.0"},"scripts":{"vsce":"vsce","mocha":"mocha","tsc":"tsc","webpack":"webpack"},"main":"extension.js","activationEvents":["onDebug","onUri","onStartupFinished"],"contributes":{"commands":[{"category":"LLDB","title":"Display Format ...","command":"lldb.displayFormat"},{"category":"LLDB","title":"Show Disassembly ...","command":"lldb.showDisassembly"},{"category":"LLDB","title":"Toggle Disassembly","command":"lldb.toggleDisassembly"},{"category":"LLDB","title":"Toggle Pointee Summaries","command":"lldb.toggleDerefPointers"},{"category":"LLDB","title":"Run Diagnostics","command":"lldb.diagnose"},{"category":"LLDB","title":"Generate Launch Configurations from Cargo.toml","command":"lldb.getCargoLaunchConfigs"},{"category":"LLDB","title":"Display Options...","command":"lldb.changeDisplaySettings"},{"category":"LLDB","title":"Copy Value","command":"lldb.modules.copyValue"},{"category":"LLDB","title":"Use Alternate Backend...","command":"lldb.alternateBackend"},{"category":"LLDB","title":"Attach to Process...","command":"lldb.attach"},{"category":"LLDB","title":"Command Prompt","command":"lldb.commandPrompt"},{"category":"LLDB","title":"Symbols...","command":"lldb.symbols","enablement":"debugType == 'lldb'"},{"category":"LLDB","title":"Show Memory...","command":"lldb.showMemory"}],"languages":[{"id":"lldb.disassembly","aliases":["Disassembly"],"extensions":[".disasm"]}],"grammars":[{"language":"lldb.disassembly","scopeName":"source.disassembly","path":"./syntaxes/disassembly.json"}],"views":{"debug":[{"id":"loadedModules","name":"Modules","when":"debugType == 'lldb'"}]},"menus":{"commandPalette":[{"command":"lldb.modules.copyValue","when":"viewItem == lldb.moduleProperty"}],"view/item/context":[{"command":"lldb.modules.copyValue","when":"viewItem == lldb.moduleProperty"}]},"configuration":{"title":"LLDB","properties":{"lldb.library":{"markdownDescription":"Which LLDB library to use.\n\nThis can be either a file path (recommended) or a directory, in which case platform-specific heuristics will be used to locate the actual library file.","type":"string","scope":"resource"},"lldb.adapterEnv":{"description":"Extra environment variables for the debug adapter.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{},"scope":"resource"},"lldb.verboseLogging":{"description":"Turns on verbose logging.","type":"boolean","default":false,"scope":"resource"},"lldb.suppressMissingSourceFiles":{"description":"Suppress VSCode's missing source file errors (requires probing for existence of the source file).","type":"boolean","default":true,"scope":"resource"},"lldb.evaluationTimeout":{"description":"Timeout for expression evaluation, in seconds.","type":"number","default":5,"scope":"resource"},"lldb.displayFormat":{"description":"Default format for displayed variable values.","type":"string","enum":["auto","hex","decimal","binary"],"default":"auto","scope":"resource"},"lldb.showDisassembly":{"description":"When to show disassembly.","type":"string","enum":["auto","never","always"],"default":"auto","enumDescriptions":["Only when source is not available.","Never show.","Always show, even if source is available."],"scope":"resource"},"lldb.dereferencePointers":{"description":"Whether to show the numeric value of pointers, or a summary of the pointee.","type":"boolean","default":true,"scope":"resource"},"lldb.consoleMode":{"description":"Controls whether the debug console input is by default treated as debugger commands or as expressions to evaluate.","type":"string","enum":["commands","evaluate"],"default":"commands","enumDescriptions":["Treat debug console input as debugger commands.  In order to evaluate an expression, prefix it with '?' (question mark).","Treat debug console input as expressions.  In order to execute a debugger command, prefix it with '`' (backtick)."],"scope":"resource"},"lldb.terminalPromptClear":{"description":"A sequence of strings sent to the terminal in order to clear its command prompt.","type":["array","null"],"items":{"type":"string"},"default":null,"scope":"resource"},"lldb.evaluateForHovers":{"description":"Enable value preview when cursor is hovering over a variable.","type":"boolean","default":true,"scope":"resource"},"lldb.commandCompletions":{"description":"Enable command completions in debug console.","type":"boolean","default":true,"scope":"resource"},"lldb.launch.initCommands":{"description":"Commands executed *before* initCommands in individual launch configurations.","type":"array","default":[],"scope":"resource"},"lldb.launch.preRunCommands":{"description":"Commands executed *before* preRunCommands in individual launch configurations.","type":"array","default":[],"scope":"resource"},"lldb.launch.postRunCommands":{"description":"Commands executed *before* postRunCommands in individual launch configurations.","type":"array","default":[],"scope":"resource"},"lldb.launch.exitCommands":{"description":"Commands executed *after* exitCommands in individual launch configurations.","type":"array","default":[],"scope":"resource"},"lldb.launch.env":{"description":"Additional environment variables merged with 'env' individual launch configurations.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{},"scope":"resource"},"lldb.launch.cwd":{"description":"Default program working directory.","type":"string","default":"${workspaceFolder}","scope":"resource"},"lldb.launch.terminal":{"description":"Default terminal type.","type":"string","enum":["integrated","external","console"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."],"default":"console","scope":"resource"},"lldb.launch.stdio":{"description":"Default stdio destination.","type":["null","string","array","object"],"default":null,"scope":"resource"},"lldb.launch.sourceMap":{"description":"Additional entries that will be merged with 'sourceMap's of individual launch configurations.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{},"scope":"resource"},"lldb.launch.relativePathBase":{"description":"Default base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string"},"lldb.launch.sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":["cpp","rust"]},"lldb.launch.expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"lldb.launch.debugServer":{"description":"Debug server port.","type":"number","default":4711},"lldb.dbgconfig":{"description":"Common used-defined settings that can be inserted into launch configurations using ${dbgconfig:name} syntax.","type":"object","patternProperties":{".*":{"type":["string","number","array","boolean","null"]}},"default":{},"scope":"resource"},"lldb.rpcServer":{"description":"Start an RPC server that will accept debug configuration requests.","type":["object","null"],"default":null,"scope":"window"}}},"breakpoints":[{"language":"ada"},{"language":"arm"},{"language":"asm"},{"language":"c"},{"language":"cpp"},{"language":"crystal"},{"language":"d"},{"language":"fortran"},{"language":"fortran-modern"},{"language":"haskell"},{"language":"java"},{"language":"julia"},{"language":"kotlin"},{"language":"lldb.disassembly"},{"language":"nim"},{"language":"objective-c"},{"language":"objective-cpp"},{"language":"objectpascal"},{"language":"ocaml"},{"language":"opencl"},{"language":"pascal"},{"language":"rust"},{"language":"swift"},{"language":"zig"}],"debuggers":[{"type":"lldb","label":"LLDB","languages":["ada","arm","asm","c","cpp","crystal","fortran-modern","fortran","nim","objective-c","objective-cpp","objectpascal","pascal","rust"],"variables":{"pickProcess":"lldb.pickProcess","pickMyProcess":"lldb.pickMyProcess"},"configurationAttributes":{"launch":{"properties":{"program":{"description":"Path to the program to debug.","type":"string"},"cargo":{"description":"Cargo invocation parameters.","type":"object","properties":{"args":{"description":"Cargo command line arguments.","type":"array","default":["test","--no-run"]},"filter":{"description":"Filter applied to compilation artifacts.","type":"object","properties":{"name":{"type":"string"},"kind":{"type":"string"}}}},"required":["args"]},"args":{"description":"Program arguments.","type":["array","string"],"default":[]},"cwd":{"description":"Program working directory.","type":"string","default":"${workspaceFolder}"},"env":{"description":"Additional environment variables.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{}},"stdio":{"description":"Destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.","type":["null","string","array","object"],"default":null},"terminal":{"description":"Terminal type to use.","type":"string","enum":["integrated","external","console"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."],"default":"integrated"},"console":{"description":"Terminal type to use. (This setting is a compatibility alias of 'terminal'.)","type":"string","enum":["integratedTerminal","externalTerminal","internalConsole"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."]},"stopOnEntry":{"description":"Automatically stop debuggee after launch.","type":"boolean","default":true},"initCommands":{"description":"Initialization commands executed upon debugger startup.","type":"array","default":[]},"preRunCommands":{"description":"Commands executed just before the program is launched.","type":"array","default":[]},"postRunCommands":{"description":"Commands executed just after the program has been launched.","type":"array","default":[]},"exitCommands":{"description":"Commands executed at the end of debugging session.","type":"array","default":[]},"expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{}},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string"},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":[]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":"boolean","default":false}},"oneOf":[{"required":["program"]},{"required":["cargo"]}]},"attach":{"properties":{"program":{"description":"Path to the program to attach to.","type":"string"},"pid":{"description":"Process id to attach to.","type":["number","string"],"default":"${command:pickMyProcess}"},"stopOnEntry":{"description":"Automatically stop debuggee after attach.","type":"boolean","default":true},"waitFor":{"description":"Wait for the process to launch (MacOS only).","type":"boolean","default":true},"initCommands":{"description":"Initialization commands executed upon debugger startup.","type":"array","default":[]},"preRunCommands":{"description":"Commands executed just before the program is attached to.","type":"array","default":[]},"postRunCommands":{"description":"Commands executed just after the program has been attached to.","type":"array","default":[]},"exitCommands":{"description":"Commands executed at the end of debugging session.","type":"array","default":[]},"expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{}},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":[]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":"boolean","default":false}}},"custom":{"properties":{"initCommands":{"description":"Initialization commands executed upon debugger startup.","type":"array","default":[]},"targetCreateCommands":{"description":"Commands that create a debug target.","type":"array","default":[]},"processCreateCommands":{"description":"Commands that create debuggee process.","type":"array","default":[]},"exitCommands":{"description":"Commands executed at the end of debugging session.","type":"array","default":[]},"expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{}},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string"},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":[]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":"boolean","default":false},"cargo":{"type":"object"}}}},"configurationSnippets":[{"label":"LLDB: Launch","body":{"type":"lldb","request":"launch","name":"${2:Launch}","program":"^\"\\${workspaceFolder}/${1:<your program>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\""}},{"label":"LLDB: Attach by PID","body":{"type":"lldb","request":"attach","name":"${2:Attach}","pid":"^\"\\${command:pickMyProcess}\" // use \\${command:pickProcess} to pick other users' processes"}},{"label":"LLDB: Attach by Name","body":{"type":"lldb","request":"attach","name":"${2:Attach}","program":"^\"\\${workspaceFolder}/${1:<your program>}\""}},{"label":"LLDB: Custom Launch","body":{"type":"lldb","request":"custom","name":"${2:Custom launch}","targetCreateCommands":["^\"target create \\${workspaceFolder}/${1:<your program>}\""],"processCreateCommands":["settings set target.run-args ${3:value1 value2 value3}","process launch"]}},{"label":"LLDB: Debug Cargo Output","body":{"type":"lldb","request":"launch","name":"${2:Cargo launch}","cargo":{"args":["build","${1:--lib}"]},"program":"^\"\\${cargo:program}\"","args":[]}},{"label":"LLDB: Debug Cargo Tests","body":{"type":"lldb","request":"launch","name":"${2:Cargo test}","cargo":{"args":["test","--no-run","${1:--lib}"]},"program":"^\"\\${cargo:program}\"","args":[]}}]}]},"config":{"platformPackages":{"url":"https://github.com/vadimcn/vscode-lldb/releases/download/v${version}/${platformPackage}","platforms":{"x64-linux":"codelldb-x86_64-linux.vsix","arm64-linux":"codelldb-aarch64-linux.vsix","arm-linux":"codelldb-arm-linux.vsix","x64-darwin":"codelldb-x86_64-darwin.vsix","arm64-darwin":"codelldb-aarch64-darwin.vsix","x64-win32":"codelldb-x86_64-windows.vsix","ia32-win32":"codelldb-x86_64-windows.vsix"}}},"uuid":"bee31e34-a44b-4a76-9ec2-e9fd1439a0f6","isUserBuiltin":false,"isBuiltin":false,"isUnderDevelopment":false,"id":"vadimcn.vscode-lldb","identifier":{"value":"vadimcn.vscode-lldb","_lower":"vadimcn.vscode-lldb"},"extensionLocation":{"$mid":1,"fsPath":"/home/mipy/.vscode-oss/extensions/vadimcn.vscode-lldb-1.6.5","path":"/home/mipy/.vscode-oss/extensions/vadimcn.vscode-lldb-1.6.5","scheme":"file"}}]}